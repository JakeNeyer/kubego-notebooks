{"version":3,"file":"selection.js","sources":["../../../../../../src/cdk-experimental/selection/selection-set.ts","../../../../../../src/cdk-experimental/selection/selection.ts","../../../../../../src/cdk-experimental/selection/select-all.ts","../../../../../../src/cdk-experimental/selection/selection-toggle.ts","../../../../../../src/cdk-experimental/selection/selection-column.ts","../../../../../../src/cdk-experimental/selection/row-selection.ts","../../../../../../src/cdk-experimental/selection/selection-module.ts","../../../../../../src/cdk-experimental/selection/public-api.ts","../../../../../../src/cdk-experimental/selection/index.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TrackByFunction} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * Maintains a set of selected values. One or more values can be added to or removed from the\n * selection.\n */\ninterface TrackBySelection<T> {\n  isSelected(value: SelectableWithIndex<T>): boolean;\n  select(...values: SelectableWithIndex<T>[]): void;\n  deselect(...values: SelectableWithIndex<T>[]): void;\n  changed: Subject<SelectionChange<T>>;\n}\n\n/**\n * A selectable value with an optional index. The index is required when the selection is used with\n * `trackBy`.\n */\nexport interface SelectableWithIndex<T> {\n  value: T;\n  index?: number;\n}\n\n/**\n * Represents the change in the selection set.\n */\nexport interface SelectionChange<T> {\n  before: SelectableWithIndex<T>[];\n  after: SelectableWithIndex<T>[];\n}\n\n/**\n * Maintains a set of selected items. Support selecting and deselecting items, and checking if a\n * value is selected.\n * When constructed with a `trackByFn`, all the items will be identified by applying the `trackByFn`\n * on them. Because `trackByFn` requires the index of the item to be passed in, the `index` field is\n * expected to be set when calling `isSelected`, `select` and `deselect`.\n */\nexport class SelectionSet<T> implements TrackBySelection<T> {\n  private _selectionMap = new Map<T|ReturnType<TrackByFunction<T>>, SelectableWithIndex<T>>();\n  changed = new Subject<SelectionChange<T>>();\n\n  constructor(private _multiple = false, private _trackByFn?: TrackByFunction<T>) {}\n\n  isSelected(value: SelectableWithIndex<T>): boolean {\n    return this._selectionMap.has(this._getTrackedByValue(value));\n  }\n\n  select(...selects: SelectableWithIndex<T>[]) {\n    if (!this._multiple && selects.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('SelectionSet: not multiple selection');\n    }\n\n    const before = this._getCurrentSelection();\n\n    if (!this._multiple) {\n      this._selectionMap.clear();\n    }\n\n    const toSelect: SelectableWithIndex<T>[] = [];\n    for (const select of selects) {\n      if (this.isSelected(select)) {\n        continue;\n      }\n\n      toSelect.push(select);\n      this._markSelected(this._getTrackedByValue(select), select);\n    }\n\n    const after = this._getCurrentSelection();\n\n    this.changed.next({before, after});\n  }\n\n  deselect(...selects: SelectableWithIndex<T>[]) {\n    if (!this._multiple && selects.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('SelectionSet: not multiple selection');\n    }\n\n    const before = this._getCurrentSelection();\n    const toDeselect: SelectableWithIndex<T>[] = [];\n\n    for (const select of selects) {\n      if (!this.isSelected(select)) {\n        continue;\n      }\n\n      toDeselect.push(select);\n      this._markDeselected(this._getTrackedByValue(select));\n    }\n\n    const after = this._getCurrentSelection();\n    this.changed.next({before, after});\n  }\n\n  private _markSelected(key: T|ReturnType<TrackByFunction<T>>, toSelect: SelectableWithIndex<T>) {\n    this._selectionMap.set(key, toSelect);\n  }\n\n  private _markDeselected(key: T|ReturnType<TrackByFunction<T>>) {\n    this._selectionMap.delete(key);\n  }\n\n  private _getTrackedByValue(select: SelectableWithIndex<T>) {\n    if (!this._trackByFn) {\n      return select.value;\n    }\n\n    if (select.index == null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('SelectionSet: index required when trackByFn is used.');\n    }\n\n    return this._trackByFn(select.index!, select.value);\n  }\n\n  private _getCurrentSelection(): SelectableWithIndex<T>[] {\n    return Array.from(this._selectionMap.values());\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CollectionViewer, DataSource, isDataSource, ListRange} from '@angular/cdk/collections';\nimport {\n  AfterContentChecked,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TrackByFunction\n} from '@angular/core';\nimport {Observable, of as observableOf, Subject, Subscription} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {SelectableWithIndex, SelectionChange, SelectionSet} from './selection-set';\n\n/**\n * Manages the selection states of the items and provides methods to check and update the selection\n * states.\n * It must be applied to the parent element if `cdkSelectionToggle`, `cdkSelectAll`,\n * `cdkRowSelection` and `cdkSelectionColumn` are applied.\n */\n@Directive({\n  selector: '[cdkSelection]',\n  exportAs: 'cdkSelection',\n})\nexport class CdkSelection<T> implements OnInit, AfterContentChecked, CollectionViewer, OnDestroy {\n  viewChange: Observable<ListRange>;\n\n  @Input()\n  get dataSource(): TableDataSource<T> {\n    return this._dataSource;\n  }\n  set dataSource(dataSource: TableDataSource<T>) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\n  private _dataSource: TableDataSource<T>;\n\n  @Input('trackBy') trackByFn: TrackByFunction<T>;\n\n  /** Whether to support multiple selection */\n  @Input('cdkSelectionMultiple')\n  get multiple(): boolean {\n    return this._multiple;\n  }\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  protected _multiple: boolean;\n\n  /** Emits when selection changes. */\n  @Output('cdkSelectionChange') readonly change = new EventEmitter<SelectionChange<T>>();\n\n  /** Latest data provided by the data source. */\n  private _data: T[]|readonly T[];\n\n  /** Subscription that listens for the data provided by the data source.  */\n  private _renderChangeSubscription: Subscription|null;\n\n  private _destroyed = new Subject<void>();\n\n  private _selection: SelectionSet<T>;\n\n  private _switchDataSource(dataSource: TableDataSource<T>) {\n    this._data = [];\n\n    // TODO: Move this logic to a shared function in `cdk/collections`.\n    if (isDataSource(this._dataSource)) {\n      this._dataSource.disconnect(this);\n    }\n\n    if (this._renderChangeSubscription) {\n      this._renderChangeSubscription.unsubscribe();\n      this._renderChangeSubscription = null;\n    }\n\n    this._dataSource = dataSource;\n  }\n\n  private _observeRenderChanges() {\n    if (!this._dataSource) {\n      return;\n    }\n\n    let dataStream: Observable<readonly T[]>|undefined;\n\n    if (isDataSource(this._dataSource)) {\n      dataStream = this._dataSource.connect(this);\n    } else if (this._dataSource instanceof Observable) {\n      dataStream = this._dataSource;\n    } else if (Array.isArray(this._dataSource)) {\n      dataStream = observableOf(this._dataSource);\n    }\n\n    if (dataStream == null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Unknown data source');\n    }\n\n    this._renderChangeSubscription =\n        dataStream!.pipe(takeUntil(this._destroyed)).subscribe((data) => {\n          this._data = data || [];\n        });\n  }\n\n  ngOnInit() {\n    this._selection = new SelectionSet<T>(this._multiple, this.trackByFn);\n    this._selection.changed.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n      this._updateSelectAllState();\n      this.change.emit(change);\n    });\n  }\n\n  ngAfterContentChecked() {\n    if (this._dataSource && !this._renderChangeSubscription) {\n      this._observeRenderChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    if (isDataSource(this._dataSource)) {\n      this._dataSource.disconnect(this);\n    }\n  }\n\n  /** Toggles selection for a given value. `index` is required if `trackBy` is used. */\n  toggleSelection(value: T, index?: number) {\n    if (!!this.trackByFn && index == null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkSelection: index required when trackBy is used');\n    }\n\n    if (this.isSelected(value, index)) {\n      this._selection.deselect({value, index});\n    } else {\n      this._selection.select({value, index});\n    }\n  }\n\n  /**\n   * Toggles select-all. If no value is selected, select all values. If all values or some of the\n   * values are selected, de-select all values.\n   */\n  toggleSelectAll() {\n    if (!this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkSelection: multiple selection not enabled');\n    }\n\n    if (this.selectAllState === 'none') {\n      this._selectAll();\n    } else {\n      this._clearAll();\n    }\n  }\n\n  /** Checks whether a value is selected. `index` is required if `trackBy` is used. */\n  isSelected(value: T, index?: number) {\n    if (!!this.trackByFn && index == null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkSelection: index required when trackBy is used');\n    }\n\n    return this._selection.isSelected({value, index});\n  }\n\n  /** Checks whether all values are selected. */\n  isAllSelected() {\n    return this._data.every((value, index) => this._selection.isSelected({value, index}));\n  }\n\n  /** Checks whether partially selected. */\n  isPartialSelected() {\n    return !this.isAllSelected() &&\n        this._data.some((value, index) => this._selection.isSelected({value, index}));\n  }\n\n  private _selectAll() {\n    const toSelect: SelectableWithIndex<T>[] = [];\n    this._data.forEach((value, index) => {\n      toSelect.push({value, index});\n    });\n\n    this._selection.select(...toSelect);\n  }\n\n  private _clearAll() {\n    const toDeselect: SelectableWithIndex<T>[] = [];\n    this._data.forEach((value, index) => {\n      toDeselect.push({value, index});\n    });\n\n    this._selection.deselect(...toDeselect);\n  }\n\n  private _updateSelectAllState() {\n    if (this.isAllSelected()) {\n      this.selectAllState = 'all';\n    } else if (this.isPartialSelected()) {\n      this.selectAllState = 'partial';\n    } else {\n      this.selectAllState = 'none';\n    }\n  }\n\n  selectAllState: SelectAllState = 'none';\n\n  static ngAcceptInputType_multiple: BooleanInput;\n}\n\ntype SelectAllState = 'all'|'none'|'partial';\ntype TableDataSource<T> = DataSource<T>|Observable<readonly T[]>|readonly T[];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Inject, OnDestroy, OnInit, Optional, Self} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable, of as observableOf, Subject} from 'rxjs';\nimport {switchMap, takeUntil} from 'rxjs/operators';\n\nimport {CdkSelection} from './selection';\n\n/**\n * Makes the element a select-all toggle.\n *\n * Must be used within a parent `CdkSelection` directive. It toggles the selection states\n * of all the selection toggles connected with the `CdkSelection` directive.\n * If the element implements `ControlValueAccessor`, e.g. `MatCheckbox`, the directive\n * automatically connects it with the select-all state provided by the `CdkSelection` directive. If\n * not, use `checked$` to get the checked state, `indeterminate$` to get the indeterminate state,\n * and `toggle()` to change the selection state.\n */\n@Directive({\n  selector: '[cdkSelectAll]',\n  exportAs: 'cdkSelectAll',\n})\nexport class CdkSelectAll<T> implements OnDestroy, OnInit {\n  /**\n   * The checked state of the toggle.\n   * Resolves to `true` if all the values are selected, `false` if no value is selected.\n   */\n  readonly checked: Observable<boolean> = this._selection.change.pipe(\n      switchMap(() => observableOf(this._selection.isAllSelected())),\n  );\n\n  /**\n   * The indeterminate state of the toggle.\n   * Resolves to `true` if part (not all) of the values are selected, `false` if all values or no\n   * value at all are selected.\n   */\n  readonly indeterminate: Observable<boolean> = this._selection.change.pipe(\n      switchMap(() => observableOf(this._selection.isPartialSelected())),\n  );\n\n  /**\n   * Toggles the select-all state.\n   * @param event The click event if the toggle is triggered by a (mouse or keyboard) click. If\n   *     using with a native `<input type=\"checkbox\">`, the parameter is required for the\n   *     indeterminate state to work properly.\n   */\n  toggle(event?: MouseEvent) {\n    // This is needed when applying the directive on a native <input type=\"checkbox\">\n    // checkbox. The default behavior needs to be prevented in order to support the indeterminate\n    // state. The timeout is also needed so the checkbox can show the latest state.\n    if (event) {\n      event.preventDefault();\n    }\n\n    setTimeout(() => {\n      this._selection.toggleSelectAll();\n    });\n  }\n\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n      @Optional() @Inject(CdkSelection) private readonly _selection: CdkSelection<T>,\n      @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) private readonly _controlValueAccessor:\n          ControlValueAccessor[]) {}\n\n  ngOnInit() {\n    this._assertValidParentSelection();\n    this._configureControlValueAccessor();\n  }\n\n  private _configureControlValueAccessor() {\n    if (this._controlValueAccessor && this._controlValueAccessor.length) {\n      this._controlValueAccessor[0].registerOnChange((e: unknown) => {\n        if (e === true || e === false) {\n          this.toggle();\n        }\n      });\n      this.checked.pipe(takeUntil(this._destroyed)).subscribe((state) => {\n        this._controlValueAccessor[0].writeValue(state);\n      });\n    }\n  }\n\n  private _assertValidParentSelection() {\n    if (!this._selection && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkSelectAll: missing CdkSelection in the parent');\n    }\n\n    if (!this._selection.multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkSelectAll: CdkSelection must have cdkSelectionMultiple set to true');\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty, NumberInput} from '@angular/cdk/coercion';\nimport {\n  Directive,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Self\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable, of as observableOf, Subject} from 'rxjs';\nimport {distinctUntilChanged, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {CdkSelection} from './selection';\n\n/**\n * Makes the element a selection toggle.\n *\n * Must be used within a parent `CdkSelection` directive.\n * Must be provided with the value. If `trackBy` is used on `CdkSelection`, the index of the value\n * is required. If the element implements `ControlValueAccessor`, e.g. `MatCheckbox`, the directive\n * automatically connects it with the selection state provided by the `CdkSelection` directive. If\n * not, use `checked$` to get the checked state of the value, and `toggle()` to change the selection\n * state.\n */\n@Directive({\n  selector: '[cdkSelectionToggle]',\n  exportAs: 'cdkSelectionToggle',\n})\nexport class CdkSelectionToggle<T> implements OnDestroy, OnInit {\n  /** The value that is associated with the toggle */\n  @Input('cdkSelectionToggleValue') value: T;\n\n  /** The index of the value in the list. Required when used with `trackBy` */\n  @Input('cdkSelectionToggleIndex')\n  get index(): number|undefined { return this._index; }\n  set index(index: number|undefined) { this._index = coerceNumberProperty(index); }\n  protected _index?: number;\n\n  /** The checked state of the selection toggle */\n  readonly checked: Observable<boolean> = this._selection.change.pipe(\n      switchMap(() => observableOf(this._isSelected())),\n      distinctUntilChanged(),\n  );\n\n  /** Toggles the selection */\n  toggle() {\n    this._selection.toggleSelection(this.value, this.index);\n  }\n\n  private _destroyed = new Subject<void>();\n\n  constructor(\n      @Optional() @Inject(CdkSelection) private _selection: CdkSelection<T>,\n      @Optional() @Self() @Inject(NG_VALUE_ACCESSOR) private _controlValueAccessors:\n          ControlValueAccessor[],\n  ) {}\n\n  ngOnInit() {\n    this._assertValidParentSelection();\n    this._configureControlValueAccessor();\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  private _assertValidParentSelection() {\n    if (!this._selection && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkSelectAll: missing CdkSelection in the parent');\n    }\n  }\n\n  private _configureControlValueAccessor() {\n    if (this._controlValueAccessors && this._controlValueAccessors.length) {\n      this._controlValueAccessors[0].registerOnChange((e: unknown) => {\n        if (typeof e === 'boolean') {\n          this.toggle();\n        }\n      });\n\n      this.checked.pipe(takeUntil(this._destroyed)).subscribe((state) => {\n        this._controlValueAccessors[0].writeValue(state);\n      });\n    }\n  }\n\n  private _isSelected(): boolean {\n    return this._selection.isSelected(this.value, this.index);\n  }\n\n  static ngAcceptInputType_index: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkCellDef, CdkColumnDef, CdkHeaderCellDef, CdkTable} from '@angular/cdk/table';\nimport {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewChild,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\n\nimport {CdkSelection} from './selection';\n\n/**\n * Column that adds row selecting checkboxes and a select-all checkbox if `cdkSelectionMultiple` is\n * `true`.\n *\n * Must be used within a parent `CdkSelection` directive.\n */\n@Component({\n  selector: 'cdk-selection-column',\n  template: `\n    <ng-container cdkColumnDef>\n      <th cdkHeaderCell *cdkHeaderCellDef>\n        <input type=\"checkbox\" *ngIf=\"selection.multiple\"\n            cdkSelectAll\n            #allToggler=\"cdkSelectAll\"\n            [checked]=\"allToggler.checked | async\"\n            [indeterminate]=\"allToggler.indeterminate | async\"\n            (click)=\"allToggler.toggle($event)\">\n      </th>\n      <td cdkCell *cdkCellDef=\"let row; let i = $index\">\n        <input type=\"checkbox\"\n            #toggler=\"cdkSelectionToggle\"\n            cdkSelectionToggle\n            [cdkSelectionToggleValue]=\"row\"\n            [cdkSelectionToggleIndex]=\"i\"\n            (click)=\"toggler.toggle()\"\n            [checked]=\"toggler.checked | async\">\n      </td>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CdkSelectionColumn<T> implements OnInit, OnDestroy {\n  /** Column name that should be used to reference this column. */\n  @Input('cdkSelectionColumnName')\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n\n    this._syncColumnDefName();\n  }\n  private _name: string;\n\n  @ViewChild(CdkColumnDef, {static: true}) private readonly _columnDef: CdkColumnDef;\n  @ViewChild(CdkCellDef, {static: true}) private readonly _cell: CdkCellDef;\n  @ViewChild(CdkHeaderCellDef, {static: true}) private readonly _headerCell: CdkHeaderCellDef;\n\n  constructor(\n      @Optional() @Inject(CdkTable) private _table: CdkTable<T>,\n      @Optional() @Inject(CdkSelection) readonly selection: CdkSelection<T>,\n  ) {}\n\n  ngOnInit() {\n    if (!this.selection && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkSelectionColumn: missing CdkSelection in the parent');\n    }\n\n    this._syncColumnDefName();\n\n    if (this._table) {\n      this._columnDef.cell = this._cell;\n      this._columnDef.headerCell = this._headerCell;\n      this._table.addColumnDef(this._columnDef);\n    } else if ((typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('CdkSelectionColumn: missing parent table');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._table) {\n      this._table.removeColumnDef(this._columnDef);\n    }\n  }\n\n  private _syncColumnDefName() {\n    if (this._columnDef) {\n      this._columnDef.name = this._name;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceNumberProperty, NumberInput} from '@angular/cdk/coercion';\nimport {Directive, Input} from '@angular/core';\n\nimport {CdkSelection} from './selection';\n\n/**\n * Applies `cdk-selected` class and `aria-selected` to an element.\n *\n * Must be used within a parent `CdkSelection` directive.\n * Must be provided with the value. The index is required if `trackBy` is used on the `CdkSelection`\n * directive.\n */\n@Directive({\n  selector: '[cdkRowSelection]',\n  host: {\n    '[class.cdk-selected]': '_selection.isSelected(this.value, this.index)',\n    '[attr.aria-selected]': '_selection.isSelected(this.value, this.index)',\n  },\n})\nexport class CdkRowSelection<T> {\n  @Input('cdkRowSelectionValue') value: T;\n\n  @Input('cdkRowSelectionIndex')\n  get index(): number|undefined { return this._index; }\n  set index(index: number|undefined) { this._index = coerceNumberProperty(index); }\n  protected _index?: number;\n\n  constructor(readonly _selection: CdkSelection<T>) {}\n\n  static ngAcceptInputType_index: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {CdkRowSelection} from './row-selection';\nimport {CdkSelectAll} from './select-all';\nimport {CdkSelection} from './selection';\nimport {CdkSelectionColumn} from './selection-column';\nimport {CdkSelectionToggle} from './selection-toggle';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkTableModule,\n  ],\n  exports: [\n    CdkSelection,\n    CdkSelectionToggle,\n    CdkSelectAll,\n    CdkSelectionColumn,\n    CdkRowSelection,\n  ],\n  declarations: [\n    CdkSelection,\n    CdkSelectionToggle,\n    CdkSelectAll,\n    CdkSelectionColumn,\n    CdkRowSelection,\n  ],\n})\nexport class CdkSelectionModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './selection';\nexport * from './select-all';\nexport * from './selection-toggle';\nexport * from './selection-column';\nexport * from './row-selection';\nexport * from './selection-set';\nexport * from './selection-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}