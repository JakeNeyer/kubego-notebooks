{"version":3,"file":"menu.js","sources":["../../../../../../src/cdk-experimental/menu/menu-interface.ts","../../../../../../src/cdk-experimental/menu/menu-stack.ts","../../../../../../src/cdk-experimental/menu/menu-errors.ts","../../../../../../src/cdk-experimental/menu/menu-aim.ts","../../../../../../src/cdk-experimental/menu/menu-item-trigger.ts","../../../../../../src/cdk-experimental/menu/menu-item.ts","../../../../../../src/cdk-experimental/menu/menu-item-selectable.ts","../../../../../../src/cdk-experimental/menu/menu-group.ts","../../../../../../src/cdk-experimental/menu/menu-panel.ts","../../../../../../src/cdk-experimental/menu/pointer-focus-tracker.ts","../../../../../../src/cdk-experimental/menu/menu.ts","../../../../../../src/cdk-experimental/menu/menu-bar.ts","../../../../../../src/cdk-experimental/menu/menu-item-radio.ts","../../../../../../src/cdk-experimental/menu/menu-item-checkbox.ts","../../../../../../src/cdk-experimental/menu/context-menu.ts","../../../../../../src/cdk-experimental/menu/menu-module.ts","../../../../../../src/cdk-experimental/menu/public-api.ts","../../../../../../src/cdk-experimental/menu/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, ElementRef} from '@angular/core';\nimport {MenuStackItem} from './menu-stack';\nimport {FocusOrigin} from '@angular/cdk/a11y';\n\n/** Injection token used to return classes implementing the Menu interface */\nexport const CDK_MENU = new InjectionToken<Menu>('cdk-menu');\n\n/** Interface which specifies Menu operations and used to break circular dependency issues */\nexport interface Menu extends MenuStackItem {\n  /** The element the Menu directive is placed on. */\n  _elementRef: ElementRef<HTMLElement>;\n\n  /** The orientation of the menu */\n  orientation: 'horizontal' | 'vertical';\n\n  /** Place focus on the first MenuItem in the menu. */\n  focusFirstItem(focusOrigin: FocusOrigin): void;\n\n  /** Place focus on the last MenuItem in the menu. */\n  focusLastItem(focusOrigin: FocusOrigin): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject, Observable} from 'rxjs';\n\n/** Events to emit as specified by the caller once the MenuStack is empty. */\nexport const enum FocusNext {\n  nextItem,\n  previousItem,\n  currentItem,\n}\n\n/**\n * Interface for the elements tracked in the MenuStack.\n */\nexport interface MenuStackItem {\n  /** A reference to the previous Menus MenuStack instance. */\n  _menuStack: MenuStack | null;\n}\n\n/**\n * MenuStack allows subscribers to listen for close events (when a MenuStackItem is popped off\n * of the stack) in order to perform closing actions. Upon the MenuStack being empty it emits\n * from the `empty` observable specifying the next focus action which the listener should perform\n * as requested by the closer.\n */\nexport class MenuStack {\n  /** All MenuStackItems tracked by this MenuStack. */\n  private readonly _elements: MenuStackItem[] = [];\n\n  /** Emits the element which was popped off of the stack when requested by a closer. */\n  private readonly _close: Subject<MenuStackItem | undefined> = new Subject();\n\n  /** Emits once the MenuStack has become empty after popping off elements. */\n  private readonly _empty: Subject<FocusNext | undefined> = new Subject();\n\n  /** Observable which emits the MenuStackItem which has been requested to close. */\n  readonly closed: Observable<MenuStackItem | undefined> = this._close;\n\n  /**\n   * Observable which emits when the MenuStack is empty after popping off the last element. It\n   * emits a FocusNext event which specifies the action the closer has requested the listener\n   * perform.\n   */\n  readonly emptied: Observable<FocusNext | undefined> = this._empty;\n\n  /** @param menu the MenuStackItem to put on the stack. */\n  push(menu: MenuStackItem) {\n    this._elements.push(menu);\n  }\n\n  /**\n   * Pop items off of the stack up to and including `lastItem` and emit each on the close\n   * observable. If the stack is empty or `lastItem` is not on the stack it does nothing.\n   * @param lastItem the last item to pop off the stack.\n   * @param focusNext the event to emit on the `empty` observable if the method call resulted in an\n   * empty stack. Does not emit if the stack was initially empty or if `lastItem` was not on the\n   * stack.\n   */\n  close(lastItem: MenuStackItem, focusNext?: FocusNext) {\n    if (this._elements.indexOf(lastItem) >= 0) {\n      let poppedElement: MenuStackItem | undefined;\n      do {\n        poppedElement = this._elements.pop();\n        this._close.next(poppedElement);\n      } while (poppedElement !== lastItem);\n\n      if (this.isEmpty()) {\n        this._empty.next(focusNext);\n      }\n    }\n  }\n\n  /**\n   * Pop items off of the stack up to but excluding `lastItem` and emit each on the close\n   * observable. If the stack is empty or `lastItem` is not on the stack it does nothing.\n   * @param lastItem the element which should be left on the stack\n   * @return whether or not an item was removed from the stack\n   */\n  closeSubMenuOf(lastItem: MenuStackItem) {\n    let removed = false;\n    if (this._elements.indexOf(lastItem) >= 0) {\n      removed = this.peek() !== lastItem;\n      while (this.peek() !== lastItem) {\n        this._close.next(this._elements.pop());\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Pop off all MenuStackItems and emit each one on the `close` observable one by one.\n   * @param focusNext the event to emit on the `empty` observable once the stack is emptied. Does\n   * not emit if the stack was initially empty.\n   */\n  closeAll(focusNext?: FocusNext) {\n    if (!this.isEmpty()) {\n      while (!this.isEmpty()) {\n        const menuStackItem = this._elements.pop();\n        if (menuStackItem) {\n          this._close.next(menuStackItem);\n        }\n      }\n\n      this._empty.next(focusNext);\n    }\n  }\n\n  /** Return true if this stack is empty. */\n  isEmpty() {\n    return !this._elements.length;\n  }\n\n  /** Return the length of the stack. */\n  length() {\n    return this._elements.length;\n  }\n\n  /** Get the top most element on the stack. */\n  peek(): MenuStackItem | undefined {\n    return this._elements[this._elements.length - 1];\n  }\n}\n\n/** NoopMenuStack is a placeholder MenuStack used for inline menus. */\nexport class NoopMenuStack extends MenuStack {\n  /** Noop push - does not add elements to the MenuStack. */\n  push(_: MenuStackItem) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception when a menu panel already has a menu stack.\n * @docs-private\n */\nexport function throwExistingMenuStackError() {\n  throw Error(\n    'CdkMenuPanel is already referenced by different CdkMenuTrigger. Ensure that a menu is' +\n      ' opened by a single trigger only.'\n  );\n}\n\n/**\n * Throws an exception when an instance of the PointerFocusTracker is not provided.\n * @docs-private\n */\nexport function throwMissingPointerFocusTracker() {\n  throw Error('expected an instance of PointerFocusTracker to be provided');\n}\n\n/**\n * Throws an exception when a reference to the parent menu is not provided.\n * @docs-private\n */\nexport function throwMissingMenuReference() {\n  throw Error('expected a reference to the parent menu');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone, OnDestroy, InjectionToken, Directive} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {takeUntil, filter} from 'rxjs/operators';\nimport {PointerFocusTracker, FocusableElement} from './pointer-focus-tracker';\nimport {Menu} from './menu-interface';\nimport {throwMissingPointerFocusTracker, throwMissingMenuReference} from './menu-errors';\n\n/**\n * MenuAim is responsible for determining if a sibling menuitem's menu should be closed when a\n * Toggler item is hovered into. It is up to the hovered in item to call the MenuAim service in\n * order to determine if it may perform its close actions.\n */\nexport interface MenuAim {\n  /** Set the Menu and its PointerFocusTracker. */\n  initialize(menu: Menu, pointerTracker: PointerFocusTracker<FocusableElement & Toggler>): void;\n\n  /**\n   * Calls the `doToggle` callback when it is deemed that the user is not moving towards\n   * the submenu.\n   * @param doToggle the function called when the user is not moving towards the submenu.\n   */\n  toggle(doToggle: () => void): void;\n}\n\n/** Injection token used for an implementation of MenuAim. */\nexport const MENU_AIM = new InjectionToken<MenuAim>('cdk-menu-aim');\n\n/** Capture every nth mouse move event. */\nconst MOUSE_MOVE_SAMPLE_FREQUENCY = 3;\n\n/** The number of mouse move events to track. */\nconst NUM_POINTS = 5;\n\n/**\n * How long to wait before closing a sibling menu if a user stops short of the submenu they were\n * predicted to go into.\n */\nconst CLOSE_DELAY = 300;\n\n/**\n * An element which when hovered over may perform closing actions on the open submenu and\n * potentially open its own menu.\n */\nexport interface Toggler {\n  getMenu(): Menu | undefined;\n}\n\n/** Calculate the slope between point a and b. */\nfunction getSlope(a: Point, b: Point) {\n  return (b.y - a.y) / (b.x - a.x);\n}\n\n/** Calculate the y intercept for the given point and slope. */\nfunction getYIntercept(point: Point, slope: number) {\n  return point.y - slope * point.x;\n}\n\n/** Represents a coordinate of mouse travel. */\ntype Point = {x: number; y: number};\n\n/**\n * Whether the given mouse trajectory line defined by the slope and y intercept falls within the\n * submenu as defined by `submenuPoints`\n * @param submenuPoints the submenu DOMRect points.\n * @param m the slope of the trajectory line.\n * @param b the y intercept of the trajectory line.\n *\n * @return true if any point on the line falls within the submenu.\n */\nfunction isWithinSubmenu(submenuPoints: DOMRect, m: number, b: number) {\n  const {left, right, top, bottom} = submenuPoints;\n\n  // Check for intersection with each edge of the submenu (left, right, top, bottom)\n  // by fixing one coordinate to that edge's coordinate (either x or y) and checking if the\n  // other coordinate is within bounds.\n  return (\n    (m * left + b >= top && m * left + b <= bottom) ||\n    (m * right + b >= top && m * right + b <= bottom) ||\n    ((top - b) / m >= left && (top - b) / m <= right) ||\n    ((bottom - b) / m >= left && (bottom - b) / m <= right)\n  );\n}\n/**\n * TargetMenuAim predicts if a user is moving into a submenu. It calculates the\n * trajectory of the user's mouse movement in the current menu to determine if the\n * mouse is moving towards an open submenu.\n *\n * The determination is made by calculating the slope of the users last NUM_POINTS moves where each\n * pair of points determines if the trajectory line points into the submenu. It uses consensus\n * approach by checking if at least NUM_POINTS / 2 pairs determine that the user is moving towards\n * to submenu.\n */\n@Injectable()\nexport class TargetMenuAim implements MenuAim, OnDestroy {\n  /** The last NUM_POINTS mouse move events. */\n  private readonly _points: Point[] = [];\n\n  /** Reference to the root menu in which we are tracking mouse moves. */\n  private _menu: Menu;\n\n  /** Reference to the root menu's mouse manager. */\n  private _pointerTracker: PointerFocusTracker<Toggler & FocusableElement>;\n\n  /** The id associated with the current timeout call waiting to resolve. */\n  private _timeoutId: number | null;\n\n  /** Emits when this service is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /** Set the Menu and its PointerFocusTracker. */\n  initialize(menu: Menu, pointerTracker: PointerFocusTracker<FocusableElement & Toggler>) {\n    this._menu = menu;\n    this._pointerTracker = pointerTracker;\n    this._subscribeToMouseMoves();\n  }\n\n  /**\n   * Calls the `doToggle` callback when it is deemed that the user is not moving towards\n   * the submenu.\n   * @param doToggle the function called when the user is not moving towards the submenu.\n   */\n  toggle(doToggle: () => void) {\n    // If the menu is horizontal the sub-menus open below and there is no risk of premature\n    // closing of any sub-menus therefore we automatically resolve the callback.\n    if (this._menu.orientation === 'horizontal') {\n      doToggle();\n    }\n\n    this._checkConfigured();\n\n    const siblingItemIsWaiting = !!this._timeoutId;\n    const hasPoints = this._points.length > 1;\n\n    if (hasPoints && !siblingItemIsWaiting) {\n      if (this._isMovingToSubmenu()) {\n        this._startTimeout(doToggle);\n      } else {\n        doToggle();\n      }\n    } else if (!siblingItemIsWaiting) {\n      doToggle();\n    }\n  }\n\n  /**\n   * Start the delayed toggle handler if one isn't running already.\n   *\n   * The delayed toggle handler executes the `doToggle` callback after some period of time iff the\n   * users mouse is on an item in the current menu.\n   */\n  private _startTimeout(doToggle: () => void) {\n    // If the users mouse is moving towards a submenu we don't want to immediately resolve.\n    // Wait for some period of time before determining if the previous menu should close in\n    // cases where the user may have moved towards the submenu but stopped on a sibling menu\n    // item intentionally.\n    const timeoutId = (setTimeout(() => {\n      // Resolve if the user is currently moused over some element in the root menu\n      if (this._pointerTracker!.activeElement && timeoutId === this._timeoutId) {\n        doToggle();\n      }\n      this._timeoutId = null;\n    }, CLOSE_DELAY) as any) as number;\n\n    this._timeoutId = timeoutId;\n  }\n\n  /** Whether the user is heading towards the open submenu. */\n  private _isMovingToSubmenu() {\n    const submenuPoints = this._getSubmenuBounds();\n    if (!submenuPoints) {\n      return false;\n    }\n\n    let numMoving = 0;\n    const currPoint = this._points[this._points.length - 1];\n    // start from the second last point and calculate the slope between each point and the last\n    // point.\n    for (let i = this._points.length - 2; i >= 0; i--) {\n      const previous = this._points[i];\n      const slope = getSlope(currPoint, previous);\n      if (isWithinSubmenu(submenuPoints, slope, getYIntercept(currPoint, slope))) {\n        numMoving++;\n      }\n    }\n    return numMoving >= Math.floor(NUM_POINTS / 2);\n  }\n\n  /** Get the bounding DOMRect for the open submenu. */\n  private _getSubmenuBounds(): DOMRect | undefined {\n    return this._pointerTracker?.previousElement\n      ?.getMenu()\n      ?._elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  /**\n   * Check if a reference to the PointerFocusTracker and menu element is provided.\n   * @throws an error if neither reference is provided.\n   */\n  private _checkConfigured() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._pointerTracker) {\n        throwMissingPointerFocusTracker();\n      }\n      if (!this._menu) {\n        throwMissingMenuReference();\n      }\n    }\n  }\n\n  /** Subscribe to the root menus mouse move events and update the tracked mouse points. */\n  private _subscribeToMouseMoves() {\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent<MouseEvent>(this._menu._elementRef.nativeElement, 'mousemove')\n        .pipe(\n          filter((_: MouseEvent, index: number) => index % MOUSE_MOVE_SAMPLE_FREQUENCY === 0),\n          takeUntil(this._destroyed)\n        )\n        .subscribe((event: MouseEvent) => {\n          this._points.push({x: event.clientX, y: event.clientY});\n          if (this._points.length > NUM_POINTS) {\n            this._points.shift();\n          }\n        });\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n\n/**\n * CdkTargetMenuAim is a provider for the TargetMenuAim service. It should be added to an\n * element with either the `cdkMenu` or `cdkMenuBar` directive and child menu items.\n */\n@Directive({\n  selector: '[cdkTargetMenuAim]',\n  exportAs: 'cdkTargetMenuAim',\n  providers: [{provide: MENU_AIM, useClass: TargetMenuAim}],\n})\nexport class CdkTargetMenuAim {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ViewContainerRef,\n  Inject,\n  OnDestroy,\n  Optional,\n  NgZone,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  OverlayRef,\n  Overlay,\n  OverlayConfig,\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n} from '@angular/cdk/overlay';\nimport {SPACE, ENTER, RIGHT_ARROW, LEFT_ARROW, DOWN_ARROW, UP_ARROW} from '@angular/cdk/keycodes';\nimport {fromEvent, Subject, merge} from 'rxjs';\nimport {takeUntil, filter} from 'rxjs/operators';\nimport {CdkMenuPanel} from './menu-panel';\nimport {Menu, CDK_MENU} from './menu-interface';\nimport {FocusNext, MenuStack} from './menu-stack';\nimport {throwExistingMenuStackError} from './menu-errors';\nimport {MENU_AIM, MenuAim} from './menu-aim';\n\n/**\n * Whether the target element is a menu item to be ignored by the overlay background click handler.\n */\nexport function isClickInsideMenuOverlay(target: Element): boolean {\n  while (target?.parentElement) {\n    const isOpenTrigger =\n      target.getAttribute('aria-expanded') === 'true' &&\n      target.classList.contains('cdk-menu-trigger');\n    const isOverlayMenu =\n      target.classList.contains('cdk-menu') && !target.classList.contains('cdk-menu-inline');\n\n    if (isOpenTrigger || isOverlayMenu) {\n      return true;\n    }\n    target = target.parentElement;\n  }\n  return false;\n}\n\n/**\n * A directive to be combined with CdkMenuItem which opens the Menu it is bound to. If the\n * element is in a top level MenuBar it will open the menu on click, or if a sibling is already\n * opened it will open on hover. If it is inside of a Menu it will open the attached Submenu on\n * hover regardless of its sibling state.\n *\n * The directive must be placed along with the `cdkMenuItem` directive in order to enable full\n * functionality.\n */\n@Directive({\n  selector: '[cdkMenuTriggerFor]',\n  exportAs: 'cdkMenuTriggerFor',\n  host: {\n    '(keydown)': '_toggleOnKeydown($event)',\n    '(click)': 'toggle()',\n    'class': 'cdk-menu-trigger',\n    'aria-haspopup': 'menu',\n    '[attr.aria-expanded]': 'isMenuOpen()',\n  },\n})\nexport class CdkMenuItemTrigger implements OnDestroy {\n  /** Template reference variable to the menu this trigger opens */\n  @Input('cdkMenuTriggerFor')\n  get menuPanel(): CdkMenuPanel | undefined {\n    return this._menuPanel;\n  }\n  set menuPanel(panel: CdkMenuPanel | undefined) {\n    // If the provided panel already has a stack, that means it already has a trigger configured.\n    // Note however that there are some edge cases where two triggers **may** share the same menu,\n    // e.g. two triggers in two separate menus.\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && panel?._menuStack) {\n      throwExistingMenuStackError();\n    }\n\n    this._menuPanel = panel;\n    if (this._menuPanel) {\n      this._menuPanel._menuStack = this._getMenuStack();\n    }\n  }\n\n  /** Reference to the MenuPanel this trigger toggles. */\n  private _menuPanel?: CdkMenuPanel;\n\n  /** Emits when the attached menu is requested to open */\n  @Output('cdkMenuOpened') readonly opened: EventEmitter<void> = new EventEmitter();\n\n  /** Emits when the attached menu is requested to close */\n  @Output('cdkMenuClosed') readonly closed: EventEmitter<void> = new EventEmitter();\n\n  /** The menu stack for this trigger and its sub-menus. */\n  _menuStack: MenuStack = new MenuStack();\n\n  /** A reference to the overlay which manages the triggered menu */\n  private _overlayRef: OverlayRef | null = null;\n\n  /** The content of the menu panel opened by this trigger. */\n  private _panelContent: TemplatePortal;\n\n  /** Emits when this trigger is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  /** Emits when the outside pointer events listener on the overlay should be stopped. */\n  private readonly _stopOutsideClicksListener = merge(this.closed, this._destroyed);\n\n  constructor(\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    protected readonly _viewContainerRef: ViewContainerRef,\n    private readonly _overlay: Overlay,\n    private readonly _ngZone: NgZone,\n    @Optional() @Inject(CDK_MENU) private readonly _parentMenu?: Menu,\n    @Optional() @Inject(MENU_AIM) private readonly _menuAim?: MenuAim,\n    @Optional() private readonly _directionality?: Directionality\n  ) {\n    this._registerCloseHandler();\n    this._subscribeToMouseEnter();\n  }\n\n  /** Open/close the attached menu if the trigger has been configured with one */\n  toggle() {\n    if (this.hasMenu()) {\n      this.isMenuOpen() ? this.closeMenu() : this.openMenu();\n    }\n  }\n\n  /** Open the attached menu. */\n  openMenu() {\n    if (!this.isMenuOpen()) {\n      this.opened.next();\n\n      this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n      this._overlayRef.attach(this._getPortal());\n      this._subscribeToOutsideClicks();\n    }\n  }\n\n  /** Close the opened menu. */\n  closeMenu() {\n    if (this.isMenuOpen()) {\n      this.closed.next();\n\n      this._overlayRef!.detach();\n    }\n    this._closeSiblingTriggers();\n  }\n\n  /** Return true if the trigger has an attached menu */\n  hasMenu() {\n    return !!this.menuPanel;\n  }\n\n  /** Whether the menu this button is a trigger for is open */\n  isMenuOpen() {\n    return this._overlayRef ? this._overlayRef.hasAttached() : false;\n  }\n\n  /**\n   * Get a reference to the rendered Menu if the Menu is open and it is visible in the DOM.\n   * @return the menu if it is open, otherwise undefined.\n   */\n  getMenu(): Menu | undefined {\n    return this.menuPanel?._menu;\n  }\n\n  /**\n   * Subscribe to the mouseenter events and close any sibling menu items if this element is moused\n   * into.\n   */\n  private _subscribeToMouseEnter() {\n    // Closes any sibling menu items and opens the menu associated with this trigger.\n    const toggleMenus = () =>\n      this._ngZone.run(() => {\n        this._closeSiblingTriggers();\n        this.openMenu();\n      });\n\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent(this._elementRef.nativeElement, 'mouseenter')\n        .pipe(\n          filter(() => !this._getMenuStack()?.isEmpty() && !this.isMenuOpen()),\n          takeUntil(this._destroyed)\n        )\n        .subscribe(() => {\n          if (this._menuAim) {\n            this._menuAim.toggle(toggleMenus);\n          } else {\n            toggleMenus();\n          }\n        });\n    });\n  }\n\n  /**\n   * Handles keyboard events for the menu item, specifically opening/closing the attached menu and\n   * focusing the appropriate submenu item.\n   * @param event the keyboard event to handle\n   */\n  _toggleOnKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    switch (keyCode) {\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this.toggle();\n        this.menuPanel?._menu?.focusFirstItem('keyboard');\n        break;\n\n      case RIGHT_ARROW:\n        if (this._parentMenu && this._isParentVertical()) {\n          event.preventDefault();\n          if (this._directionality?.value === 'rtl') {\n            this._getMenuStack().close(this._parentMenu, FocusNext.currentItem);\n          } else {\n            this.openMenu();\n            this.menuPanel?._menu?.focusFirstItem('keyboard');\n          }\n        }\n        break;\n\n      case LEFT_ARROW:\n        if (this._parentMenu && this._isParentVertical()) {\n          event.preventDefault();\n          if (this._directionality?.value === 'rtl') {\n            this.openMenu();\n            this.menuPanel?._menu?.focusFirstItem('keyboard');\n          } else {\n            this._getMenuStack().close(this._parentMenu, FocusNext.currentItem);\n          }\n        }\n        break;\n\n      case DOWN_ARROW:\n      case UP_ARROW:\n        if (!this._isParentVertical()) {\n          event.preventDefault();\n          this.openMenu();\n          keyCode === DOWN_ARROW\n            ? this.menuPanel?._menu?.focusFirstItem('keyboard')\n            : this.menuPanel?._menu?.focusLastItem('keyboard');\n        }\n        break;\n    }\n  }\n\n  /** Close out any sibling menu trigger menus. */\n  private _closeSiblingTriggers() {\n    if (this._parentMenu) {\n      const menuStack = this._getMenuStack();\n\n      // If nothing was removed from the stack and the last element is not the parent item\n      // that means that the parent menu is a menu bar since we don't put the menu bar on the\n      // stack\n      const isParentMenuBar =\n        !menuStack.closeSubMenuOf(this._parentMenu) && menuStack.peek() !== this._parentMenu;\n\n      if (isParentMenuBar) {\n        menuStack.closeAll();\n      }\n    } else {\n      this._getMenuStack().closeAll();\n    }\n  }\n\n  /** Get the configuration object used to create the overlay */\n  private _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  /** Build the position strategy for the overlay which specifies where to place the menu */\n  private _getOverlayPositionStrategy(): FlexibleConnectedPositionStrategy {\n    return this._overlay\n      .position()\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions(this._getOverlayPositions());\n  }\n\n  /** Determine and return where to position the opened menu relative to the menu item */\n  private _getOverlayPositions(): ConnectedPosition[] {\n    // TODO: use a common positioning config from (possibly) cdk/overlay\n    return !this._parentMenu || this._parentMenu.orientation === 'horizontal'\n      ? [\n          {originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top'},\n          {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom'},\n          {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\n          {originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom'},\n        ]\n      : [\n          {originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top'},\n          {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\n          {originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top'},\n          {originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'},\n        ];\n  }\n\n  /**\n   * Get the portal to be attached to the overlay which contains the menu. Allows for the menu\n   * content to change dynamically and be reflected in the application.\n   */\n  private _getPortal() {\n    const hasMenuContentChanged = this.menuPanel?._templateRef !== this._panelContent?.templateRef;\n    if (this.menuPanel && (!this._panelContent || hasMenuContentChanged)) {\n      this._panelContent = new TemplatePortal(this.menuPanel._templateRef, this._viewContainerRef);\n    }\n\n    return this._panelContent;\n  }\n\n  /**\n   * @return true if if the enclosing parent menu is configured in a vertical orientation.\n   */\n  private _isParentVertical() {\n    return this._parentMenu?.orientation === 'vertical';\n  }\n\n  /**\n   * Subscribe to the MenuStack close events if this is a standalone trigger and close out the menu\n   * this triggers when requested.\n   */\n  private _registerCloseHandler() {\n    if (!this._parentMenu) {\n      this._menuStack.closed.pipe(takeUntil(this._destroyed)).subscribe(item => {\n        if (item === this._menuPanel?._menu) {\n          this.closeMenu();\n        }\n      });\n    }\n  }\n\n  /** Get the menu stack for this trigger - either from the parent or this trigger. */\n  private _getMenuStack() {\n    // We use a function since at the construction of the MenuItemTrigger the parent Menu won't have\n    // its menu stack set. Therefore we need to reference the menu stack from the parent each time\n    // we want to use it.\n    return this._parentMenu?._menuStack || this._menuStack;\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n    this._resetPanelMenuStack();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Set the menu panels menu stack back to null. */\n  private _resetPanelMenuStack() {\n    // If a CdkMenuTrigger is placed in a submenu, each time the trigger is rendered (its parent\n    // menu is opened) the panel setter for CdkMenuPanel is called. From the first render onward,\n    // the attached CdkMenuPanel has the MenuStack set. Since we throw an error if a panel already\n    // has a stack set, we want to reset the attached stack here to prevent the error from being\n    // thrown if the trigger re-configures its attached panel (in the case where there is a 1:1\n    // relationship between the panel and trigger).\n    if (this._menuPanel) {\n      this._menuPanel._menuStack = null;\n    }\n  }\n\n  /**\n   * Subscribe to the overlays outside pointer events stream and handle closing out the stack if a\n   * click occurs outside the menus.\n   */\n  private _subscribeToOutsideClicks() {\n    if (this._overlayRef) {\n      this._overlayRef\n        .outsidePointerEvents()\n        .pipe(takeUntil(this._stopOutsideClicksListener))\n        .subscribe(event => {\n          if (!isClickInsideMenuOverlay(event.target as Element)) {\n            this._getMenuStack().closeAll();\n          }\n        });\n    }\n  }\n\n  /** Destroy and unset the overlay reference it if exists */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  Optional,\n  Self,\n  ElementRef,\n  Output,\n  EventEmitter,\n  Inject,\n  HostListener,\n  NgZone,\n  OnDestroy,\n} from '@angular/core';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {SPACE, ENTER, RIGHT_ARROW, LEFT_ARROW} from '@angular/cdk/keycodes';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Subject, fromEvent} from 'rxjs';\nimport {takeUntil, filter} from 'rxjs/operators';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\nimport {Menu, CDK_MENU} from './menu-interface';\nimport {FocusNext} from './menu-stack';\nimport {FocusableElement} from './pointer-focus-tracker';\nimport {Toggler, MENU_AIM, MenuAim} from './menu-aim';\n\n// TODO refactor this to be configurable allowing for custom elements to be removed\n/** Removes all icons from within the given element. */\nfunction removeIcons(element: Element) {\n  for (const icon of Array.from(element.querySelectorAll('mat-icon, .material-icons'))) {\n    icon.parentNode?.removeChild(icon);\n  }\n}\n\n/**\n * Directive which provides the ability for an element to be focused and navigated to using the\n * keyboard when residing in a CdkMenu, CdkMenuBar, or CdkMenuGroup. It performs user defined\n * behavior when clicked.\n */\n@Directive({\n  selector: '[cdkMenuItem]',\n  exportAs: 'cdkMenuItem',\n  host: {\n    '[tabindex]': '_tabindex',\n    'type': 'button',\n    'role': 'menuitem',\n    'class': 'cdk-menu-item',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n})\nexport class CdkMenuItem implements FocusableOption, FocusableElement, Toggler, OnDestroy {\n  /**  Whether the CdkMenuItem is disabled - defaults to false */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /**\n   * If this MenuItem is a regular MenuItem, outputs when it is triggered by a keyboard or mouse\n   * event.\n   */\n  @Output('cdkMenuItemTriggered') readonly triggered: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * The tabindex for this menu item managed internally and used for implementing roving a\n   * tab index.\n   */\n  _tabindex: 0 | -1 = -1;\n\n  /** Emits when the menu item is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    readonly _elementRef: ElementRef<HTMLElement>,\n    private readonly _ngZone: NgZone,\n    @Optional() @Inject(CDK_MENU) private readonly _parentMenu?: Menu,\n    @Optional() @Inject(MENU_AIM) private readonly _menuAim?: MenuAim,\n    @Optional() private readonly _dir?: Directionality,\n    /** Reference to the CdkMenuItemTrigger directive if one is added to the same element */\n    // `CdkMenuItem` is commonly used in combination with a `CdkMenuItemTrigger`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Self() @Optional() private readonly _menuTrigger?: CdkMenuItemTrigger\n  ) {\n    this._setupMouseEnter();\n\n    if (this._isStandaloneItem()) {\n      this._tabindex = 0;\n    }\n  }\n\n  /** Place focus on the element. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('blur')\n  @HostListener('mouseout')\n  /** Reset the _tabindex to -1. */\n  _resetTabIndex() {\n    if (!this._isStandaloneItem()) {\n      this._tabindex = -1;\n    }\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('focus')\n  @HostListener('mouseenter', ['$event'])\n  /**\n   * Set the tab index to 0 if not disabled and it's a focus event, or a mouse enter if this element\n   * is not in a menu bar.\n   */\n  _setTabIndex(event?: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n\n    // don't set the tabindex if there are no open sibling or parent menus\n    if (!event || !this._getMenuStack()?.isEmpty()) {\n      this._tabindex = 0;\n    }\n  }\n\n  /** Whether this menu item is standalone or within a menu or menu bar. */\n  _isStandaloneItem() {\n    return !this._parentMenu;\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('click')\n  /**\n   * If the menu item is not disabled and the element does not have a menu trigger attached, emit\n   * on the cdkMenuItemTriggered emitter and close all open menus.\n   */\n  trigger() {\n    if (!this.disabled && !this.hasMenu()) {\n      this.triggered.next();\n      this._getMenuStack()?.closeAll();\n    }\n  }\n\n  /** Whether the menu item opens a menu. */\n  hasMenu() {\n    return !!this._menuTrigger?.hasMenu();\n  }\n\n  /** Return true if this MenuItem has an attached menu and it is open. */\n  isMenuOpen() {\n    return !!this._menuTrigger?.isMenuOpen();\n  }\n\n  /**\n   * Get a reference to the rendered Menu if the Menu is open and it is visible in the DOM.\n   * @return the menu if it is open, otherwise undefined.\n   */\n  getMenu(): Menu | undefined {\n    return this._menuTrigger?.getMenu();\n  }\n\n  /** Get the MenuItemTrigger associated with this element. */\n  getMenuTrigger(): CdkMenuItemTrigger | undefined {\n    return this._menuTrigger;\n  }\n\n  /** Get the label for this element which is required by the FocusableOption interface. */\n  getLabel(): string {\n    // TODO cloning the tree may be expensive; implement a better method\n    // we know that the current node is an element type\n    const clone = this._elementRef.nativeElement.cloneNode(true) as Element;\n    removeIcons(clone);\n\n    return clone.textContent?.trim() || '';\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('keydown', ['$event'])\n  /**\n   * Handles keyboard events for the menu item, specifically either triggering the user defined\n   * callback or opening/closing the current menu based on whether the left or right arrow key was\n   * pressed.\n   * @param event the keyboard event to handle\n   */\n  _onKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this.trigger();\n        break;\n\n      case RIGHT_ARROW:\n        if (this._parentMenu && this._isParentVertical() && !this.hasMenu()) {\n          event.preventDefault();\n          this._dir?.value === 'rtl'\n            ? this._getMenuStack()?.close(this._parentMenu, FocusNext.previousItem)\n            : this._getMenuStack()?.closeAll(FocusNext.nextItem);\n        }\n        break;\n\n      case LEFT_ARROW:\n        if (this._parentMenu && this._isParentVertical() && !this.hasMenu()) {\n          event.preventDefault();\n          this._dir?.value === 'rtl'\n            ? this._getMenuStack()?.closeAll(FocusNext.nextItem)\n            : this._getMenuStack()?.close(this._parentMenu, FocusNext.previousItem);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Subscribe to the mouseenter events and close any sibling menu items if this element is moused\n   * into.\n   */\n  private _setupMouseEnter() {\n    if (!this._isStandaloneItem()) {\n      const closeOpenSiblings = () =>\n        this._ngZone.run(() => this._getMenuStack()?.closeSubMenuOf(this._parentMenu!));\n\n      this._ngZone.runOutsideAngular(() =>\n        fromEvent(this._elementRef.nativeElement, 'mouseenter')\n          .pipe(\n            filter(() => !this._getMenuStack()?.isEmpty() && !this.hasMenu()),\n            takeUntil(this._destroyed)\n          )\n          .subscribe(() => {\n            if (this._menuAim) {\n              this._menuAim.toggle(closeOpenSiblings);\n            } else {\n              closeOpenSiblings();\n            }\n          })\n      );\n    }\n  }\n\n  /**\n   * Return true if the enclosing parent menu is configured in a horizontal orientation, false\n   * otherwise or if no parent.\n   */\n  private _isParentVertical() {\n    return this._parentMenu?.orientation === 'vertical';\n  }\n\n  /** Get the MenuStack from the parent menu. */\n  private _getMenuStack() {\n    // We use a function since at the construction of the MenuItemTrigger the parent Menu won't have\n    // its menu stack set. Therefore we need to reference the menu stack from the parent each time\n    // we want to use it.\n    return this._parentMenu?._menuStack;\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {Input, Directive, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuItem} from './menu-item';\n\n/** Counter used to set a unique id and name for a selectable item */\nlet nextId = 0;\n\n/**\n * Base class providing checked state for MenuItems along with outputting a clicked event when the\n * element is triggered. It provides functionality for selectable elements.\n */\n@Directive()\nexport abstract class CdkMenuItemSelectable extends CdkMenuItem {\n  /** Event emitted when the selectable item is clicked */\n  @Output('cdkMenuItemToggled') readonly toggled: EventEmitter<CdkMenuItemSelectable> =\n      new EventEmitter();\n\n  /** Whether the element is checked */\n  @Input()\n  get checked() {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  /** The name of the selectable element with a default value */\n  @Input() name: string = `cdk-selectable-item-${nextId++}`;\n\n  /** The id of the selectable element with a default value */\n  @Input() id: string = `cdk-selectable-item-${nextId++}`;\n\n  /** If the element is not disabled emit the click event */\n  trigger() {\n    if (!this.disabled) {\n      this.toggled.next(this);\n    }\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  AfterContentInit,\n  QueryList,\n  OnDestroy,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * Directive which acts as a grouping container for `CdkMenuItem` instances with\n * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n */\n@Directive({\n  selector: '[cdkMenuGroup]',\n  exportAs: 'cdkMenuGroup',\n  host: {\n    'role': 'group',\n    'class': 'cdk-menu-group',\n  },\n  providers: [{provide: UniqueSelectionDispatcher, useClass: UniqueSelectionDispatcher}],\n})\nexport class CdkMenuGroup implements AfterContentInit, OnDestroy {\n  /** Emits the element when checkbox or radiobutton state changed  */\n  @Output() readonly change: EventEmitter<CdkMenuItem> = new EventEmitter();\n\n  /** List of menuitemcheckbox or menuitemradio elements which reside in this group */\n  @ContentChildren(CdkMenuItemSelectable, {descendants: true})\n  private readonly _selectableItems: QueryList<CdkMenuItemSelectable>;\n\n  /** Emits when the _selectableItems QueryList triggers a change */\n  private readonly _selectableChanges: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this._registerMenuSelectionListeners();\n  }\n\n  /**\n   * Register the child selectable elements with the change emitter and ensure any new child\n   * elements do so as well.\n   */\n  private _registerMenuSelectionListeners() {\n    this._selectableItems.forEach(selectable => this._registerClickListener(selectable));\n\n    this._selectableItems.changes.subscribe((selectableItems: QueryList<CdkMenuItemSelectable>) => {\n      this._selectableChanges.next();\n      selectableItems.forEach(selectable => this._registerClickListener(selectable));\n    });\n  }\n\n  /** Register each selectable to emit on the change Emitter when clicked */\n  private _registerClickListener(selectable: CdkMenuItemSelectable) {\n    selectable.toggled\n      .pipe(takeUntil(this._selectableChanges))\n      .subscribe(() => this.change.next(selectable));\n  }\n\n  ngOnDestroy() {\n    this._selectableChanges.next();\n    this._selectableChanges.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\nimport {Menu} from './menu-interface';\nimport {MenuStack} from './menu-stack';\n\n/**\n * Directive applied to an ng-template which wraps a CdkMenu and provides a reference to the\n * child element it wraps which allows for opening of the CdkMenu in an overlay.\n */\n@Directive({selector: 'ng-template[cdkMenuPanel]', exportAs: 'cdkMenuPanel'})\nexport class CdkMenuPanel {\n  /** Reference to the child menu component */\n  _menu?: Menu;\n\n  /** Keep track of open Menus. */\n  _menuStack: MenuStack | null;\n\n  constructor(readonly _templateRef: TemplateRef<unknown>) {}\n\n  /**\n   * Set the Menu component on the menu panel. Since we cannot use ContentChild to fetch the\n   * child Menu component, the child Menu must register its self with the parent MenuPanel.\n   */\n  _registerMenu(child: Menu) {\n    this._menu = child;\n\n    // The ideal solution would be to affect the CdkMenuPanel injector from the CdkMenuTrigger and\n    // inject the menu stack reference into the child menu and menu items, however this isn't\n    // possible at this time.\n    this._menu._menuStack = this._menuStack;\n    this._menuStack?.push(child);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {QueryList, ElementRef} from '@angular/core';\nimport {fromEvent, Observable, defer, Subject} from 'rxjs';\nimport {mapTo, mergeAll, takeUntil, startWith, mergeMap} from 'rxjs/operators';\n\n/** Item to track for mouse focus events. */\nexport interface FocusableElement {\n  /** A reference to the element to be tracked. */\n  _elementRef: ElementRef<HTMLElement>;\n}\n\n/**\n * PointerFocusTracker keeps track of the currently active item under mouse focus. It also has\n * observables which emit when the users mouse enters and leaves a tracked element.\n */\nexport class PointerFocusTracker<T extends FocusableElement> {\n  /** Emits when an element is moused into. */\n  readonly entered: Observable<T> = this._getItemPointerEntries();\n\n  /** Emits when an element is moused out. */\n  readonly exited: Observable<T> = this._getItemPointerExits();\n\n  /** The element currently under mouse focus. */\n  activeElement?: T;\n\n  /** The element previously under mouse focus. */\n  previousElement?: T;\n\n  /** Emits when this is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  constructor(private readonly _items: QueryList<T>) {\n    this.entered.subscribe(element => (this.activeElement = element));\n    this.exited.subscribe(() => {\n      this.previousElement = this.activeElement;\n      this.activeElement = undefined;\n    });\n  }\n\n  /**\n   * Gets a stream of pointer (mouse) entries into the given items.\n   * This should typically run outside the Angular zone.\n   */\n  private _getItemPointerEntries(): Observable<T> {\n    return defer(() =>\n      this._items.changes.pipe(\n        startWith(this._items),\n        mergeMap((list: QueryList<T>) =>\n          list.map(element =>\n            fromEvent(element._elementRef.nativeElement, 'mouseenter').pipe(\n              mapTo(element),\n              takeUntil(this._items.changes)\n            )\n          )\n        ),\n        mergeAll()\n      )\n    );\n  }\n\n  /**\n   * Gets a stream of pointer (mouse) exits out of the given items.\n   * This should typically run outside the Angular zone.\n   */\n  private _getItemPointerExits() {\n    return defer(() =>\n      this._items.changes.pipe(\n        startWith(this._items),\n        mergeMap((list: QueryList<T>) =>\n          list.map(element =>\n            fromEvent(element._elementRef.nativeElement, 'mouseout').pipe(\n              mapTo(element),\n              takeUntil(this._items.changes)\n            )\n          )\n        ),\n        mergeAll()\n      )\n    );\n  }\n\n  /** Stop the managers listeners. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  OnDestroy,\n  Optional,\n  OnInit,\n  NgZone,\n  HostListener,\n  ElementRef,\n  Inject,\n  Self,\n} from '@angular/core';\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  UP_ARROW,\n  DOWN_ARROW,\n  ESCAPE,\n  TAB,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {merge} from 'rxjs';\nimport {take, takeUntil, startWith, mergeMap, mapTo, mergeAll, switchMap} from 'rxjs/operators';\nimport {CdkMenuGroup} from './menu-group';\nimport {CdkMenuPanel} from './menu-panel';\nimport {Menu, CDK_MENU} from './menu-interface';\nimport {CdkMenuItem} from './menu-item';\nimport {MenuStack, MenuStackItem, FocusNext, NoopMenuStack} from './menu-stack';\nimport {PointerFocusTracker} from './pointer-focus-tracker';\nimport {MENU_AIM, MenuAim} from './menu-aim';\n\n/**\n * Directive which configures the element as a Menu which should contain child elements marked as\n * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n * contains accessible keyboard and mouse handling logic.\n *\n * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n */\n@Directive({\n  selector: '[cdkMenu]',\n  exportAs: 'cdkMenu',\n  host: {\n    '[tabindex]': '_isInline() ? 0 : null',\n    'role': 'menu',\n    'class': 'cdk-menu',\n    '[class.cdk-menu-inline]': '_isInline()',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [\n    {provide: CdkMenuGroup, useExisting: CdkMenu},\n    {provide: CDK_MENU, useExisting: CdkMenu},\n  ],\n})\nexport class CdkMenu extends CdkMenuGroup implements Menu, AfterContentInit, OnInit, OnDestroy {\n  /**\n   * Sets the aria-orientation attribute and determines where menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuOrientation') orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'tab' | 'escape'> = new EventEmitter();\n\n  // We provide a default MenuStack implementation in case the menu is an inline menu.\n  // For Menus part of a MenuBar nested within a MenuPanel this will be overwritten\n  // to the correct parent MenuStack.\n  /** Track the Menus making up the open menu stack. */\n  _menuStack: MenuStack = new NoopMenuStack();\n\n  /** Handles keyboard events for the menu. */\n  private _keyManager: FocusKeyManager<CdkMenuItem>;\n\n  /** Manages items under mouse focus. */\n  private _pointerTracker?: PointerFocusTracker<CdkMenuItem>;\n\n  /** List of nested CdkMenuGroup elements */\n  @ContentChildren(CdkMenuGroup, {descendants: true})\n  private readonly _nestedGroups: QueryList<CdkMenuGroup>;\n\n  /** All child MenuItem elements nested in this Menu. */\n  @ContentChildren(CdkMenuItem, {descendants: true})\n  private readonly _allItems: QueryList<CdkMenuItem>;\n\n  /** The Menu Item which triggered the open submenu. */\n  private _openItem?: CdkMenuItem;\n\n  /**\n   * A reference to the enclosing parent menu panel.\n   *\n   * Required to be set when using ViewEngine since ViewEngine does support injecting a reference to\n   * the parent directive if the parent directive is placed on an `ng-template`. If using Ivy, the\n   * injected value will be used over this one.\n   */\n  @Input('cdkMenuPanel') private readonly _explicitPanel?: CdkMenuPanel;\n\n  constructor(\n    private readonly _ngZone: NgZone,\n    readonly _elementRef: ElementRef<HTMLElement>,\n    @Self() @Optional() @Inject(MENU_AIM) private readonly _menuAim?: MenuAim,\n    @Optional() private readonly _dir?: Directionality,\n    // `CdkMenuPanel` is always used in combination with a `CdkMenu`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Optional() private readonly _menuPanel?: CdkMenuPanel\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this._registerWithParentPanel();\n  }\n\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n\n    this._completeChangeEmitter();\n    this._setKeyManager();\n    this._subscribeToMenuOpen();\n    this._subscribeToMenuStack();\n    this._subscribeToMouseManager();\n\n    this._menuAim?.initialize(this, this._pointerTracker!);\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('focus')\n  /** Place focus on the first MenuItem in the menu and set the focus origin. */\n  focusFirstItem(focusOrigin: FocusOrigin = 'program') {\n    this._keyManager.setFocusOrigin(focusOrigin);\n    this._keyManager.setFirstItemActive();\n  }\n\n  /** Place focus on the last MenuItem in the menu and set the focus origin. */\n  focusLastItem(focusOrigin: FocusOrigin = 'program') {\n    this._keyManager.setFocusOrigin(focusOrigin);\n    this._keyManager.setLastItemActive();\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('keydown', ['$event'])\n  /** Handle keyboard events for the Menu. */\n  _handleKeyEvent(event: KeyboardEvent) {\n    const keyManager = this._keyManager;\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n      case RIGHT_ARROW:\n        if (this._isHorizontal()) {\n          event.preventDefault();\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.onKeydown(event);\n        }\n        break;\n\n      case UP_ARROW:\n      case DOWN_ARROW:\n        if (!this._isHorizontal()) {\n          event.preventDefault();\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.onKeydown(event);\n        }\n        break;\n\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this._menuStack.close(this, FocusNext.currentItem);\n        }\n        break;\n\n      case TAB:\n        this._menuStack.closeAll();\n        break;\n\n      default:\n        keyManager.onKeydown(event);\n    }\n  }\n\n  /** Register this menu with its enclosing parent menu panel */\n  private _registerWithParentPanel() {\n    this._getMenuPanel()?._registerMenu(this);\n  }\n\n  /**\n   * Get the enclosing CdkMenuPanel defaulting to the injected reference over the developer\n   * provided reference.\n   */\n  private _getMenuPanel() {\n    return this._menuPanel || this._explicitPanel;\n  }\n\n  /**\n   * Complete the change emitter if there are any nested MenuGroups or register to complete the\n   * change emitter if a MenuGroup is rendered at some point\n   */\n  private _completeChangeEmitter() {\n    if (this._hasNestedGroups()) {\n      this.change.complete();\n    } else {\n      this._nestedGroups.changes.pipe(take(1)).subscribe(() => this.change.complete());\n    }\n  }\n\n  /** Return true if there are nested CdkMenuGroup elements within the Menu */\n  private _hasNestedGroups() {\n    // view engine has a bug where @ContentChildren will return the current element\n    // along with children if the selectors match - not just the children.\n    // Here, if there is at least one element, we check to see if the first element is a CdkMenu in\n    // order to ensure that we return true iff there are child CdkMenuGroup elements.\n    return this._nestedGroups.length > 0 && !(this._nestedGroups.first instanceof CdkMenu);\n  }\n\n  /** Setup the FocusKeyManager with the correct orientation for the menu. */\n  private _setKeyManager() {\n    this._keyManager = new FocusKeyManager(this._allItems)\n      .withWrap()\n      .withTypeAhead()\n      .withHomeAndEnd();\n\n    if (this._isHorizontal()) {\n      this._keyManager.withHorizontalOrientation(this._dir?.value || 'ltr');\n    } else {\n      this._keyManager.withVerticalOrientation();\n    }\n  }\n\n  /**\n   * Set the PointerFocusTracker and ensure that when mouse focus changes the key manager is updated\n   * with the latest menu item under mouse focus.\n   */\n  private _subscribeToMouseManager() {\n    this._ngZone.runOutsideAngular(() => {\n      this._pointerTracker = new PointerFocusTracker(this._allItems);\n      this._pointerTracker.entered\n        .pipe(takeUntil(this.closed))\n        .subscribe(item => this._keyManager.setActiveItem(item));\n    });\n  }\n\n  /** Subscribe to the MenuStack close and empty observables. */\n  private _subscribeToMenuStack() {\n    this._menuStack.closed\n      .pipe(takeUntil(this.closed))\n      .subscribe(item => this._closeOpenMenu(item));\n\n    this._menuStack.emptied\n      .pipe(takeUntil(this.closed))\n      .subscribe(event => this._toggleMenuFocus(event));\n  }\n\n  /**\n   * Close the open menu if the current active item opened the requested MenuStackItem.\n   * @param item the MenuStackItem requested to be closed.\n   */\n  private _closeOpenMenu(menu: MenuStackItem | undefined) {\n    const keyManager = this._keyManager;\n    const trigger = this._openItem;\n    if (menu === trigger?.getMenuTrigger()?.getMenu()) {\n      trigger?.getMenuTrigger()?.closeMenu();\n      // If the user has moused over a sibling item we want to focus the element under mouse focus\n      // not the trigger which previously opened the now closed menu.\n      if (trigger) {\n        keyManager.setActiveItem(this._pointerTracker?.activeElement || trigger);\n      }\n    }\n  }\n\n  /** Set focus the either the current, previous or next item based on the FocusNext event. */\n  private _toggleMenuFocus(event: FocusNext | undefined) {\n    const keyManager = this._keyManager;\n    switch (event) {\n      case FocusNext.nextItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setNextItemActive();\n        break;\n\n      case FocusNext.previousItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setPreviousItemActive();\n        break;\n\n      case FocusNext.currentItem:\n        if (keyManager.activeItem) {\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.setActiveItem(keyManager.activeItem);\n        }\n        break;\n    }\n  }\n\n  // TODO(andy9775): remove duplicate logic between menu an menu bar\n  /**\n   * Subscribe to the menu trigger's open events in order to track the trigger which opened the menu\n   * and stop tracking it when the menu is closed.\n   */\n  private _subscribeToMenuOpen() {\n    const exitCondition = merge(this._allItems.changes, this.closed);\n    this._allItems.changes\n      .pipe(\n        startWith(this._allItems),\n        mergeMap((list: QueryList<CdkMenuItem>) =>\n          list\n            .filter(item => item.hasMenu())\n            .map(item => item.getMenuTrigger()!.opened.pipe(mapTo(item), takeUntil(exitCondition)))\n        ),\n        mergeAll(),\n        switchMap((item: CdkMenuItem) => {\n          this._openItem = item;\n          return item.getMenuTrigger()!.closed;\n        }),\n        takeUntil(this.closed)\n      )\n      .subscribe(() => (this._openItem = undefined));\n  }\n\n  /** Return true if this menu has been configured in a horizontal orientation. */\n  private _isHorizontal() {\n    return this.orientation === 'horizontal';\n  }\n\n  /**\n   * Return true if this menu is an inline menu. That is, it does not exist in a pop-up and is\n   * always visible in the dom.\n   */\n  _isInline() {\n    // NoopMenuStack is the default. If this menu is not inline than the NoopMenuStack is replaced\n    // automatically.\n    return this._menuStack instanceof NoopMenuStack;\n  }\n\n  ngOnDestroy() {\n    this._emitClosedEvent();\n    this._pointerTracker?.destroy();\n  }\n\n  /** Emit and complete the closed event emitter */\n  private _emitClosedEvent() {\n    this.closed.next();\n    this.closed.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  OnDestroy,\n  Optional,\n  NgZone,\n  HostListener,\n  ElementRef,\n  Inject,\n  Self,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\nimport {LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, ESCAPE, TAB} from '@angular/cdk/keycodes';\nimport {takeUntil, mergeAll, mapTo, startWith, mergeMap, switchMap} from 'rxjs/operators';\nimport {Subject, merge} from 'rxjs';\nimport {CdkMenuGroup} from './menu-group';\nimport {CDK_MENU, Menu} from './menu-interface';\nimport {CdkMenuItem} from './menu-item';\nimport {MenuStack, MenuStackItem, FocusNext} from './menu-stack';\nimport {PointerFocusTracker} from './pointer-focus-tracker';\nimport {MenuAim, MENU_AIM} from './menu-aim';\n\n/**\n * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n * role, aria attributes, and accessible keyboard and mouse handling logic. The component that\n * this directive is applied to should contain components marked with CdkMenuItem.\n *\n */\n@Directive({\n  selector: '[cdkMenuBar]',\n  exportAs: 'cdkMenuBar',\n  host: {\n    'role': 'menubar',\n    'class': 'cdk-menu-bar',\n    'tabindex': '0',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [\n    {provide: CdkMenuGroup, useExisting: CdkMenuBar},\n    {provide: CDK_MENU, useExisting: CdkMenuBar},\n    {provide: MenuStack, useClass: MenuStack},\n  ],\n})\nexport class CdkMenuBar extends CdkMenuGroup implements Menu, AfterContentInit, OnDestroy {\n  /**\n   * Sets the aria-orientation attribute and determines where menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuBarOrientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /** Handles keyboard events for the MenuBar. */\n  private _keyManager: FocusKeyManager<CdkMenuItem>;\n\n  /** Manages items under mouse focus */\n  private _pointerTracker?: PointerFocusTracker<CdkMenuItem>;\n\n  /** Emits when the MenuBar is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  /** All child MenuItem elements nested in this MenuBar. */\n  @ContentChildren(CdkMenuItem, {descendants: true})\n  private readonly _allItems: QueryList<CdkMenuItem>;\n\n  /** The Menu Item which triggered the open submenu. */\n  private _openItem?: CdkMenuItem;\n\n  constructor(\n    readonly _menuStack: MenuStack,\n    private readonly _ngZone: NgZone,\n    readonly _elementRef: ElementRef<HTMLElement>,\n    @Self() @Optional() @Inject(MENU_AIM) private readonly _menuAim?: MenuAim,\n    @Optional() private readonly _dir?: Directionality\n  ) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n\n    this._setKeyManager();\n    this._subscribeToMenuOpen();\n    this._subscribeToMenuStack();\n    this._subscribeToMouseManager();\n\n    this._menuAim?.initialize(this, this._pointerTracker!);\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('focus')\n  /** Place focus on the first MenuItem in the menu and set the focus origin. */\n  focusFirstItem(focusOrigin: FocusOrigin = 'program') {\n    this._keyManager.setFocusOrigin(focusOrigin);\n    this._keyManager.setFirstItemActive();\n  }\n\n  /** Place focus on the last MenuItem in the menu and set the focus origin. */\n  focusLastItem(focusOrigin: FocusOrigin = 'program') {\n    this._keyManager.setFocusOrigin(focusOrigin);\n    this._keyManager.setLastItemActive();\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('keydown', ['$event'])\n  /**\n   * Handle keyboard events, specifically changing the focused element and/or toggling the active\n   * items menu.\n   * @param event the KeyboardEvent to handle.\n   */\n  _handleKeyEvent(event: KeyboardEvent) {\n    const keyManager = this._keyManager;\n    switch (event.keyCode) {\n      case UP_ARROW:\n      case DOWN_ARROW:\n      case LEFT_ARROW:\n      case RIGHT_ARROW:\n        const horizontalArrows = event.keyCode === LEFT_ARROW || event.keyCode === RIGHT_ARROW;\n        // For a horizontal menu if the left/right keys were clicked, or a vertical menu if the\n        // up/down keys were clicked: if the current menu is open, close it then focus and open the\n        // next  menu.\n        if (\n          (this._isHorizontal() && horizontalArrows) ||\n          (!this._isHorizontal() && !horizontalArrows)\n        ) {\n          event.preventDefault();\n\n          const prevIsOpen = keyManager.activeItem?.isMenuOpen();\n          keyManager.activeItem?.getMenuTrigger()?.closeMenu();\n\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.onKeydown(event);\n          if (prevIsOpen) {\n            keyManager.activeItem?.getMenuTrigger()?.openMenu();\n          }\n        }\n        break;\n\n      case ESCAPE:\n        event.preventDefault();\n        keyManager.activeItem?.getMenuTrigger()?.closeMenu();\n        break;\n\n      case TAB:\n        keyManager.activeItem?.getMenuTrigger()?.closeMenu();\n        break;\n\n      default:\n        keyManager.onKeydown(event);\n    }\n  }\n\n  /** Setup the FocusKeyManager with the correct orientation for the menu bar. */\n  private _setKeyManager() {\n    this._keyManager = new FocusKeyManager(this._allItems)\n      .withWrap()\n      .withTypeAhead()\n      .withHomeAndEnd();\n\n    if (this._isHorizontal()) {\n      this._keyManager.withHorizontalOrientation(this._dir?.value || 'ltr');\n    } else {\n      this._keyManager.withVerticalOrientation();\n    }\n  }\n\n  /**\n   * Set the PointerFocusTracker and ensure that when mouse focus changes the key manager is updated\n   * with the latest menu item under mouse focus.\n   */\n  private _subscribeToMouseManager() {\n    this._ngZone.runOutsideAngular(() => {\n      this._pointerTracker = new PointerFocusTracker(this._allItems);\n      this._pointerTracker.entered.pipe(takeUntil(this._destroyed)).subscribe(item => {\n        if (this._hasOpenSubmenu()) {\n          this._keyManager.setActiveItem(item);\n        }\n      });\n    });\n  }\n\n  /** Subscribe to the MenuStack close and empty observables. */\n  private _subscribeToMenuStack() {\n    this._menuStack.closed\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(item => this._closeOpenMenu(item));\n\n    this._menuStack.emptied\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(event => this._toggleOpenMenu(event));\n  }\n\n  /**\n   * Close the open menu if the current active item opened the requested MenuStackItem.\n   * @param item the MenuStackItem requested to be closed.\n   */\n  private _closeOpenMenu(menu: MenuStackItem | undefined) {\n    const trigger = this._openItem;\n    const keyManager = this._keyManager;\n    if (menu === trigger?.getMenuTrigger()?.getMenu()) {\n      trigger?.getMenuTrigger()?.closeMenu();\n      // If the user has moused over a sibling item we want to focus the element under mouse focus\n      // not the trigger which previously opened the now closed menu.\n      if (trigger) {\n        keyManager.setActiveItem(this._pointerTracker?.activeElement || trigger);\n      }\n    }\n  }\n\n  /**\n   * Set focus to either the current, previous or next item based on the FocusNext event, then\n   * open the previous or next item.\n   */\n  private _toggleOpenMenu(event: FocusNext | undefined) {\n    const keyManager = this._keyManager;\n    switch (event) {\n      case FocusNext.nextItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setNextItemActive();\n        keyManager.activeItem?.getMenuTrigger()?.openMenu();\n        break;\n\n      case FocusNext.previousItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setPreviousItemActive();\n        keyManager.activeItem?.getMenuTrigger()?.openMenu();\n        break;\n\n      case FocusNext.currentItem:\n        if (keyManager.activeItem) {\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.setActiveItem(keyManager.activeItem);\n        }\n        break;\n    }\n  }\n\n  /**\n   * @return true if the menu bar is configured to be horizontal.\n   */\n  private _isHorizontal() {\n    return this.orientation === 'horizontal';\n  }\n\n  /**\n   * Subscribe to the menu trigger's open events in order to track the trigger which opened the menu\n   * and stop tracking it when the menu is closed.\n   */\n  private _subscribeToMenuOpen() {\n    const exitCondition = merge(this._allItems.changes, this._destroyed);\n    this._allItems.changes\n      .pipe(\n        startWith(this._allItems),\n        mergeMap((list: QueryList<CdkMenuItem>) =>\n          list\n            .filter(item => item.hasMenu())\n            .map(item => item.getMenuTrigger()!.opened.pipe(mapTo(item), takeUntil(exitCondition)))\n        ),\n        mergeAll(),\n        switchMap((item: CdkMenuItem) => {\n          this._openItem = item;\n          return item.getMenuTrigger()!.closed;\n        }),\n        takeUntil(this._destroyed)\n      )\n      .subscribe(() => (this._openItem = undefined));\n  }\n\n  /** Return true if the MenuBar has an open submenu. */\n  private _hasOpenSubmenu() {\n    return !!this._openItem;\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._pointerTracker?.destroy();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {Directive, OnDestroy, ElementRef, Self, Optional, Inject, NgZone} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\nimport {CDK_MENU, Menu} from './menu-interface';\nimport {MENU_AIM, MenuAim} from './menu-aim';\n\n/**\n * A directive providing behavior for the \"menuitemradio\" ARIA role, which behaves similarly to\n * a conventional radio-button. Any sibling `CdkMenuItemRadio` instances within the same `CdkMenu`\n * or `CdkMenuGroup` comprise a radio group with unique selection enforced.\n */\n@Directive({\n  selector: '[cdkMenuItemRadio]',\n  exportAs: 'cdkMenuItemRadio',\n  host: {\n    '[tabindex]': '_tabindex',\n    'type': 'button',\n    'role': 'menuitemradio',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [\n    {provide: CdkMenuItemSelectable, useExisting: CdkMenuItemRadio},\n    {provide: CdkMenuItem, useExisting: CdkMenuItemSelectable},\n  ],\n})\nexport class CdkMenuItemRadio extends CdkMenuItemSelectable implements OnDestroy {\n  /** Function to unregister the selection dispatcher */\n  private _removeDispatcherListener: () => void;\n\n  constructor(\n    private readonly _selectionDispatcher: UniqueSelectionDispatcher,\n    element: ElementRef<HTMLElement>,\n    ngZone: NgZone,\n    @Optional() @Inject(CDK_MENU) parentMenu?: Menu,\n    @Optional() @Inject(MENU_AIM) menuAim?: MenuAim,\n    @Optional() dir?: Directionality,\n    /** Reference to the CdkMenuItemTrigger directive if one is added to the same element */\n    // `CdkMenuItemRadio` is commonly used in combination with a `CdkMenuItemTrigger`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Self() @Optional() menuTrigger?: CdkMenuItemTrigger\n  ) {\n    super(element, ngZone, parentMenu, menuAim, dir, menuTrigger);\n\n    this._registerDispatcherListener();\n  }\n\n  /** Configure the unique selection dispatcher listener in order to toggle the checked state  */\n  private _registerDispatcherListener() {\n    this._removeDispatcherListener = this._selectionDispatcher.listen(\n      (id: string, name: string) => (this.checked = this.id === id && this.name === name)\n    );\n  }\n\n  /** Toggles the checked state of the radio-button. */\n  trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this._selectionDispatcher.notify(this.id, this.name);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._removeDispatcherListener();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * A directive providing behavior for the \"menuitemcheckbox\" ARIA role, which behaves similarly to a\n * conventional checkbox.\n */\n@Directive({\n  selector: '[cdkMenuItemCheckbox]',\n  exportAs: 'cdkMenuItemCheckbox',\n  host: {\n    '[tabindex]': '_tabindex',\n    'type': 'button',\n    'role': 'menuitemcheckbox',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [\n    {provide: CdkMenuItemSelectable, useExisting: CdkMenuItemCheckbox},\n    {provide: CdkMenuItem, useExisting: CdkMenuItemSelectable},\n  ],\n})\nexport class CdkMenuItemCheckbox extends CdkMenuItemSelectable {\n  /** Toggle the checked state of the checkbox. */\n  trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this.checked = !this.checked;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  ViewContainerRef,\n  Output,\n  EventEmitter,\n  Optional,\n  OnDestroy,\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  OverlayRef,\n  Overlay,\n  OverlayConfig,\n  FlexibleConnectedPositionStrategy,\n  ConnectedPosition,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal, Portal} from '@angular/cdk/portal';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {Subject, merge} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkMenuPanel} from './menu-panel';\nimport {MenuStack} from './menu-stack';\nimport {throwExistingMenuStackError} from './menu-errors';\nimport {isClickInsideMenuOverlay} from './menu-item-trigger';\n\n/** Tracks the last open context menu trigger across the entire application. */\n@Injectable({providedIn: 'root'})\nexport class ContextMenuTracker {\n  /** The last open context menu trigger. */\n  private static _openContextMenuTrigger?: CdkContextMenuTrigger;\n\n  /**\n   * Close the previous open context menu and set the given one as being open.\n   * @param trigger the trigger for the currently open Context Menu.\n   */\n  update(trigger: CdkContextMenuTrigger) {\n    if (ContextMenuTracker._openContextMenuTrigger !== trigger) {\n      ContextMenuTracker._openContextMenuTrigger?.close();\n      ContextMenuTracker._openContextMenuTrigger = trigger;\n    }\n  }\n}\n\n/** Configuration options passed to the context menu. */\nexport type ContextMenuOptions = {\n  /** The opened menus X coordinate offset from the triggering position. */\n  offsetX: number;\n\n  /** The opened menus Y coordinate offset from the triggering position. */\n  offsetY: number;\n};\n\n/** Injection token for the ContextMenu options object. */\nexport const CDK_CONTEXT_MENU_DEFAULT_OPTIONS = new InjectionToken<ContextMenuOptions>(\n  'cdk-context-menu-default-options'\n);\n\n/** The coordinates of where the context menu should open. */\nexport type ContextMenuCoordinates = {x: number; y: number};\n\n/**\n * A directive which when placed on some element opens a the Menu it is bound to when a user\n * right-clicks within that element. It is aware of nested Context Menus and the lowest level\n * non-disabled context menu will trigger.\n */\n@Directive({\n  selector: '[cdkContextMenuTriggerFor]',\n  exportAs: 'cdkContextMenuTriggerFor',\n  host: {\n    '(contextmenu)': '_openOnContextMenu($event)',\n  },\n  providers: [\n    // In cases where the first menu item in the context menu is a trigger the submenu opens on a\n    // hover event. Offsetting the opened context menu by 2px prevents this from occurring.\n    {provide: CDK_CONTEXT_MENU_DEFAULT_OPTIONS, useValue: {offsetX: 2, offsetY: 2}},\n  ],\n})\nexport class CdkContextMenuTrigger implements OnDestroy {\n  /** Template reference variable to the menu to open on right click. */\n  @Input('cdkContextMenuTriggerFor')\n  get menuPanel(): CdkMenuPanel {\n    return this._menuPanel;\n  }\n  set menuPanel(panel: CdkMenuPanel) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && panel._menuStack) {\n      throwExistingMenuStackError();\n    }\n    this._menuPanel = panel;\n\n    if (this._menuPanel) {\n      this._menuPanel._menuStack = this._menuStack;\n    }\n  }\n  /** Reference to the MenuPanel this trigger toggles. */\n  private _menuPanel: CdkMenuPanel;\n\n  /** Emits when the attached menu is requested to open. */\n  @Output('cdkContextMenuOpened') readonly opened: EventEmitter<void> = new EventEmitter();\n\n  /** Emits when the attached menu is requested to close. */\n  @Output('cdkContextMenuClosed') readonly closed: EventEmitter<void> = new EventEmitter();\n\n  /** Whether the context menu should be disabled. */\n  @Input('cdkContextMenuDisabled')\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /** A reference to the overlay which manages the triggered menu. */\n  private _overlayRef: OverlayRef | null = null;\n\n  /** The content of the menu panel opened by this trigger. */\n  private _panelContent: TemplatePortal;\n\n  /** Emits when the element is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /** The menu stack for this trigger and its associated menus. */\n  private readonly _menuStack = new MenuStack();\n\n  /** Emits when the outside pointer events listener on the overlay should be stopped. */\n  private readonly _stopOutsideClicksListener = merge(this.closed, this._destroyed);\n\n  constructor(\n    protected readonly _viewContainerRef: ViewContainerRef,\n    private readonly _overlay: Overlay,\n    private readonly _contextMenuTracker: ContextMenuTracker,\n    @Inject(CDK_CONTEXT_MENU_DEFAULT_OPTIONS) private readonly _options: ContextMenuOptions,\n    @Optional() private readonly _directionality?: Directionality\n  ) {\n    this._setMenuStackListener();\n  }\n\n  /**\n   * Open the attached menu at the specified location.\n   * @param coordinates where to open the context menu\n   */\n  open(coordinates: ContextMenuCoordinates) {\n    if (this.disabled) {\n      return;\n    } else if (this.isOpen()) {\n      // since we're moving this menu we need to close any submenus first otherwise they end up\n      // disconnected from this one.\n      this._menuStack.closeSubMenuOf(this._menuPanel._menu!);\n\n      (this._overlayRef!.getConfig()\n        .positionStrategy as FlexibleConnectedPositionStrategy).setOrigin(coordinates);\n      this._overlayRef!.updatePosition();\n    } else {\n      this.opened.next();\n\n      if (this._overlayRef) {\n        (this._overlayRef.getConfig()\n          .positionStrategy as FlexibleConnectedPositionStrategy).setOrigin(coordinates);\n        this._overlayRef.updatePosition();\n      } else {\n        this._overlayRef = this._overlay.create(this._getOverlayConfig(coordinates));\n      }\n\n      this._overlayRef.attach(this._getMenuContent());\n      this._subscribeToOutsideClicks();\n    }\n  }\n\n  /** Close the opened menu. */\n  close() {\n    this._menuStack.closeAll();\n  }\n\n  /**\n   * Open the context menu and close any previously open menus.\n   * @param event the mouse event which opens the context menu.\n   */\n  _openOnContextMenu(event: MouseEvent) {\n    if (!this.disabled) {\n      // Prevent the native context menu from opening because we're opening a custom one.\n      event.preventDefault();\n\n      // Stop event propagation to ensure that only the closest enabled context menu opens.\n      // Otherwise, any context menus attached to containing elements would *also* open,\n      // resulting in multiple stacked context menus being displayed.\n      event.stopPropagation();\n\n      this._contextMenuTracker.update(this);\n      this.open({x: event.clientX, y: event.clientY});\n\n      // A context menu can be triggered via a mouse right click or a keyboard shortcut.\n      if (event.button === 2) {\n        this._menuPanel._menu?.focusFirstItem('mouse');\n      } else if (event.button === 0) {\n        this._menuPanel._menu?.focusFirstItem('keyboard');\n      } else {\n        this._menuPanel._menu?.focusFirstItem('program');\n      }\n    }\n  }\n\n  /** Whether the attached menu is open. */\n  isOpen() {\n    return !!this._overlayRef?.hasAttached();\n  }\n\n  /**\n   * Get the configuration object used to create the overlay.\n   * @param coordinates the location to place the opened menu\n   */\n  private _getOverlayConfig(coordinates: ContextMenuCoordinates) {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(coordinates),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  /**\n   * Build the position strategy for the overlay which specifies where to place the menu.\n   * @param coordinates the location to place the opened menu\n   */\n  private _getOverlayPositionStrategy(\n    coordinates: ContextMenuCoordinates\n  ): FlexibleConnectedPositionStrategy {\n    return this._overlay\n      .position()\n      .flexibleConnectedTo(coordinates)\n      .withDefaultOffsetX(this._options.offsetX)\n      .withDefaultOffsetY(this._options.offsetY)\n      .withPositions(this._getOverlayPositions());\n  }\n\n  /**\n   * Determine and return where to position the opened menu relative to the mouse location.\n   */\n  private _getOverlayPositions(): ConnectedPosition[] {\n    // TODO: this should be configurable through the injected context menu options\n    return [\n      {originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top'},\n      {originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top'},\n      {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\n      {originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'},\n    ];\n  }\n\n  /**\n   * Get the portal to be attached to the overlay which contains the menu. Allows for the menu\n   * content to change dynamically and be reflected in the application.\n   */\n  private _getMenuContent(): Portal<unknown> {\n    const hasMenuContentChanged = this.menuPanel._templateRef !== this._panelContent?.templateRef;\n    if (this.menuPanel && (!this._panelContent || hasMenuContentChanged)) {\n      this._panelContent = new TemplatePortal(this.menuPanel._templateRef, this._viewContainerRef);\n    }\n\n    return this._panelContent;\n  }\n\n  /** Subscribe to the menu stack close events and close this menu when requested. */\n  private _setMenuStackListener() {\n    this._menuStack.closed.pipe(takeUntil(this._destroyed)).subscribe(item => {\n      if (item === this._menuPanel._menu && this.isOpen()) {\n        this.closed.next();\n        this._overlayRef!.detach();\n      }\n    });\n  }\n\n  /**\n   * Subscribe to the overlays outside pointer events stream and handle closing out the stack if a\n   * click occurs outside the menus.\n   */\n  private _subscribeToOutsideClicks() {\n    if (this._overlayRef) {\n      this._overlayRef\n        .outsidePointerEvents()\n        .pipe(takeUntil(this._stopOutsideClicksListener))\n        .subscribe(event => {\n          if (!isClickInsideMenuOverlay(event.target as Element)) {\n            this._menuStack.closeAll();\n          }\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n    this._resetPanelMenuStack();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Destroy and unset the overlay reference it if exists. */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  /** Set the menu panels menu stack back to null. */\n  private _resetPanelMenuStack() {\n    // If a ContextMenuTrigger is placed in a conditionally rendered view, each time the trigger is\n    // rendered the panel setter for ContextMenuTrigger is called. From the first render onward,\n    // the attached CdkMenuPanel has the MenuStack set. Since we throw an error if a panel already\n    // has a stack set, we want to reset the attached stack here to prevent the error from being\n    // thrown if the trigger re-configures its attached panel (in the case where there is a 1:1\n    // relationship between the panel and trigger).\n    if (this._menuPanel) {\n      this._menuPanel._menuStack = null;\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkMenu} from './menu';\nimport {CdkMenuBar} from './menu-bar';\nimport {CdkMenuPanel} from './menu-panel';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuGroup} from './menu-group';\nimport {CdkMenuItemRadio} from './menu-item-radio';\nimport {CdkMenuItemCheckbox} from './menu-item-checkbox';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\nimport {CdkContextMenuTrigger} from './context-menu';\nimport {CdkTargetMenuAim} from './menu-aim';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkMenuBar,\n  CdkMenu,\n  CdkMenuPanel,\n  CdkMenuItem,\n  CdkMenuItemRadio,\n  CdkMenuItemCheckbox,\n  CdkMenuItemTrigger,\n  CdkMenuGroup,\n  CdkContextMenuTrigger,\n  CdkTargetMenuAim,\n];\n@NgModule({\n  imports: [OverlayModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-module';\nexport * from './menu-bar';\nexport * from './menu';\nexport * from './menu-item';\nexport * from './menu-item-checkbox';\nexport * from './menu-item-radio';\nexport * from './menu-item-trigger';\nexport * from './menu-panel';\nexport * from './menu-group';\nexport * from './context-menu';\n\nexport {MenuStack, MenuStackItem} from './menu-stack';\nexport {CDK_MENU} from './menu-interface';\nexport {TargetMenuAim, MenuAim, MENU_AIM, CdkTargetMenuAim} from './menu-aim';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {Menu as ɵangular_material_src_cdk_experimental_menu_menu_a} from './menu-interface';\nexport {CdkMenuItemSelectable as ɵangular_material_src_cdk_experimental_menu_menu_b} from './menu-item-selectable';"]}