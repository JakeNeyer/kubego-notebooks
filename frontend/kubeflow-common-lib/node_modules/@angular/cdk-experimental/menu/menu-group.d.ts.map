{"version":3,"file":"menu-group.d.ts","sources":["menu-group.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter, AfterContentInit, OnDestroy } from '@angular/core';\nimport { CdkMenuItem } from './menu-item';\n/**\n * Directive which acts as a grouping container for `CdkMenuItem` instances with\n * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n */\nexport declare class CdkMenuGroup implements AfterContentInit, OnDestroy {\n    /** Emits the element when checkbox or radiobutton state changed  */\n    readonly change: EventEmitter<CdkMenuItem>;\n    /** List of menuitemcheckbox or menuitemradio elements which reside in this group */\n    private readonly _selectableItems;\n    /** Emits when the _selectableItems QueryList triggers a change */\n    private readonly _selectableChanges;\n    ngAfterContentInit(): void;\n    /**\n     * Register the child selectable elements with the change emitter and ensure any new child\n     * elements do so as well.\n     */\n    private _registerMenuSelectionListeners;\n    /** Register each selectable to emit on the change Emitter when clicked */\n    private _registerClickListener;\n    ngOnDestroy(): void;\n}\n"]}