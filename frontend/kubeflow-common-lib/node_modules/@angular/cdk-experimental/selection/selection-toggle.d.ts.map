{"version":3,"file":"selection-toggle.d.ts","sources":["selection-toggle.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NumberInput } from '@angular/cdk/coercion';\nimport { OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { CdkSelection } from './selection';\n/**\n * Makes the element a selection toggle.\n *\n * Must be used within a parent `CdkSelection` directive.\n * Must be provided with the value. If `trackBy` is used on `CdkSelection`, the index of the value\n * is required. If the element implements `ControlValueAccessor`, e.g. `MatCheckbox`, the directive\n * automatically connects it with the selection state provided by the `CdkSelection` directive. If\n * not, use `checked$` to get the checked state of the value, and `toggle()` to change the selection\n * state.\n */\nexport declare class CdkSelectionToggle<T> implements OnDestroy, OnInit {\n    private _selection;\n    private _controlValueAccessors;\n    /** The value that is associated with the toggle */\n    value: T;\n    /** The index of the value in the list. Required when used with `trackBy` */\n    get index(): number | undefined;\n    set index(index: number | undefined);\n    protected _index?: number;\n    /** The checked state of the selection toggle */\n    readonly checked: Observable<boolean>;\n    /** Toggles the selection */\n    toggle(): void;\n    private _destroyed;\n    constructor(_selection: CdkSelection<T>, _controlValueAccessors: ControlValueAccessor[]);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    private _assertValidParentSelection;\n    private _configureControlValueAccessor;\n    private _isSelected;\n    static ngAcceptInputType_index: NumberInput;\n}\n"]}