{"version":3,"file":"focus-escape-notifier.d.ts","sources":["focus-escape-notifier.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgZone } from '@angular/core';\nimport { FocusTrap, InteractivityChecker } from '@angular/cdk/a11y';\nimport { Observable } from 'rxjs';\n/** Value indicating whether focus left the target area before or after the enclosed elements. */\nexport declare const enum FocusEscapeNotifierDirection {\n    START = 0,\n    END = 1\n}\n/**\n * Like FocusTrap, but rather than trapping focus within a dom region, notifies subscribers when\n * focus leaves the region.\n */\nexport declare class FocusEscapeNotifier extends FocusTrap {\n    private readonly _escapeSubject;\n    constructor(element: HTMLElement, checker: InteractivityChecker, ngZone: NgZone, document: Document);\n    escapes(): Observable<FocusEscapeNotifierDirection>;\n}\n/** Factory that allows easy instantiation of focus escape notifiers. */\nexport declare class FocusEscapeNotifierFactory {\n    private _checker;\n    private _ngZone;\n    private _document;\n    constructor(_checker: InteractivityChecker, _ngZone: NgZone, _document: any);\n    /**\n     * Creates a focus escape notifier region around the given element.\n     * @param element The element around which focus will be monitored.\n     * @returns The created focus escape notifier instance.\n     */\n    create(element: HTMLElement): FocusEscapeNotifier;\n}\n"]}