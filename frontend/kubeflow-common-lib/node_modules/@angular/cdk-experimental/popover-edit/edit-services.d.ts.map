{"version":3,"file":"edit-services.d.ts","sources":["edit-services.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgZone } from '@angular/core';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { EditEventDispatcher } from './edit-event-dispatcher';\nimport { FocusDispatcher } from './focus-dispatcher';\nimport { PopoverEditPositionStrategyFactory } from './popover-edit-position-strategy-factory';\nimport { EditRef } from './edit-ref';\n/**\n * Optimization\n * Collects multiple Injectables into a singleton shared across the table. By reducing the\n * number of services injected into each CdkPopoverEdit, this saves about 0.023ms of cpu time\n * and 56 bytes of memory per instance.\n */\nexport declare class EditServices {\n    readonly directionality: Directionality;\n    readonly editEventDispatcher: EditEventDispatcher<EditRef<unknown>>;\n    readonly focusDispatcher: FocusDispatcher;\n    readonly focusTrapFactory: FocusTrapFactory;\n    readonly ngZone: NgZone;\n    readonly overlay: Overlay;\n    readonly positionFactory: PopoverEditPositionStrategyFactory;\n    readonly scrollDispatcher: ScrollDispatcher;\n    readonly viewportRuler: ViewportRuler;\n    constructor(directionality: Directionality, editEventDispatcher: EditEventDispatcher<EditRef<unknown>>, focusDispatcher: FocusDispatcher, focusTrapFactory: FocusTrapFactory, ngZone: NgZone, overlay: Overlay, positionFactory: PopoverEditPositionStrategyFactory, scrollDispatcher: ScrollDispatcher, viewportRuler: ViewportRuler);\n}\n"]}