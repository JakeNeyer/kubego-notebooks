{"version":3,"file":"focus-dispatcher.d.ts","sources":["focus-dispatcher.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directionality } from '@angular/cdk/bidi';\nimport { PartialObserver } from 'rxjs';\n/**\n * Service responsible for moving cell focus around in response to keyboard events.\n * May be overridden to customize the keyboard behavior of popover edit.\n */\nexport declare class FocusDispatcher {\n    protected readonly directionality: Directionality;\n    /** Observes keydown events triggered from the table. */\n    readonly keyObserver: PartialObserver<KeyboardEvent>;\n    constructor(directionality: Directionality);\n    /**\n     * Moves focus to earlier or later cells (in dom order) by offset cells relative to\n     * currentCell.\n     */\n    moveFocusHorizontally(currentCell: HTMLElement, offset: number): void;\n    /** Moves focus to up or down by row by offset cells relative to currentCell. */\n    moveFocusVertically(currentCell: HTMLElement, offset: number): void;\n    /** Translates arrow keydown events into focus move operations. */\n    protected handleKeyboardEvent(event: KeyboardEvent): void;\n}\n"]}