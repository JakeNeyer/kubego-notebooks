{"version":3,"file":"combobox-panel.d.ts","sources":["combobox-panel.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport declare type AriaHasPopupValue = 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog';\nimport { TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nexport declare class CdkComboboxPanel<T = unknown> {\n    readonly _templateRef: TemplateRef<unknown>;\n    valueUpdated: Subject<T | T[]>;\n    contentIdUpdated: Subject<string>;\n    contentTypeUpdated: Subject<AriaHasPopupValue>;\n    contentId: string;\n    contentType: AriaHasPopupValue;\n    constructor(_templateRef: TemplateRef<unknown>);\n    /** Tells the parent combobox to close the panel and sends back the content value. */\n    closePanel(data?: T | T[]): void;\n    focusContent(): void;\n    /** Registers the content's id and the content type with the panel. */\n    _registerContent(contentId: string, contentType: AriaHasPopupValue): void;\n}\n"]}