{"version":3,"file":"table-scroll-container.d.ts","sources":["table-scroll-container.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { StickyPositioningListener, StickyUpdate } from '@angular/cdk/table';\n/**\n * Applies styles to the host element that make its scrollbars match up with\n * the non-sticky scrollable portions of the CdkTable contained within.\n *\n * This visual effect only works in Webkit and Blink based browsers (eg Chrome,\n * Safari, Edge). Other browsers such as Firefox will gracefully degrade to\n * normal scrollbar appearance.\n * Further note: These styles have no effect when the browser is using OS-default\n * scrollbars. The easiest way to force them into custom mode is to specify width\n * and height for the scrollbar and thumb.\n */\nexport declare class CdkTableScrollContainer implements StickyPositioningListener, OnDestroy, OnInit {\n    private readonly _elementRef;\n    private readonly _document;\n    private readonly _directionality?;\n    private readonly _uniqueClassName;\n    private _styleRoot;\n    private _styleElement?;\n    /** The most recent sticky column size values from the CdkTable. */\n    private _startSizes;\n    private _endSizes;\n    private _headerSizes;\n    private _footerSizes;\n    constructor(_elementRef: ElementRef<HTMLElement>, _document: Document, _directionality?: Directionality | undefined);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    stickyColumnsUpdated({ sizes }: StickyUpdate): void;\n    stickyEndColumnsUpdated({ sizes }: StickyUpdate): void;\n    stickyHeaderRowsUpdated({ sizes }: StickyUpdate): void;\n    stickyFooterRowsUpdated({ sizes }: StickyUpdate): void;\n    /**\n     * Set padding on the scrollbar track based on the sticky states from CdkTable.\n     */\n    private _updateScrollbar;\n    /** Gets the stylesheet for the scrollbar styles and creates it if need be. */\n    private _getStyleSheet;\n    /** Updates the stylesheet with the specified scrollbar style. */\n    private _applyCss;\n    private _clearCss;\n}\n"]}