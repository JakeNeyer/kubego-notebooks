{"version":3,"file":"cdk-experimental-combobox.umd.js","sources":["../../../../../src/cdk-experimental/combobox/combobox.ts","../../../../../src/cdk-experimental/combobox/combobox-panel.ts","../../../../../src/cdk-experimental/combobox/combobox-popup.ts","../../../../../src/cdk-experimental/combobox/combobox-module.ts","../../../../../src/cdk-experimental/combobox/public-api.ts","../../../../../src/cdk-experimental/combobox/index.ts"],"names":["EventEmitter","coerceBooleanProperty","DOWN_ARROW","ENTER","ESCAPE","TAB","coerceArray","OverlayConfig","TemplatePortal","Directive","ElementRef","Overlay","ViewContainerRef","Directionality","Optional","Input","Output","Subject","TemplateRef","InjectionToken","Inject","NgModule","OverlayModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nexport type OpenAction = 'focus' | 'click' | 'downKey' | 'toggle';\nexport type OpenActionInput = OpenAction | OpenAction[] | string | null | undefined;\n\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output, ViewContainerRef\n} from '@angular/core';\nimport {CdkComboboxPanel, AriaHasPopupValue} from './combobox-panel';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef\n} from '@angular/cdk/overlay';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty, coerceArray} from '@angular/cdk/coercion';\nimport {DOWN_ARROW, ENTER, ESCAPE, TAB} from '@angular/cdk/keycodes';\n\nconst allowedOpenActions = ['focus', 'click', 'downKey', 'toggle'];\n\n@Directive({\n  selector: '[cdkCombobox]',\n  exportAs: 'cdkCombobox',\n  host: {\n    'role': 'combobox',\n    'class': 'cdk-combobox',\n    '(click)': '_handleInteractions(\"click\")',\n    '(focus)': '_handleInteractions(\"focus\")',\n    '(keydown)': '_keydown($event)',\n    '(document:click)': '_attemptClose($event)',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-owns]': 'contentId',\n    '[attr.aria-haspopup]': 'contentType',\n    '[attr.aria-expanded]': 'isOpen()',\n    '[attr.tabindex]': '_getTabIndex()'\n  }\n})\nexport class CdkCombobox<T = unknown> implements OnDestroy, AfterContentInit {\n  @Input('cdkComboboxTriggerFor')\n  get panel(): CdkComboboxPanel<T> | undefined { return this._panel; }\n  set panel(panel: CdkComboboxPanel<T> | undefined) { this._panel = panel; }\n  private _panel: CdkComboboxPanel<T> | undefined;\n\n  @Input()\n  value: T | T[];\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  @Input()\n  get openActions(): OpenAction[] {\n    return this._openActions;\n  }\n  set openActions(action: OpenAction[]) {\n    this._openActions = this._coerceOpenActionProperty(action);\n  }\n  private _openActions: OpenAction[] = ['click'];\n\n  /** Whether the textContent is automatically updated upon change of the combobox value. */\n  @Input()\n  get autoSetText(): boolean { return this._autoSetText; }\n  set autoSetText(value: boolean) { this._autoSetText = coerceBooleanProperty(value); }\n  private _autoSetText: boolean = true;\n\n  @Output('comboboxPanelOpened') readonly opened: EventEmitter<void> = new EventEmitter<void>();\n  @Output('comboboxPanelClosed') readonly closed: EventEmitter<void> = new EventEmitter<void>();\n  @Output('panelValueChanged') readonly panelValueChanged: EventEmitter<T[]>\n      = new EventEmitter<T[]>();\n\n  private _overlayRef: OverlayRef;\n  private _panelContent: TemplatePortal;\n  contentId: string = '';\n  contentType: AriaHasPopupValue;\n\n  constructor(\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    private readonly _overlay: Overlay,\n    protected readonly _viewContainerRef: ViewContainerRef,\n    @Optional() private readonly _directionality?: Directionality\n  ) {}\n\n  ngAfterContentInit() {\n    this._panel?.valueUpdated.subscribe(data => {\n      this._setComboboxValue(data);\n      this.close();\n    });\n\n    this._panel?.contentIdUpdated.subscribe(id => {\n      this.contentId = id;\n    });\n\n    this._panel?.contentTypeUpdated.subscribe(type => {\n      this.contentType = type;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n\n    this.opened.complete();\n    this.closed.complete();\n    this.panelValueChanged.complete();\n  }\n\n  _keydown(event: KeyboardEvent) {\n    const {keyCode} = event;\n\n    if (keyCode === DOWN_ARROW) {\n      if (this.isOpen()) {\n        this._panel?.focusContent();\n      } else if (this._openActions.indexOf('downKey') !== -1) {\n        this.open();\n      }\n    } else if (keyCode === ENTER) {\n      if (this._openActions.indexOf('toggle') !== -1) {\n        this.toggle();\n      } else if (this._openActions.indexOf('click') !== -1) {\n        this.open();\n      }\n\n    } else if (keyCode === ESCAPE) {\n      event.preventDefault();\n      this.close();\n    } else if (keyCode === TAB) {\n      this.close();\n    }\n  }\n\n  /** Handles click or focus interactions. */\n  _handleInteractions(interaction: OpenAction) {\n    if (interaction === 'click') {\n      if (this._openActions.indexOf('toggle') !== -1) {\n        this.toggle();\n      } else if (this._openActions.indexOf('click') !== -1) {\n        this.open();\n      }\n    } else if (interaction === 'focus') {\n      if (this._openActions.indexOf('focus') !== -1) {\n        this.open();\n      }\n    }\n  }\n\n  /** Given a click in the document, determines if the click was inside a combobox. */\n  _attemptClose(event: MouseEvent) {\n    if (this.isOpen()) {\n      let target = event.composedPath ? event.composedPath()[0] : event.target;\n      while (target instanceof Element) {\n        if (target.className.indexOf('cdk-combobox') !== -1) {\n          return;\n        }\n        target = target.parentElement;\n      }\n    }\n\n    this.close();\n  }\n\n  /** Toggles the open state of the panel. */\n  toggle() {\n    if (this.hasPanel()) {\n      this.isOpen() ? this.close() : this.open();\n    }\n  }\n\n  /** If the combobox is closed and not disabled, opens the panel. */\n  open() {\n    if (!this.isOpen() && !this.disabled) {\n      this.opened.next();\n      this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n      this._overlayRef.attach(this._getPanelContent());\n      if (!this._isTextTrigger()) {\n        this._panel?.focusContent();\n      }\n    }\n  }\n\n  /** If the combobox is open and not disabled, closes the panel. */\n  close() {\n    if (this.isOpen() && !this.disabled) {\n      this.closed.next();\n      this._overlayRef.detach();\n    }\n  }\n\n  /** Returns true if panel is currently opened. */\n  isOpen(): boolean {\n    return this._overlayRef ? this._overlayRef.hasAttached() : false;\n  }\n\n  /** Returns true if combobox has a child panel. */\n  hasPanel(): boolean {\n    return !!this.panel;\n  }\n\n  _getTabIndex(): string | null {\n    return this.disabled ? null : '0';\n  }\n\n  private _setComboboxValue(value: T | T[]) {\n\n    const valueChanged = (this.value !== value);\n    this.value = value;\n\n    if (valueChanged) {\n      this.panelValueChanged.emit(coerceArray(value));\n      if (this._autoSetText) {\n        this._setTextContent(value);\n      }\n    }\n  }\n\n  private _setTextContent(content: T | T[]) {\n    const contentArray = coerceArray(content);\n    this._elementRef.nativeElement.textContent = contentArray.join(' ');\n  }\n\n  private _isTextTrigger() {\n    // TODO: Should check if the trigger is contenteditable.\n    const tagName = this._elementRef.nativeElement.tagName.toLowerCase();\n    return tagName === 'input' || tagName === 'textarea' ? true : false;\n  }\n\n  private _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  private _getOverlayPositionStrategy(): FlexibleConnectedPositionStrategy {\n    return this._overlay\n        .position()\n        .flexibleConnectedTo(this._elementRef)\n        .withPositions(this._getOverlayPositions());\n  }\n\n  private _getOverlayPositions(): ConnectedPosition[] {\n    return [\n      {originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top'},\n      {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom'},\n      {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\n      {originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom'},\n    ];\n  }\n\n  private _getPanelContent() {\n    const hasPanelChanged = this._panel?._templateRef !== this._panelContent?.templateRef;\n    if (this._panel && (!this._panel || hasPanelChanged)) {\n      this._panelContent = new TemplatePortal(this._panel._templateRef, this._viewContainerRef);\n    }\n\n    return this._panelContent;\n  }\n\n  private _coerceOpenActionProperty(input: string | OpenAction[]): OpenAction[] {\n    let actions = typeof input === 'string' ? input.trim().split(/[ ,]+/) : input;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n      actions.some(a => allowedOpenActions.indexOf(a) === -1)) {\n      throw Error(`${input} is not a support open action for CdkCombobox`);\n    }\n    return actions as OpenAction[];\n  }\n\n  static ngAcceptInputType_openActions: OpenActionInput;\n  static ngAcceptInputType_autoSetText: OpenActionInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type AriaHasPopupValue = 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog';\n\nimport {Directive, TemplateRef} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Directive({\n  host: {\n    'class': 'cdk-combobox-panel'\n  },\n  selector: 'ng-template[cdkComboboxPanel]',\n  exportAs: 'cdkComboboxPanel',\n})\nexport class CdkComboboxPanel<T = unknown> {\n\n  valueUpdated: Subject<T | T[]> = new Subject<T | T[]>();\n  contentIdUpdated: Subject<string> = new Subject<string>();\n  contentTypeUpdated: Subject<AriaHasPopupValue> = new Subject<AriaHasPopupValue>();\n\n  contentId: string = '';\n  contentType: AriaHasPopupValue;\n\n  constructor(\n    readonly _templateRef: TemplateRef<unknown>\n  ) {}\n\n  /** Tells the parent combobox to close the panel and sends back the content value. */\n  closePanel(data?: T | T[]) {\n    this.valueUpdated.next(data || []);\n  }\n\n  // TODO: instead of using a focus function, potentially use cdk/a11y focus trapping\n  focusContent() {\n    // TODO: Use an injected document here\n    document.getElementById(this.contentId)?.focus();\n  }\n\n  /** Registers the content's id and the content type with the panel. */\n  _registerContent(contentId: string, contentType: AriaHasPopupValue) {\n    // If content has already been registered, no further contentIds are registered.\n    if (this.contentType && this.contentType !== contentType) {\n      return;\n    }\n\n    this.contentId = contentId;\n    if (contentType !== 'listbox' && contentType !== 'dialog') {\n      throw Error('CdkComboboxPanel currently only supports listbox or dialog content.');\n    }\n    this.contentType = contentType;\n\n    this.contentIdUpdated.next(this.contentId);\n    this.contentTypeUpdated.next(this.contentType);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  OnInit,\n  Optional} from '@angular/core';\nimport {AriaHasPopupValue, CdkComboboxPanel} from './combobox-panel';\n\nexport const PANEL = new InjectionToken<CdkComboboxPanel>('CdkComboboxPanel');\n\nlet nextId = 0;\n\n@Directive({\n  selector: '[cdkComboboxPopup]',\n  exportAs: 'cdkComboboxPopup',\n  host: {\n    'class': 'cdk-combobox-popup',\n    '[attr.role]': 'role',\n    '[id]': 'id',\n    'tabindex': '-1',\n    '(focus)': 'focusFirstElement()'\n  }\n})\nexport class CdkComboboxPopup<T = unknown> implements OnInit {\n  @Input()\n  get role(): AriaHasPopupValue {\n    return this._role;\n  }\n  set role(value: AriaHasPopupValue) {\n    this._role = value;\n  }\n  private _role: AriaHasPopupValue = 'dialog';\n\n  @Input()\n  get firstFocus(): HTMLElement {\n    return this._firstFocusElement;\n  }\n  set firstFocus(id: HTMLElement) {\n    this._firstFocusElement = id;\n  }\n  private _firstFocusElement: HTMLElement;\n\n  @Input() id = `cdk-combobox-popup-${nextId++}`;\n\n  @Input('parentPanel') private readonly _explicitPanel: CdkComboboxPanel;\n\n  constructor(\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Inject(PANEL) readonly _parentPanel?: CdkComboboxPanel<T>,\n  ) { }\n\n  ngOnInit() {\n    this.registerWithPanel();\n  }\n\n  registerWithPanel(): void {\n    if (this._parentPanel === null || this._parentPanel === undefined) {\n      this._explicitPanel._registerContent(this.id, this._role);\n    } else {\n      this._parentPanel._registerContent(this.id, this._role);\n    }\n  }\n\n  focusFirstElement() {\n    if (this._firstFocusElement) {\n      this._firstFocusElement.focus();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkCombobox} from './combobox';\nimport {CdkComboboxPanel} from './combobox-panel';\nimport {CdkComboboxPopup} from './combobox-popup';\n\nconst EXPORTED_DECLARATIONS = [CdkCombobox, CdkComboboxPanel, CdkComboboxPopup];\n@NgModule({\n  imports: [OverlayModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkComboboxModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './combobox-module';\nexport * from './combobox';\nexport * from './combobox-panel';\nexport * from './combobox-popup';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}