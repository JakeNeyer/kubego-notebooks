{"version":3,"file":"column-resize.d.ts","sources":["column-resize.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AfterViewInit, ElementRef, NgZone, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ColumnResizeNotifier, ColumnResizeNotifierSource } from './column-resize-notifier';\nimport { HeaderRowEventDispatcher } from './event-dispatcher';\n/**\n * Base class for ColumnResize directives which attach to mat-table elements to\n * provide common events and services for column resizing.\n */\nexport declare abstract class ColumnResize implements AfterViewInit, OnDestroy {\n    protected readonly destroyed: Subject<void>;\n    abstract readonly columnResizeNotifier: ColumnResizeNotifier;\n    abstract readonly elementRef: ElementRef<HTMLElement>;\n    protected abstract readonly eventDispatcher: HeaderRowEventDispatcher;\n    protected abstract readonly ngZone: NgZone;\n    protected abstract readonly notifier: ColumnResizeNotifierSource;\n    /** Unique ID for this table instance. */\n    protected readonly selectorId: string;\n    /** The id attribute of the table, if specified. */\n    id?: string;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    /** Gets the unique CSS class name for this table instance. */\n    getUniqueCssClass(): string;\n    /** Called when a column in the table is resized. Applies a css class to the table element. */\n    setResized(): void;\n    private _listenForRowHoverEvents;\n    private _listenForResizeActivity;\n    private _listenForHoverActivity;\n}\n"]}