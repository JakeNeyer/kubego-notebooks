{"version":3,"file":"overlay-handle.d.ts","sources":["overlay-handle.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AfterViewInit, ElementRef, OnDestroy, NgZone } from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { CdkColumnDef, _CoalescedStyleScheduler } from '@angular/cdk/table';\nimport { Subject } from 'rxjs';\nimport { ColumnResizeNotifierSource } from './column-resize-notifier';\nimport { HeaderRowEventDispatcher } from './event-dispatcher';\nimport { ResizeRef } from './resize-ref';\n/**\n * Base class for a component shown over the edge of a resizable column that is responsible\n * for handling column resize mouse events and displaying any visible UI on the column edge.\n */\nexport declare abstract class ResizeOverlayHandle implements AfterViewInit, OnDestroy {\n    protected readonly destroyed: Subject<void>;\n    protected abstract readonly columnDef: CdkColumnDef;\n    protected abstract readonly document: Document;\n    protected abstract readonly directionality: Directionality;\n    protected abstract readonly elementRef: ElementRef;\n    protected abstract readonly eventDispatcher: HeaderRowEventDispatcher;\n    protected abstract readonly ngZone: NgZone;\n    protected abstract readonly resizeNotifier: ColumnResizeNotifierSource;\n    protected abstract readonly resizeRef: ResizeRef;\n    protected abstract readonly styleScheduler: _CoalescedStyleScheduler;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    private _listenForMouseEvents;\n    private _dragStarted;\n    protected updateResizeActive(active: boolean): void;\n    private _getOriginWidth;\n    private _getOriginOffset;\n    private _updateOverlayOffset;\n    private _isLtr;\n    private _notifyResizeEnded;\n}\n"]}