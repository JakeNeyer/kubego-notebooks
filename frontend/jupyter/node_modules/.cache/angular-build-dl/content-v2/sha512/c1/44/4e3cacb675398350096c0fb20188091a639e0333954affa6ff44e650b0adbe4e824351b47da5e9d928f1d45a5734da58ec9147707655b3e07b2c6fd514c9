{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/form/form-default/form-advanced-options/form-advanced-options.component.ts","webpack:///src/app/pages/form/form-default/form-advanced-options/form-advanced-options.component.html","webpack:///src/app/pages/form/form-default/form-affinity-tolerations/form-affinity-tolerations.component.html","webpack:///src/app/pages/form/form-default/form-affinity-tolerations/form-affinity-tolerations.component.ts","webpack:///src/app/pages/form/form-default/form-configurations/form-configurations.component.html","webpack:///src/app/pages/form/form-default/form-configurations/form-configurations.component.ts","webpack:///src/app/pages/form/form-default/form-cpu-ram/form-cpu-ram.component.ts","webpack:///src/app/pages/form/form-default/form-cpu-ram/form-cpu-ram.component.html","webpack:///src/app/pages/form/form-default/form-data-volumes/form-data-volumes.component.html","webpack:///src/app/pages/form/form-default/form-data-volumes/form-data-volumes.component.ts","webpack:///src/app/pages/form/form-default/form-default.component.ts","webpack:///src/app/pages/form/form-default/form-default.component.html","webpack:///src/app/pages/form/form-default/form-default.module.ts","webpack:///src/app/pages/form/form-default/form-gpus/form-gpus.component.html","webpack:///src/app/pages/form/form-default/form-gpus/form-gpus.component.ts","webpack:///src/app/pages/form/form-default/form-image/form-image.component.html","webpack:///src/app/pages/form/form-default/form-image/form-image.component.ts","webpack:///src/app/pages/form/form-default/form-name/form-name.component.ts","webpack:///src/app/pages/form/form-default/form-name/form-name.component.html","webpack:///src/app/pages/form/form-default/form-workspace-volume/form-workspace-volume.component.ts","webpack:///src/app/pages/form/form-default/form-workspace-volume/form-workspace-volume.component.html","webpack:///src/app/pages/form/form-default/utils.ts","webpack:///src/app/pages/form/form-default/volume/volume.component.html","webpack:///src/app/pages/form/form-default/volume/volume.component.ts","webpack:///src/app/pages/form/form-rok/form-rok.component.ts","webpack:///src/app/pages/form/form-rok/form-rok.component.html","webpack:///src/app/pages/form/form-rok/form-rok.module.ts","webpack:///src/app/pages/form/form-rok/rok-form-configurations/rok-form-configurations.component.html","webpack:///src/app/pages/form/form-rok/rok-form-configurations/rok-form-configurations.component.ts","webpack:///src/app/pages/form/form-rok/rok-form-data-volumes/rok-form-data-volumes.component.html","webpack:///src/app/pages/form/form-rok/rok-form-data-volumes/rok-form-data-volumes.component.ts","webpack:///src/app/pages/form/form-rok/rok-form-workspace-volume/rok-form-workspace-volume.component.ts","webpack:///src/app/pages/form/form-rok/rok-form-workspace-volume/rok-form-workspace-volume.component.html","webpack:///src/app/pages/form/form-rok/rok-jupyter-lab-selector/rok-jupyter-lab-selector.component.ts","webpack:///src/app/pages/form/form-rok/rok-jupyter-lab-selector/rok-jupyter-lab-selector.component.html","webpack:///src/app/pages/form/form-rok/rok-volume/rok-volume.component.html","webpack:///src/app/pages/form/form-rok/rok-volume/rok-volume.component.ts","webpack:///src/app/pages/form/form-rok/types.ts","webpack:///src/app/pages/form/form-rok/utils.ts","webpack:///src/app/pages/form/form.component.html","webpack:///src/app/pages/form/form.component.ts","webpack:///src/app/pages/form/form.module.ts","webpack:///src/app/pages/index/index-default/config.ts","webpack:///src/app/pages/index/index-default/index-default.component.html","webpack:///src/app/pages/index/index-default/index-default.component.ts","webpack:///src/app/pages/index/index-default/index-default.module.ts","webpack:///src/app/pages/index/index-default/server-type/server-type.component.html","webpack:///src/app/pages/index/index-default/server-type/server-type.component.ts","webpack:///src/app/pages/index/index-rok/index-rok.component.ts","webpack:///src/app/pages/index/index-rok/index-rok.module.ts","webpack:///src/app/pages/index/index.component.html","webpack:///src/app/pages/index/index.component.ts","webpack:///src/app/pages/index/index.module.ts","webpack:///src/app/services/backend.service.ts","webpack:///src/app/types.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","routes","path","component","IndexComponent","FormComponent","AppRoutingModule","RouterModule","relativeLinkResolution","AppComponent","title","AppModule","HttpClientModule","BrowserModule","CommonModule","KubeflowModule","IndexModule","FormModule","FormAdvancedOptionsComponent","FormAffinityTolerationsComponent","FormConfigurationsComponent","ns","backend","subscriptions","Subscription","nsSub","getSelectedNamespace","subscribe","namespace","getPodDefaults","pds","podDefaults","add","unsubscribe","FormCpuRamComponent","parentForm","get","valueChanges","val","dirty","cpu","value","setValue","calculateLimits","cpuLimitFactor","memory","memoryLimitFactor","FormDataVolumesComponent","vols","controls","addDataVolume","idx","removeAt","updateValueAndValidity","addVol","FormDefaultComponent","namespaceService","router","popup","currNamespace","ephemeral","defaultStorageclass","blockSubmit","formReady","pvcs","existingNotebooks","Set","formCtrl","getFormDefaults","getConfig","config","Object","length","initFormControls","getVolumes","getDefaultStorageClass","defaultClass","open","$localize","SnackType","notebookCopy","notebook","JSON","parse","stringify","customImageCheck","image","customImage","serverType","imageGroupOne","imageGroupTwo","toString","gpus","num","cpuLimit","memoryLimit","workspace","size","datavols","vol","getSubmitNotebook","createNotebook","close","navigate","onSubmit","onCancel","FormDefaultModule","MatCheckboxModule","MatSlideToggleModule","MatIconModule","MatButtonToggleModule","FormNameComponent","FormImageComponent","FormWorkspaceVolumeComponent","VolumeComponent","FormGpusComponent","vendors","installedVendors","maxGPUs","gpusCount","gpuCtrl","setValidators","vendorWithNum","n","disable","enable","getGPUVendors","vendor","has","limitsKey","uiName","vendorCtrl","hasError","control","vendorNullName","iconRegistry","sanitizer","subs","addSvgIcon","bypassSecurityTrustResourceUrl","environment","check","Validators","selection","split","name","tag","tokens","hideRegistry","includes","shift","displayName","join","hideTag","getNotebooks","notebooks","clear","map","nb","snackBar","readOnlyPrv","b","msg","fb","FormBuilder","group","allowCustomImage","imagePullPolicy","noWorkspace","type","getNameSyncValidators","getNameAsyncValidators","templatedName","disabled","templatedPath","mode","extraFields","affinityConfig","tolerationGroup","array","shm","configurations","createVolumeControl","readonly","ctrl","mountPath","configSizeToNumber","accessModes","updateVolumeControl","volCtrl","l","push","updateGPUControl","gpuConf","gpu","readOnly","requests","factor","limit","isNaN","toFixed","initCpuFormControls","Number","limitFactor","initMemoryFormControls","wsCtrl","workspaceVolume","ws","dataVolumes","forEach","NaN","replace","notebookNamePrv","existingPVCs","nm","volume","notebookNameChanged","storageOptionChanged","data","pvcsChanged","defaultStorageClassPrv","s","updateVolInputFields","defaultStorageClass","notebookName","selectedVolIsExistingType","updateNonDirtyControl","currentVolName","setVolumeType","emitEvent","setTimeout","pvc","FormRokComponent","rok","env","initCSRF","addControl","FormControl","wsExtras","envVal","i","extra","at","FormRokModule","RokJupyterLabSelectorComponent","RokVolumeComponent","RokFormWorkspaceVolumeComponent","RokFormDataVolumesComponent","RokFormConfigurationsComponent","addRokDataVolume","rokUrlValidator","url","getJupyterLabFromRokURL","lab","setLabValues","wsUrl","getVolumeFromRokURL","setVolumeValues","dataVols","volUrl","labAutofillClicked","nbName","origin","window","location","storageClasses","rokUrl","setAsyncValidators","updateVolType","updateVolPath","emptyJupyterLab","images","createRokVolumeControl","getObjectMetadata","pipe","headers","parseInt","workspaceRokUrl","volsNum","volRokUrl","emptyVolume","console","log","Math","pow","volsArr","volProps","prop","hasOwnProperty","updateControlNonNullValue","provide","ErrorStateMatcher","useClass","ImmediateErrorStateMatcher","getDeleteDialogConfig","message","accept","confirmColor","cancel","error","applying","width","getStopDialogConfig","defaultConfig","newButtonText","columns","matHeaderCellDef","matColumnDef","StatusValue","PropertyValue","field","truncate","TRUNCATE_TEXT_SIZE","tooltipField","ComponentValue","ServerTypeComponent","MenuValue","itemsIcon","ActionListValue","ActionButtonValue","tooltip","color","text","ActionIconValue","tooltipInit","tooltipReady","iconInit","iconReady","IndexDefaultComponent","confirmDialog","rawData","processedData","poller","ExponentialBackoff","interval","retries","start","isEqual","processIncomingData","reset","stop","a","action","newResourceClicked","deleteVolumeClicked","connectClicked","startStopClicked","deleteDialogConfig","ref","delSub","componentInstance","applying$","deleteNotebook","next","_","DIALOG_RESP","err","errorMsg","afterClosed","res","status","phase","STATUS_TYPE","updateNotebookFields","startNotebook","stopNotebook","stopDialogConfig","stopSub","deleteAction","processDeletionActionStatus","connectAction","processConnectActionStatus","startStopAction","processStartStopActionStatus","notebooksCopy","index","reactToAction","IndexDefaultModule","ResourceTableModule","NamespaceSelectModule","ConfirmDialogModule","notebookServerType","IndexRokComponent","IndexRokModule","MatTooltipModule","JWABackendService","http","catchError","handleError","resp","poddefaults","post","patch","stopped","BackendService","production","apiUrl","resource","ui","jupyterlabLogo","jupyterIcon","groupOneLogo","groupOneIcon","groupTwoLogo","groupTwoIcon","enableProdMode","platformBrowser","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IndexComponent } from './pages/index/index.component';\nimport { FormComponent } from './pages/form/form.component';\n\nconst routes: Routes = [\n  { path: '', component: IndexComponent },\n  { path: 'new', component: FormComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { IndexModule } from './pages/index/index.module';\nimport { FormModule } from './pages/form/form.module';\nimport { KubeflowModule } from 'kubeflow';\n\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    KubeflowModule,\n    IndexModule,\n    FormModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-advanced-options',\n  templateUrl: './form-advanced-options.component.html',\n  styleUrls: ['./form-advanced-options.component.scss'],\n})\nexport class FormAdvancedOptionsComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<lib-form-section\n  title=\"Miscellaneous Settings\"\n  text=\"Other possible settings to be applied to the Notebook Server.\"\n  icon=\"fa:fas:cogs\"\n  i18n-title\n  i18n-text\n>\n  <mat-slide-toggle [formControl]=\"parentForm.get('shm')\" i18n>\n    Enable Shared Memory\n  </mat-slide-toggle>\n</lib-form-section>\n","<lib-form-section\n  title=\"Affinity / Tolerations\"\n  text=\"Configure the Notebook's Affinity and Tolerations.\"\n  icon=\"fa:fas:bullseye\"\n  i18n-title\n  i18n-text\n>\n  <div class=\"row\">\n    <!--Affinity-->\n    <mat-form-field class=\"wide column\" appearance=\"outline\">\n      <mat-label i18n> Affinity Config </mat-label>\n      <mat-select [formControl]=\"parentForm.get('affinityConfig')\">\n        <mat-option value=\"\" i18n=\"option None\">None</mat-option>\n        <mat-option\n          *ngFor=\"let affinityConfig of affinityConfigs\"\n          [value]=\"affinityConfig.configKey\"\n        >\n          {{ affinityConfig.displayName }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <!--Tolerations-->\n    <mat-form-field class=\"wide column\" appearance=\"outline\">\n      <mat-label i18n> Tolerations Group </mat-label>\n      <mat-select [formControl]=\"parentForm.get('tolerationGroup')\">\n        <mat-option value=\"\" i18n=\"option None\">None</mat-option>\n        <mat-option\n          *ngFor=\"let tolerationGroup of tolerationGroups\"\n          [value]=\"tolerationGroup.groupKey\"\n        >\n          {{ tolerationGroup.displayName }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TolerationGroup, AffinityConfig } from 'src/app/types';\n\n@Component({\n  selector: 'app-form-affinity-tolerations',\n  templateUrl: './form-affinity-tolerations.component.html',\n  styleUrls: ['./form-affinity-tolerations.component.scss'],\n})\nexport class FormAffinityTolerationsComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() tolerationGroups: TolerationGroup[];\n  @Input() affinityConfigs: AffinityConfig[];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<lib-form-section\n  title=\"Configurations\"\n  text=\"Extra layers of configurations that will be applied to the new Notebook. \n        (e.g. Insert credentials as Secrets, set Environment Variables.)\"\n  icon=\"fa:fas:sliders-h\"\n  i18n-title\n  i18n-text\n>\n  <mat-form-field class=\"wide\" appearance=\"outline\">\n    <mat-label i18n> Configurations </mat-label>\n    <mat-select [formControl]=\"parentForm.get('configurations')\" multiple>\n      <mat-option *ngFor=\"let config of podDefaults\" [value]=\"config.label\">\n        {{ config.desc }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</lib-form-section>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PodDefault } from 'src/app/types';\nimport { Subscription } from 'rxjs';\nimport { NamespaceService } from 'kubeflow';\nimport { JWABackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-form-configurations',\n  templateUrl: './form-configurations.component.html',\n  styleUrls: ['./form-configurations.component.scss'],\n})\nexport class FormConfigurationsComponent implements OnInit, OnDestroy {\n  podDefaults: PodDefault[];\n  subscriptions = new Subscription();\n\n  @Input() parentForm: FormGroup;\n\n  constructor(public ns: NamespaceService, public backend: JWABackendService) {}\n\n  ngOnInit() {\n    // Keep track of the selected namespace\n    const nsSub = this.ns.getSelectedNamespace().subscribe(namespace => {\n      // Get the PodDefaults of the new Namespace\n      this.backend.getPodDefaults(namespace).subscribe(pds => {\n        this.podDefaults = pds;\n      });\n    });\n\n    this.subscriptions.add(nsSub);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { calculateLimits } from '../utils';\n\n@Component({\n  selector: 'app-form-cpu-ram',\n  templateUrl: './form-cpu-ram.component.html',\n  styleUrls: ['./form-cpu-ram.component.scss'],\n})\nexport class FormCpuRamComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() readonlyCPU: boolean;\n  @Input() readonlyMemory: boolean;\n  @Input() cpuLimitFactor: string;\n  @Input() memoryLimitFactor: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.parentForm.get('cpu').valueChanges.subscribe(val => {\n      // set cpu limit when value of the cpu request changes\n      if (this.parentForm.get('cpuLimit').dirty) {\n        return;\n      }\n\n      const cpu = this.parentForm.get('cpu').value;\n      this.parentForm\n        .get('cpuLimit')\n        .setValue(calculateLimits(cpu, this.cpuLimitFactor));\n    });\n\n    this.parentForm.get('memory').valueChanges.subscribe(val => {\n      // set memory limit when value of the memory request changes\n      if (this.parentForm.get('memoryLimit').dirty) {\n        return;\n      }\n\n      const memory = this.parentForm.get('memory').value;\n      this.parentForm\n        .get('memoryLimit')\n        .setValue(calculateLimits(memory, this.memoryLimitFactor));\n    });\n  }\n\n  getCPUError() {}\n\n  getRAMError() {}\n}\n","<lib-form-section\n  title=\"CPU / RAM\"\n  text=\"Specify the total amount of CPU and RAM reserved by your Notebook Server.\n         For CPU-intensive workloads, you can choose more than 1 CPU (e.g. 1.5).\"\n  icon=\"fa:fas:microchip\"\n  i18n-title=\"Title for the CPU/RAM form section\"\n  i18n-text=\"Text for the CPU/RAM form section\"\n>\n  <div class=\"row\">\n    <!--CPU-->\n    <lib-positive-number-input\n      class=\"column\"\n      min=\"0.1\"\n      step=\"0.1\"\n      [sizeControl]=\"parentForm.get('cpu')\"\n      label=\"Requested CPUs\"\n      i18n-label\n    ></lib-positive-number-input>\n\n    <!--RAM-->\n    <lib-positive-number-input\n      class=\"column\"\n      min=\"0.1\"\n      step=\"0.1\"\n      [sizeControl]=\"parentForm.get('memory')\"\n      label=\"Requested memory in Gi\"\n      i18n-label\n    ></lib-positive-number-input>\n  </div>\n\n  <lib-advanced-options>\n    <div class=\"row\">\n      <!--CPU-->\n      <div class=\"column\">\n        <mat-form-field appearance=\"outline\" class=\"wide\">\n          <mat-label i18n>CPU limit</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            min=\"0.1\"\n            step=\"0.1\"\n            [formControl]=\"parentForm.get('cpuLimit')\"\n          />\n        </mat-form-field>\n      </div>\n\n      <!--RAM-->\n      <div class=\"column\">\n        <mat-form-field appearance=\"outline\" class=\"wide\">\n          <mat-label i18n> Memory limit in Gi </mat-label>\n          <input\n            matInput\n            type=\"number\"\n            min=\"0.1\"\n            step=\"0.1\"\n            [formControl]=\"parentForm.get('memoryLimit')\"\n          />\n        </mat-form-field>\n      </div>\n    </div>\n  </lib-advanced-options>\n</lib-form-section>\n","<lib-form-section\n  title=\"Data Volumes\"\n  text=\"Configure the Volumes to be mounted as your Datasets.\"\n  icon=\"fa:fas:hdd\"\n  i18n-title\n  i18n-text\n>\n  <div [formGroup]=\"parentForm\">\n    <button\n      mat-stroked-button\n      class=\"add-data-vol-button\"\n      color=\"accent\"\n      (click)=\"addVol()\"\n      type=\"button\"\n      [disabled]=\"readonly\"\n      i18n=\"Add data volume button text\"\n    >\n      <mat-icon>add</mat-icon>\n      ADD VOLUME\n    </button>\n\n    <div *ngFor=\"let vol of datavols; let i = index\" class=\"volume-wrapper\">\n      <app-volume\n        [volume]=\"vol\"\n        [notebookName]=\"parentForm.get('name').value\"\n        [namespace]=\"parentForm.get('namespace').value\"\n        [pvcs]=\"pvcs\"\n        [ephemeral]=\"false\"\n        [defaultStorageClass]=\"defaultStorageClass\"\n      >\n      </app-volume>\n\n      <div class=\"del-btn\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteVol(i)\"\n          type=\"button\"\n          [disabled]=\"readonly\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormArray, Validators, FormBuilder } from '@angular/forms';\nimport { addDataVolume } from '../utils';\nimport { Volume } from 'src/app/types';\n\n@Component({\n  selector: 'app-form-data-volumes',\n  templateUrl: './form-data-volumes.component.html',\n  styleUrls: ['./form-data-volumes.component.scss'],\n})\nexport class FormDataVolumesComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() readonly: boolean;\n  @Input() pvcs: Volume[];\n  @Input() defaultStorageClass: boolean;\n\n  get datavols() {\n    const vols = this.parentForm.get('datavols') as FormArray;\n    return vols.controls;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  addVol() {\n    addDataVolume(this.parentForm);\n  }\n\n  deleteVol(idx: number) {\n    const vols = this.parentForm.get('datavols') as FormArray;\n    vols.removeAt(idx);\n    this.parentForm.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Config, Volume, NotebookFormObject } from 'src/app/types';\nimport { Subscription } from 'rxjs';\nimport {\n  NamespaceService,\n  BackendService,\n  SnackBarService,\n  SnackType,\n  getNameError,\n} from 'kubeflow';\nimport { Router } from '@angular/router';\nimport { getFormDefaults, initFormControls } from './utils';\nimport { JWABackendService } from 'src/app/services/backend.service';\nimport { environment } from '@app/environment';\n\n@Component({\n  selector: 'app-form-default',\n  templateUrl: './form-default.component.html',\n  styleUrls: ['./form-default.component.scss'],\n})\nexport class FormDefaultComponent implements OnInit, OnDestroy {\n  currNamespace = '';\n  formCtrl: FormGroup;\n  config: Config;\n\n  ephemeral = false;\n  defaultStorageclass = false;\n\n  blockSubmit = false;\n  formReady = false;\n  pvcs: Volume[] = [];\n  existingNotebooks = new Set<string>();\n\n  subscriptions = new Subscription();\n\n  constructor(\n    public namespaceService: NamespaceService,\n    public backend: JWABackendService,\n    public router: Router,\n    public popup: SnackBarService,\n  ) {}\n\n  ngOnInit(): void {\n    // Initialize the form control\n    this.formCtrl = this.getFormDefaults();\n\n    // Update the form Values from the default ones\n    this.backend.getConfig().subscribe(config => {\n      if (Object.keys(config).length === 0) {\n        // Don't fire on empty config\n        return;\n      }\n\n      this.config = config;\n      this.initFormControls(this.formCtrl, config);\n    });\n\n    // Keep track of the selected namespace\n    this.subscriptions.add(\n      this.namespaceService.getSelectedNamespace().subscribe(namespace => {\n        this.currNamespace = namespace;\n        this.formCtrl.controls.namespace.setValue(this.currNamespace);\n\n        // Get the PVCs of the new Namespace\n        this.backend.getVolumes(namespace).subscribe(pvcs => {\n          this.pvcs = pvcs;\n        });\n      }),\n    );\n\n    // Check if a default StorageClass is set\n    this.backend.getDefaultStorageClass().subscribe(defaultClass => {\n      if (defaultClass.length === 0) {\n        this.defaultStorageclass = false;\n        this.popup.open(\n          $localize`No default Storage Class is set. Can't create new Disks for the new Notebook. Please use an Existing Disk.`,\n          SnackType.Warning,\n          0,\n        );\n      } else {\n        this.defaultStorageclass = true;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // Unsubscriptions\n    this.subscriptions.unsubscribe();\n  }\n\n  // Functions for handling the Form Group of the entire Form\n  getFormDefaults() {\n    return getFormDefaults();\n  }\n\n  initFormControls(formCtrl: FormGroup, config: Config) {\n    initFormControls(formCtrl, config);\n  }\n\n  // Form Actions\n  getSubmitNotebook(): NotebookFormObject {\n    const notebookCopy = this.formCtrl.value as NotebookFormObject;\n    const notebook = JSON.parse(JSON.stringify(notebookCopy));\n\n    // Use the custom image instead\n    if (notebook.customImageCheck) {\n      notebook.image = notebook.customImage;\n    } else if (notebook.serverType === 'group-one') {\n      // Set notebook image from imageGroupOne\n      notebook.image = notebook.imageGroupOne;\n    } else if (notebook.serverType === 'group-two') {\n      // Set notebook image from imageGroupTwo\n      notebook.image = notebook.imageGroupTwo;\n    }\n\n    // Remove unnecessary images from the request sent to the backend\n    delete notebook.imageGroupOne;\n    delete notebook.imageGroupTwo;\n\n    // Ensure CPU input is a string\n    if (typeof notebook.cpu === 'number') {\n      notebook.cpu = notebook.cpu.toString();\n    }\n\n    // Ensure GPU input is a string\n    if (typeof notebook.gpus.num === 'number') {\n      notebook.gpus.num = notebook.gpus.num.toString();\n    }\n\n    // Remove cpuLimit from request if null\n    if (notebook.cpuLimit == null) {\n      delete notebook.cpuLimit;\n      // Ensure CPU Limit input is a string\n    } else if (typeof notebook.cpuLimit === 'number') {\n      notebook.cpuLimit = notebook.cpuLimit.toString();\n    }\n\n    // Remove memoryLimit from request if null\n    if (notebook.memoryLimit == null) {\n      delete notebook.memoryLimit;\n      // Add Gi to memoryLimit\n    } else if (notebook.memoryLimit) {\n      notebook.memoryLimit = notebook.memoryLimit.toString() + 'Gi';\n    }\n\n    // Add Gi to all sizes\n    if (notebook.memory) {\n      notebook.memory = notebook.memory.toString() + 'Gi';\n    }\n\n    if (notebook.workspace.size) {\n      notebook.workspace.size = notebook.workspace.size.toString() + 'Gi';\n    }\n\n    for (const vol of notebook.datavols) {\n      if (vol.size) {\n        vol.size = vol.size + 'Gi';\n      }\n    }\n\n    return notebook;\n  }\n\n  onSubmit() {\n    const notebook = this.getSubmitNotebook();\n    this.backend.createNotebook(notebook).subscribe(() => {\n      this.popup.close();\n      this.router.navigate(['/']);\n    });\n  }\n\n  onCancel() {\n    this.router.navigate(['/']);\n  }\n}\n","<div class=\"center-flex\">\n  <div class=\"form-with-buttons\">\n    <div class=\"form--card-container mat-elevation-z2\">\n      <form novalidate (ngSubmit)=\"onSubmit()\" [formGroup]=\"formCtrl\">\n        <app-form-name-namespace\n          [parentForm]=\"formCtrl\"\n        ></app-form-name-namespace>\n\n        <app-form-image\n          [parentForm]=\"formCtrl\"\n          [images]=\"config?.image?.options\"\n          [imagesGroupOne]=\"config?.imageGroupOne?.options\"\n          [imagesGroupTwo]=\"config?.imageGroupTwo?.options\"\n          [allowCustomImage]=\"config?.allowCustomImage\"\n          [hideRegistry]=\"config?.hideRegistry\"\n          [hideTag]=\"config?.hideTag\"\n        ></app-form-image>\n\n        <app-form-cpu-ram\n          [parentForm]=\"formCtrl\"\n          [readonlyCPU]=\"config?.cpu?.readOnly\"\n          [readonlyMemory]=\"config?.memory?.readOnly\"\n          [cpuLimitFactor]=\"config?.cpu?.limitFactor\"\n          [memoryLimitFactor]=\"config?.memory?.limitFactor\"\n        ></app-form-cpu-ram>\n\n        <app-form-gpus\n          [parentForm]=\"formCtrl\"\n          [vendors]=\"config?.gpus?.value.vendors\"\n        ></app-form-gpus>\n\n        <app-form-workspace-volume\n          [parentForm]=\"formCtrl\"\n          [pvcs]=\"pvcs\"\n          [readonly]=\"config?.workspaceVolume?.readOnly\"\n          [defaultStorageClass]=\"defaultStorageclass\"\n        >\n        </app-form-workspace-volume>\n\n        <app-form-data-volumes\n          [parentForm]=\"formCtrl\"\n          [pvcs]=\"pvcs\"\n          [readonly]=\"config?.dataVolumes?.readOnly\"\n          [defaultStorageClass]=\"defaultStorageclass\"\n        >\n        </app-form-data-volumes>\n\n        <app-form-configurations\n          [parentForm]=\"formCtrl\"\n        ></app-form-configurations>\n\n        <app-form-affinity-tolerations\n          [parentForm]=\"formCtrl\"\n          [affinityConfigs]=\"config?.affinityConfig?.options\"\n          [tolerationGroups]=\"config?.tolerationGroup?.options\"\n        ></app-form-affinity-tolerations>\n\n        <app-form-advanced-options\n          [parentForm]=\"formCtrl\"\n        ></app-form-advanced-options>\n      </form>\n    </div>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      class=\"form--button-margin\"\n      (click)=\"onSubmit()\"\n      [disabled]=\"!formCtrl.valid || blockSubmit\"\n      i18n\n    >\n      LAUNCH\n    </button>\n\n    <button mat-raised-button type=\"button\" (click)=\"onCancel()\" i18n>\n      CANCEL\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { FormDefaultComponent } from './form-default.component';\nimport { FormNameComponent } from './form-name/form-name.component';\nimport { FormImageComponent } from './form-image/form-image.component';\nimport { FormCpuRamComponent } from './form-cpu-ram/form-cpu-ram.component';\nimport { FormGpusComponent } from './form-gpus/form-gpus.component';\nimport { FormAdvancedOptionsComponent } from './form-advanced-options/form-advanced-options.component';\n\nimport {\n  FormModule as KfFormModule,\n  ImmediateErrorStateMatcher,\n} from 'kubeflow';\nimport { FormWorkspaceVolumeComponent } from './form-workspace-volume/form-workspace-volume.component';\nimport { VolumeComponent } from './volume/volume.component';\nimport { FormDataVolumesComponent } from './form-data-volumes/form-data-volumes.component';\nimport { FormConfigurationsComponent } from './form-configurations/form-configurations.component';\nimport { FormAffinityTolerationsComponent } from './form-affinity-tolerations/form-affinity-tolerations.component';\n\n@NgModule({\n  declarations: [\n    FormDefaultComponent,\n    FormNameComponent,\n    FormImageComponent,\n    FormCpuRamComponent,\n    FormWorkspaceVolumeComponent,\n    FormDataVolumesComponent,\n    VolumeComponent,\n    FormGpusComponent,\n    FormAdvancedOptionsComponent,\n    FormConfigurationsComponent,\n    FormAffinityTolerationsComponent,\n  ],\n  imports: [\n    CommonModule,\n    KfFormModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    MatButtonToggleModule,\n  ],\n  exports: [\n    FormDefaultComponent,\n    FormNameComponent,\n    FormImageComponent,\n    FormCpuRamComponent,\n    FormWorkspaceVolumeComponent,\n    FormDataVolumesComponent,\n    VolumeComponent,\n    FormGpusComponent,\n    FormAdvancedOptionsComponent,\n    FormConfigurationsComponent,\n    FormAffinityTolerationsComponent,\n  ],\n})\nexport class FormDefaultModule {}\n","<lib-form-section\n  title=\"GPUs\"\n  text=\"Specify the number and Vendor of GPUs that will be assigned to the \n        Notebook Server's Container.\"\n  icon=\"custom:gpuSectionIcon\"\n  i18n-title\n  i18n-text\n>\n  <div class=\"row\" [formGroup]=\"parentForm.get('gpus')\">\n    <!--GPUs Number-->\n    <mat-form-field class=\"column\" appearance=\"outline\">\n      <mat-label i18n>Number of GPUs</mat-label>\n      <mat-select matNativeControl formControlName=\"num\">\n        <mat-option value=\"none\" i18n=\"option None\">None</mat-option>\n        <mat-option *ngFor=\"let v of gpusCount\" [value]=\"v\">\n          {{ v }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <!--GPUs Vendor-->\n    <mat-form-field class=\"column\" appearance=\"outline\">\n      <mat-label i18n>GPU Vendor</mat-label>\n      <mat-select matNativeControl formControlName=\"vendor\" id=\"gpu-vendor\">\n        <mat-option\n          *ngFor=\"let v of vendors\"\n          [value]=\"v.limitsKey\"\n          [matTooltip]=\"vendorTooltip(v)\"\n        >\n          {{ v.uiName }}\n        </mat-option>\n      </mat-select>\n      <mat-error>{{ getVendorError() }}</mat-error>\n    </mat-form-field>\n  </div>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { GPUVendor } from 'src/app/types';\nimport { JWABackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-form-gpus',\n  templateUrl: './form-gpus.component.html',\n  styleUrls: ['./form-gpus.component.scss'],\n})\nexport class FormGpusComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() vendors: GPUVendor[] = [];\n\n  private gpuCtrl: FormGroup;\n  public installedVendors = new Set<string>();\n\n  subscriptions = new Subscription();\n  maxGPUs = 16;\n  gpusCount = ['1', '2', '4', '8'];\n\n  constructor(public backend: JWABackendService) {}\n\n  ngOnInit() {\n    this.gpuCtrl = this.parentForm.get('gpus') as FormGroup;\n\n    // Vendor should not be empty if the user selects GPUs num\n    this.parentForm\n      .get('gpus')\n      .get('vendor')\n      .setValidators([this.vendorWithNum()]);\n\n    this.subscriptions.add(\n      this.gpuCtrl.get('num').valueChanges.subscribe((n: string) => {\n        if (n === 'none') {\n          this.gpuCtrl.get('vendor').disable();\n        } else {\n          this.gpuCtrl.get('vendor').enable();\n        }\n      }),\n    );\n\n    this.backend.getGPUVendors().subscribe(vendors => {\n      this.installedVendors = new Set(vendors);\n    });\n  }\n\n  // Vendor handling\n  public vendorTooltip(vendor: GPUVendor) {\n    return !this.installedVendors.has(vendor.limitsKey)\n      ? $localize`There are currently no ${vendor.uiName} GPUs in you cluster.`\n      : '';\n  }\n\n  // Custom Validation\n  public getVendorError() {\n    const vendorCtrl = this.parentForm.get('gpus').get('vendor');\n\n    if (vendorCtrl.hasError('vendorNullName')) {\n      return $localize`You must also specify the GPU Vendor for the assigned GPUs`;\n    }\n  }\n\n  private vendorWithNum(): ValidatorFn {\n    // Make sure that if the user has specified a number of GPUs\n    // that they also specify the GPU vendor\n    return (control: AbstractControl): { [key: string]: any } => {\n      const num = this.parentForm.get('gpus').get('num').value;\n      const vendor = this.parentForm.get('gpus').get('vendor').value;\n\n      if (num !== 'none' && vendor === '') {\n        return { vendorNullName: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n","<lib-form-section\n  title=\"Image\"\n  text=\"A starter Jupyter Docker Image with a baseline deployment and typical\n        ML packages\"\n  icon=\"fa:fab:docker\"\n  i18n-title=\"Title for the Image section of the form\"\n  i18n-text=\"Text for the Image section of the form\"\n>\n  <div class=\"flex-column\">\n    <mat-checkbox\n      *ngIf=\"allowCustomImage\"\n      [formControl]=\"parentForm.get('customImageCheck')\"\n      i18n\n    >\n      Custom Image\n    </mat-checkbox>\n\n    <mat-button-toggle-group\n      [formControl]=\"parentForm.get('serverType')\"\n      class=\"server-type-wrapper\"\n      attr.aria-label=\"Server Type\"\n      i18n-aria-label=\"Aria label for the Server Type\"\n    >\n      <mat-button-toggle\n        value=\"jupyter\"\n        attr.aria-label=\"Use JupyterLab based server\"\n        i18n-aria-label=\"Aria label for JupyterLab type server\"\n      >\n        <mat-icon class=\"server-type\" svgIcon=\"jupyterlab\"></mat-icon>\n      </mat-button-toggle>\n\n      <mat-button-toggle\n        value=\"group-one\"\n        attr.aria-label=\"Use Group One based server\"\n        i18n-aria-label=\"Aria label for Group One server\"\n      >\n        <mat-icon class=\"server-type\" svgIcon=\"group-one\"></mat-icon>\n      </mat-button-toggle>\n      <mat-button-toggle\n        value=\"group-two\"\n        attr.aria-label=\"Use Group Two based server\"\n        i18n-aria-label=\"Aria label for Group Two server\"\n      >\n        <mat-icon class=\"server-type\" svgIcon=\"group-two\"></mat-icon>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n\n  <mat-form-field\n    class=\"wide\"\n    appearance=\"outline\"\n    *ngIf=\"\n      !parentForm?.value.customImageCheck &&\n      parentForm?.value.serverType === 'jupyter'\n    \"\n  >\n    <!-- If readonly, then make it an input element instead of select -->\n    <mat-label i18n>Image</mat-label>\n    <mat-select\n      placeholder=\"Docker Image\"\n      i18n-placeholder\n      [formControl]=\"parentForm.get('image')\"\n    >\n      <mat-option *ngFor=\"let img of images\" [value]=\"img\" [matTooltip]=\"img\">\n        {{ imageDisplayName(img) }}\n      </mat-option>\n    </mat-select>\n    <mat-error i18n>Please provide an Image to use</mat-error>\n  </mat-form-field>\n\n  <mat-form-field\n    class=\"wide\"\n    appearance=\"outline\"\n    *ngIf=\"\n      !parentForm?.value.customImageCheck &&\n      parentForm?.value.serverType === 'group-one'\n    \"\n  >\n    <!-- If readonly, then make it an input element instead of select -->\n    <mat-label i18n>Image</mat-label>\n    <mat-select\n      placeholder=\"Docker Image\"\n      i18n-placeholder\n      [formControl]=\"parentForm.get('imageGroupOne')\"\n    >\n      <mat-option\n        *ngFor=\"let img of imagesGroupOne\"\n        [value]=\"img\"\n        [matTooltip]=\"img\"\n      >\n        {{ imageDisplayName(img) }}\n      </mat-option>\n    </mat-select>\n    <mat-error i18n>Please provide an Image to use</mat-error>\n  </mat-form-field>\n\n  <mat-form-field\n    class=\"wide\"\n    appearance=\"outline\"\n    *ngIf=\"\n      !parentForm?.value.customImageCheck &&\n      parentForm?.value.serverType === 'group-two'\n    \"\n  >\n    <!-- If readonly, then make it an input element instead of select -->\n    <mat-label i18n>Image</mat-label>\n    <mat-select\n      placeholder=\"Docker Image\"\n      i18n-placeholder\n      [formControl]=\"parentForm.get('imageGroupTwo')\"\n    >\n      <mat-option\n        *ngFor=\"let img of imagesGroupTwo\"\n        [value]=\"img\"\n        [matTooltip]=\"img\"\n      >\n        {{ imageDisplayName(img) }}\n      </mat-option>\n    </mat-select>\n    <mat-error i18n>Please provide an Image to use</mat-error>\n  </mat-form-field>\n\n  <mat-form-field\n    class=\"wide\"\n    appearance=\"outline\"\n    *ngIf=\"parentForm?.value.customImageCheck\"\n  >\n    <mat-label i18n>Custom Image</mat-label>\n    <input\n      matInput\n      placeholder=\"Provide a custom Image\"\n      [formControl]=\"parentForm.get('customImage')\"\n      #cstmimg\n    />\n    <mat-error i18n>Please provide an Image to use</mat-error>\n  </mat-form-field>\n\n  <lib-advanced-options>\n    <div class=\"row\">\n      <mat-form-field class=\"column\" appearance=\"outline\">\n        <mat-label i18n>Image pull policy</mat-label>\n        <mat-select [formControl]=\"parentForm.get('imagePullPolicy')\">\n          <mat-option value=\"Always\" i18n=\"ImagePullPolicy: Always\">\n            Always\n          </mat-option>\n          <mat-option value=\"IfNotPresent\" i18n=\"ImagePullPolicy: IfNotPresent\">\n            IfNotPresent\n          </mat-option>\n          <mat-option value=\"Never\" i18n=\"ImagePullPolicy: Never\">\n            Never\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </lib-advanced-options>\n</lib-form-section>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { environment } from '@app/environment';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-form-image',\n  templateUrl: './form-image.component.html',\n  styleUrls: ['./form-image.component.scss'],\n})\nexport class FormImageComponent implements OnInit, OnDestroy {\n  @Input() parentForm: FormGroup;\n  @Input() images: string[];\n  @Input() imagesGroupOne: string[];\n  @Input() imagesGroupTwo: string[];\n  @Input() allowCustomImage: boolean;\n  @Input() hideRegistry: boolean;\n  @Input() hideTag: boolean;\n\n  subs = new Subscription();\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'jupyterlab',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.jupyterlabLogo),\n    );\n    iconRegistry.addSvgIcon(\n      'group-one',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.groupOneLogo),\n    );\n    iconRegistry.addSvgIcon(\n      'group-two',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.groupTwoLogo),\n    );\n  }\n\n  ngOnInit() {\n    this.subs.add(\n      this.parentForm.get('customImageCheck').valueChanges.subscribe(check => {\n        // Make sure that the use will insert and Image value\n        if (check) {\n          this.parentForm.get('customImage').setValidators(Validators.required);\n          this.parentForm.get('image').setValidators([]);\n          this.parentForm.get('imageGroupOne').setValidators([]);\n          this.parentForm.get('imageGroupTwo').setValidators([]);\n        }\n        this.parentForm.get('serverType').valueChanges.subscribe(selection => {\n          if (selection === 'jupyter') {\n            this.parentForm.get('customImage').setValidators([]);\n            this.parentForm.get('image').setValidators(Validators.required);\n            this.parentForm.get('imageGroupOne').setValidators([]);\n            this.parentForm.get('imageGroupTwo').setValidators([]);\n          } else if (selection === 'group-one') {\n            this.parentForm.get('customImage').setValidators([]);\n            this.parentForm.get('image').setValidators([]);\n            this.parentForm\n              .get('imageGroupOne')\n              .setValidators(Validators.required);\n            this.parentForm.get('imageGroupTwo').setValidators([]);\n          } else if (selection === 'group-two') {\n            this.parentForm.get('customImage').setValidators([]);\n            this.parentForm.get('image').setValidators([]);\n            this.parentForm.get('imageGroupOne').setValidators([]);\n            this.parentForm\n              .get('imageGroupTwo')\n              .setValidators(Validators.required);\n          }\n          this.parentForm.get('image').updateValueAndValidity();\n          this.parentForm.get('imageGroupOne').updateValueAndValidity();\n          this.parentForm.get('imageGroupTwo').updateValueAndValidity();\n        });\n        this.parentForm.get('customImage').updateValueAndValidity();\n        this.parentForm.get('serverType').updateValueAndValidity();\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n  imageDisplayName(image: string): string {\n    const [name, tag = null] = image.split(':');\n    let tokens = name.split('/');\n\n    if (this.hideRegistry && tokens.length > 1 && tokens[0].includes('.')) {\n      tokens.shift();\n    }\n\n    let displayName = tokens.join('/');\n\n    if (!this.hideTag && tag !== null) {\n      displayName = `${displayName}:${tag}`;\n    }\n\n    return displayName;\n  }\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport {\n  FormGroup,\n  ValidatorFn,\n  AbstractControl,\n  Validators,\n} from '@angular/forms';\nimport { NamespaceService } from 'kubeflow';\nimport { Subscription } from 'rxjs';\nimport { JWABackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-form-name-namespace',\n  templateUrl: './form-name.component.html',\n  styleUrls: ['./form-name.component.scss'],\n})\nexport class FormNameComponent implements OnInit, OnDestroy {\n  subscriptions = new Subscription();\n  existingNotebooks: Set<string> = new Set<string>();\n\n  @Input() parentForm: FormGroup;\n\n  constructor(\n    private backend: JWABackendService,\n    private ns: NamespaceService,\n  ) {}\n\n  ngOnInit() {\n    // Keep track of the existing Notebooks in the selected Namespace\n    // Use these names to check if the input name exists\n    const nsSub = this.ns.getSelectedNamespace().subscribe(ns => {\n      this.backend.getNotebooks(ns).subscribe(notebooks => {\n        this.existingNotebooks.clear();\n        notebooks.map(nb => this.existingNotebooks.add(nb.name));\n      });\n    });\n\n    this.subscriptions.add(nsSub);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<lib-form-section\n  title=\"Name\"\n  text=\"Specify the name of the Notebook Server and the Namespace it will belong to.\"\n  icon=\"fa:fas:book\"\n  i18n-title\n  i18n-text\n>\n  <lib-form-name-namespace-inputs\n    [nameControl]=\"parentForm.get('name')\"\n    maxLength=\"40\"\n    [namespaceControl]=\"parentForm.get('namespace')\"\n    resourceName=\"Notebook Server\"\n    [existingNames]=\"existingNotebooks\"\n  >\n  </lib-form-name-namespace-inputs>\n</lib-form-section>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { SnackBarService, SnackType } from 'kubeflow';\nimport { Volume } from 'src/app/types';\n\n@Component({\n  selector: 'app-form-workspace-volume',\n  templateUrl: './form-workspace-volume.component.html',\n  styleUrls: ['./form-workspace-volume.component.scss'],\n})\nexport class FormWorkspaceVolumeComponent implements OnInit, OnDestroy {\n  subscriptions = new Subscription();\n  private readOnlyPrv = false;\n\n  @Input() parentForm: FormGroup;\n  @Input() pvcs: Volume[];\n  @Input() storageClasses: string[];\n  @Input() defaultStorageClass: boolean;\n  @Input()\n  get readonly() {\n    return this.readOnlyPrv;\n  }\n  set readonly(b) {\n    this.readOnlyPrv = b;\n  }\n\n  constructor(private snackBar: SnackBarService) {}\n\n  ngOnInit() {\n    // Show a warning if no persistent storage is provided\n    this.subscriptions.add(\n      this.parentForm\n        .get('noWorkspace')\n        .valueChanges.subscribe((b: boolean) => {\n          // close the snackbar if deselected\n          if (!b) {\n            this.snackBar.close();\n          } else {\n            const msg = $localize`Your workspace will not be persistent. You will lose all data in it, if your notebook is terminated for any reason.`;\n\n            this.snackBar.open(msg, SnackType.Warning, 0);\n          }\n        }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    this.snackBar.close();\n  }\n}\n","<lib-form-section\n  title=\"Workspace Volume\"\n  text=\"Configure the Volume to be mounted as your personal Workspace.\"\n  icon=\"fa:fas:laptop-code\"\n  i18n-title\n  i18n-text\n>\n  <div [formGroup]=\"parentForm\">\n    <mat-checkbox formControlName=\"noWorkspace\" i18n>\n      Don't use Persistent Storage for User's home\n    </mat-checkbox>\n\n    <app-volume\n      [volume]=\"parentForm.get('workspace')\"\n      [notebookName]=\"parentForm.value.name\"\n      [pvcs]=\"pvcs\"\n      [ephemeral]=\"parentForm.value.noWorkspace\"\n      [namespace]=\"parentForm.value.namespace\"\n      [defaultStorageClass]=\"defaultStorageClass\"\n    >\n    </app-volume>\n  </div>\n</lib-form-section>\n","import { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ConfigVolume, GPU, Config } from 'src/app/types';\nimport { getNameSyncValidators, getNameAsyncValidators } from 'kubeflow';\n\nexport function getFormDefaults(): FormGroup {\n  const fb = new FormBuilder();\n\n  return fb.group({\n    name: ['', [Validators.required]],\n    namespace: ['', [Validators.required]],\n    image: ['', [Validators.required]],\n    imageGroupOne: ['', [Validators.required]],\n    imageGroupTwo: ['', [Validators.required]],\n    allowCustomImage: [true, []],\n    imagePullPolicy: ['IfNotPresent', [Validators.required]],\n    customImage: ['', []],\n    customImageCheck: [false, []],\n    serverType: ['jupyter', [Validators.required]],\n    cpu: [1, [Validators.required]],\n    cpuLimit: ['', []],\n    memory: [1, [Validators.required]],\n    memoryLimit: ['', []],\n    gpus: fb.group({\n      vendor: ['', []],\n      num: ['', []],\n    }),\n    noWorkspace: [false, []],\n    workspace: fb.group({\n      type: ['', [Validators.required]],\n      name: ['', getNameSyncValidators(), getNameAsyncValidators()],\n      templatedName: ['', []],\n      size: [1, [Validators.required]],\n      path: [{ value: '', disabled: true }, [Validators.required]],\n      templatedPath: ['', []],\n      mode: ['', [Validators.required]],\n      class: ['{none}', [Validators.required]],\n      extraFields: fb.group({}),\n    }),\n    affinityConfig: ['', []],\n    tolerationGroup: ['', []],\n    datavols: fb.array([]),\n    shm: [true, []],\n    configurations: [[], []],\n  });\n}\n\nexport function createVolumeControl(vol: ConfigVolume, readonly = false) {\n  const fb = new FormBuilder();\n\n  const ctrl = fb.group({\n    type: [vol.type.value, [Validators.required]],\n    name: ['volume', getNameSyncValidators(), getNameAsyncValidators()],\n    templatedName: [vol.name.value, []],\n    templatedPath: [vol.mountPath.value, []],\n    size: [configSizeToNumber(vol.size.value), [Validators.required]],\n    path: [vol.mountPath.value, [Validators.required]],\n    mode: [vol.accessModes.value, [Validators.required]],\n    class: ['{none}', []],\n    extraFields: fb.group({}),\n  });\n\n  if (readonly) {\n    ctrl.disable();\n  }\n\n  return ctrl;\n}\n\nexport function updateVolumeControl(\n  volCtrl: FormGroup,\n  vol: ConfigVolume,\n  readonly = false,\n) {\n  volCtrl.get('name').setValue(vol.name.value);\n  volCtrl.get('type').setValue(vol.type.value);\n  volCtrl.get('size').setValue(configSizeToNumber(vol.size.value));\n  volCtrl.get('mode').setValue(vol.accessModes.value);\n  volCtrl.get('path').setValue(vol.mountPath.value);\n  volCtrl.get('templatedName').setValue(vol.name.value);\n  volCtrl.get('templatedPath').setValue(vol.mountPath.value);\n\n  if (readonly) {\n    volCtrl.disable();\n  }\n}\n\nexport function addDataVolume(\n  formCtrl: FormGroup,\n  vol: ConfigVolume = null,\n  readonly = false,\n) {\n  // If no vol is provided create one with default values\n  if (vol === null) {\n    const l: number = formCtrl.value.datavols.length;\n    const name: string = '{notebook-name}-vol-' + (l + 1);\n\n    vol = {\n      type: {\n        value: 'New',\n      },\n      name: {\n        value: '{notebook-name}-vol-' + (l + 1),\n      },\n      size: {\n        value: '5',\n      },\n      mountPath: {\n        value: '/home/jovyan/{volume-name}',\n      },\n      accessModes: {\n        value: 'ReadWriteOnce',\n      },\n    };\n  }\n\n  // Push it to the control\n  const ctrl = createVolumeControl(vol, readonly);\n  const vols = formCtrl.get('datavols') as FormArray;\n  vols.push(ctrl);\n}\n\nexport function updateGPUControl(formCtrl: FormGroup, gpuConf: any) {\n  // If the backend didn't send the value, default to none\n  if (gpuConf == null) {\n    formCtrl.get('num').setValue('none');\n    return;\n  }\n\n  // Set the values\n  const gpu = gpuConf.value as GPU;\n  formCtrl.get('num').setValue(gpu.num);\n  formCtrl.get('vendor').setValue(gpu.vendor);\n\n  // Don't allow the user to edit them if the admin does not allow it\n  if (gpuConf.readOnly) {\n    formCtrl.get('num').disable();\n    formCtrl.get('vendor').disable();\n  }\n}\n\nexport function calculateLimits(\n  requests: number | string,\n  factor: number | string,\n): string | null {\n  const limit = configSizeToNumber(requests) * configSizeToNumber(factor);\n\n  if (isNaN(limit)) {\n    return null;\n  }\n\n  return limit.toFixed(1);\n}\n\nexport function initCpuFormControls(formCtrl: FormGroup, config: Config) {\n  const cpu = Number(config.cpu.value);\n  if (!isNaN(cpu)) {\n    formCtrl.controls.cpu.setValue(cpu);\n  }\n\n  if (config.cpu.readOnly) {\n    formCtrl.controls.cpu.disable();\n    formCtrl.controls.cpuLimit.disable();\n  }\n\n  formCtrl.controls.cpuLimit.setValue(\n    calculateLimits(cpu, config.cpu.limitFactor),\n  );\n}\n\nexport function initMemoryFormControls(formCtrl: FormGroup, config: Config) {\n  const memory = configSizeToNumber(config.memory.value);\n  if (!isNaN(memory)) {\n    formCtrl.controls.memory.setValue(memory);\n  }\n\n  if (config.memory.readOnly) {\n    formCtrl.controls.memory.disable();\n    formCtrl.controls.memoryLimit.disable();\n  }\n\n  formCtrl.controls.memoryLimit.setValue(\n    calculateLimits(memory, config.memory.limitFactor),\n  );\n}\n\nexport function initFormControls(formCtrl: FormGroup, config: Config) {\n  initCpuFormControls(formCtrl, config);\n\n  initMemoryFormControls(formCtrl, config);\n\n  formCtrl.controls.image.setValue(config.image.value);\n\n  formCtrl.controls.imageGroupOne.setValue(config.imageGroupOne.value);\n\n  formCtrl.controls.imageGroupTwo.setValue(config.imageGroupTwo.value);\n\n  formCtrl.controls.imagePullPolicy.setValue(config.imagePullPolicy.value);\n  if (config.imagePullPolicy.readOnly) {\n    formCtrl.controls.imagePullPolicy.disable();\n  }\n\n  const wsCtrl = formCtrl.get('workspace') as FormGroup;\n  updateVolumeControl(\n    wsCtrl,\n    config.workspaceVolume.value,\n    config.workspaceVolume.readOnly,\n  );\n\n  // Disable the mount path by default\n  const ws = formCtrl.controls.workspace as FormGroup;\n  ws.controls.path.disable();\n\n  // Add the data volumes\n  config.dataVolumes.value.forEach(vol => {\n    // Create a new FormControl to append to the array\n    addDataVolume(formCtrl, vol.value, config.dataVolumes.readOnly);\n  });\n\n  // Affinity\n  formCtrl.controls.affinityConfig.setValue(config.affinityConfig.value);\n  if (config.affinityConfig.readOnly) {\n    formCtrl.controls.affinityConfig.disable();\n  }\n\n  // Tolerations\n  formCtrl.controls.tolerationGroup.setValue(config.tolerationGroup.value);\n  if (config.tolerationGroup.readOnly) {\n    formCtrl.controls.tolerationGroup.disable();\n  }\n\n  // GPUs\n  updateGPUControl(formCtrl.get('gpus') as FormGroup, config.gpus);\n\n  formCtrl.controls.shm.setValue(config.shm.value);\n  if (config.shm.readOnly) {\n    formCtrl.controls.shm.disable();\n  }\n\n  // PodDefaults / Configurations. Set the pre selected labels\n  formCtrl.controls.configurations.setValue(config.configurations.value);\n  if (config.configurations.readOnly) {\n    formCtrl.controls.configurations.disable();\n  }\n}\n\nexport function configSizeToNumber(size: string | number): number {\n  if (size == null) {\n    return NaN;\n  }\n\n  if (typeof size === 'number') {\n    return size;\n  }\n\n  return Number(size.replace('Gi', ''));\n}\n","<div *ngIf=\"volume\" [formGroup]=\"volume\" class=\"row\">\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"type\">\n    <mat-label i18n>Type</mat-label>\n    <mat-select formControlName=\"type\">\n      <mat-option *ngIf=\"defaultStorageClass\" value=\"New\" i18n>\n        New\n      </mat-option>\n      <mat-option value=\"Existing\" i18n> Existing </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!-- Volume Name Input -->\n  <lib-name-input\n    class=\"column\"\n    [nameControl]=\"volume.get('name')\"\n    id=\"name\"\n  ></lib-name-input>\n\n  <!-- Size Input -->\n  <lib-positive-number-input\n    id=\"size\"\n    class=\"column\"\n    min=\"1\"\n    step=\"1\"\n    [sizeControl]=\"volume.get('size')\"\n    label=\"Size in Gi\"\n    i18n-label\n  ></lib-positive-number-input>\n\n  <!-- Mode Input -->\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"mode\">\n    <mat-label i18n>Mode</mat-label>\n    <mat-select formControlName=\"mode\">\n      <mat-option value=\"ReadWriteOnce\" i18n>ReadWriteOnce</mat-option>\n      <mat-option value=\"ReadOnlyMany\" i18n>ReadOnlyMany </mat-option>\n      <mat-option value=\"ReadWriteMany\" i18n>ReadWriteMany </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!-- Mount Input -->\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"path\">\n    <mat-label i18n>Mount Point</mat-label>\n    <input matInput formControlName=\"path\" />\n  </mat-form-field>\n</div>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Volume } from 'src/app/types';\nimport { updateNonDirtyControl } from 'kubeflow';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './volume.component.html',\n  styleUrls: ['./volume.component.scss'],\n})\nexport class VolumeComponent implements OnInit, OnDestroy {\n  private notebookNamePrv = '';\n  private defaultStorageClassPrv: boolean;\n\n  currentPVC: Volume;\n  existingPVCs: Set<string> = new Set();\n\n  subscriptions = new Subscription();\n\n  // ----- @Input Parameters -----\n  @Input() volume: FormGroup;\n  @Input() namespace: string;\n\n  @Input()\n  get notebookName() {\n    return this.notebookNamePrv;\n  }\n  set notebookName(nm: string) {\n    if (!this.volume.disabled) {\n      this.notebookNameChanged(nm);\n    }\n  }\n\n  @Input()\n  set ephemeral(b: boolean) {\n    if (!this.volume.disabled) {\n      this.storageOptionChanged(b);\n    }\n  }\n\n  @Input()\n  set pvcs(data) {\n    if (!this.volume.disabled) {\n      this.pvcsChanged(data);\n    }\n  }\n\n  @Input()\n  get defaultStorageClass() {\n    return this.defaultStorageClassPrv;\n  }\n  set defaultStorageClass(s: boolean) {\n    // Update the current pvc type\n    this.defaultStorageClassPrv = s;\n\n    if (!this.volume.disabled) {\n      this.updateVolInputFields();\n    }\n  }\n\n  // ----- Get macros -----\n  get selectedVolIsExistingType(): boolean {\n    return (\n      this.existingPVCs.has(this.volume.value.name) || !this.defaultStorageClass\n    );\n  }\n\n  get currentVolName(): string {\n    // Change volume name on notebook-name change, if user hasn't changed it already\n    if (!this.volume.controls.name.dirty) {\n      return this.volume\n        .get('templatedName')\n        .value.replace('{notebook-name}', this.notebookName);\n    } else {\n      return this.volume.get('name').value;\n    }\n  }\n\n  // ----- utility functions -----\n  setVolumeType(type: string) {\n    if (type === 'Existing') {\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n    } else {\n      this.volume.controls.size.enable();\n      this.volume.controls.mode.enable();\n    }\n  }\n\n  updateVolInputFields(): void {\n    // Disable input fields according to volume type\n    if (this.selectedVolIsExistingType) {\n      // Disable all fields\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n      this.volume.controls.type.setValue('Existing');\n    } else {\n      this.volume.controls.size.enable();\n      this.volume.controls.mode.enable();\n      this.volume.controls.type.setValue('New');\n    }\n    // Fix mount point if user hasn't changed it and it's not workspace volume\n    updateNonDirtyControl(\n      this.volume.get('path'),\n      this.volume\n        .get('templatedPath')\n        .value.replace('{volume-name}', this.currentVolName),\n    );\n  }\n\n  // ----- Component Functions -----\n  constructor() {}\n\n  ngOnInit() {\n    // type\n    this.subscriptions.add(\n      this.volume.get('type').valueChanges.subscribe((type: string) => {\n        this.setVolumeType(type);\n      }),\n    );\n\n    // name\n    this.subscriptions.add(\n      this.volume.get('name').valueChanges.subscribe((name: string) => {\n        // Update the fields if the volume is an existing one\n        this.volume.get('name').setValue(name, { emitEvent: false });\n        this.updateVolInputFields();\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  // ----- @Input change handling functions -----\n  notebookNameChanged(nm: string): void {\n    if (this.volume.disabled) {\n      return;\n    }\n\n    this.notebookNamePrv = nm;\n    setTimeout(() => {\n      updateNonDirtyControl(this.volume.controls.name, this.currentVolName);\n    });\n  }\n\n  storageOptionChanged(ephemeral: boolean): void {\n    if (ephemeral) {\n      // Disable all fields\n      this.volume.controls.type.disable();\n      this.volume.controls.name.disable();\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n    } else {\n      this.volume.controls.type.enable();\n      this.volume.controls.name.enable();\n      this.updateVolInputFields();\n    }\n  }\n\n  pvcsChanged(pvcs: Volume[]) {\n    this.existingPVCs.clear();\n    pvcs.map(pvc => this.existingPVCs.add(pvc.name));\n\n    if (!this.existingPVCs.has(this.currentVolName)) {\n      this.updateVolInputFields();\n    } else {\n      // Also set the selected volume\n      this.volume.controls.name.setValue(this.currentVolName);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { environment } from '@app/environment';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { Config, Volume, NotebookFormObject } from 'src/app/types';\nimport {\n  NamespaceService,\n  BackendService,\n  SnackBarService,\n  SnackType,\n  getNameError,\n  rokUrlValidator,\n  RokService,\n} from 'kubeflow';\nimport { Router } from '@angular/router';\nimport { getFormDefaults, initFormControls } from '../form-default/utils';\nimport { JWABackendService } from 'src/app/services/backend.service';\nimport { FormDefaultComponent } from '../form-default/form-default.component';\n\n@Component({\n  selector: 'app-form-rok',\n  templateUrl: './form-rok.component.html',\n  styleUrls: [\n    './form-rok.component.scss',\n    '../form-default/form-default.component.scss',\n  ],\n})\nexport class FormRokComponent\n  extends FormDefaultComponent\n  implements OnInit, OnDestroy\n{\n  env = environment;\n\n  constructor(\n    public ns: NamespaceService,\n    public backend: JWABackendService,\n    public router: Router,\n    public popup: SnackBarService,\n    public rok: RokService,\n  ) {\n    super(ns, backend, router, popup);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.rok.initCSRF();\n  }\n\n  // Form handling functions\n  getFormDefaults() {\n    // Init the form\n    const formCtrl: FormGroup = getFormDefaults();\n\n    // Add labUrl control\n    formCtrl.addControl(\n      'environment',\n      new FormControl('', [Validators.required]),\n    );\n\n    // Add the rokUrl control\n    const wsExtras: FormGroup = formCtrl.get(\n      'workspace.extraFields',\n    ) as FormGroup;\n    wsExtras.addControl('rokUrl', new FormControl('', []));\n\n    return formCtrl;\n  }\n\n  initFormControls(formCtrl: FormGroup, config: Config) {\n    // Sets the values from our internal dict. This is an initialization step\n    // that should be only run once\n    initFormControls(formCtrl, config);\n\n    // Handle the Pod environment\n    if (config.environment && config.environment.value) {\n      const envVal = JSON.stringify(config.environment.value);\n      formCtrl.controls.environment.setValue(envVal);\n    } else {\n      formCtrl.controls.environment.setValue('{}');\n    }\n    if (config.environment && config.environment.readOnly) {\n      formCtrl.controls.environment.disable();\n    }\n\n    // Configure workspace control with rokUrl\n    const extraFields: FormGroup = formCtrl\n      .get('workspace')\n      .get('extraFields') as FormGroup;\n    extraFields.addControl('rokUrl', new FormControl('', []));\n\n    // Add rok url control to the data volumes\n    const array = formCtrl.get('datavols') as FormArray;\n    for (let i = 0; i < this.config.dataVolumes.value.length; i++) {\n      const extra = array.at(i).get('extraFields') as FormGroup;\n      extra.addControl('rokUrl', new FormControl('', []));\n    }\n  }\n}\n","<div class=\"center-flex\">\n  <div class=\"form-with-buttons\">\n    <div class=\"form--card-container mat-elevation-z2\">\n      <form novalidate (ngSubmit)=\"onSubmit()\" [formGroup]=\"formCtrl\">\n        <app-rok-jupyter-lab-selector\n          [parentForm]=\"formCtrl\"\n        ></app-rok-jupyter-lab-selector>\n\n        <app-form-name-namespace\n          [parentForm]=\"formCtrl\"\n        ></app-form-name-namespace>\n\n        <app-form-image\n          [parentForm]=\"formCtrl\"\n          [images]=\"config?.image?.options\"\n          [imagesGroupOne]=\"config?.imageGroupOne?.options\"\n          [imagesGroupTwo]=\"config?.imageGroupTwo?.options\"\n          [allowCustomImage]=\"config?.allowCustomImage\"\n        ></app-form-image>\n\n        <app-form-cpu-ram [parentForm]=\"formCtrl\"></app-form-cpu-ram>\n\n        <app-form-gpus\n          [parentForm]=\"formCtrl\"\n          [vendors]=\"config?.gpus?.value.vendors\"\n        ></app-form-gpus>\n\n        <app-rok-form-workspace-volume\n          [parentForm]=\"formCtrl\"\n          [pvcs]=\"pvcs\"\n          [readonly]=\"config?.workspaceVolume?.readOnly\"\n        >\n        </app-rok-form-workspace-volume>\n\n        <app-rok-form-data-volumes\n          [parentForm]=\"formCtrl\"\n          [pvcs]=\"pvcs\"\n          [readonly]=\"config?.dataVolumes?.readOnly\"\n        >\n        </app-rok-form-data-volumes>\n\n        <app-rok-form-configurations\n          [parentForm]=\"formCtrl\"\n        ></app-rok-form-configurations>\n\n        <app-form-affinity-tolerations\n          [parentForm]=\"formCtrl\"\n          [affinityConfigs]=\"config?.affinityConfig?.options\"\n          [tolerationGroups]=\"config?.tolerationGroup?.options\"\n        ></app-form-affinity-tolerations>\n\n        <app-form-advanced-options\n          [parentForm]=\"formCtrl\"\n        ></app-form-advanced-options>\n      </form>\n    </div>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      class=\"form--button-margin\"\n      (click)=\"onSubmit()\"\n      [disabled]=\"!formCtrl.valid || blockSubmit\"\n    >\n      LAUNCH\n    </button>\n\n    <button mat-raised-button type=\"button\" (click)=\"onCancel()\">CANCEL</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FormModule as KfFormModule } from 'kubeflow';\nimport { FormNameComponent } from '../form-default/form-name/form-name.component';\nimport { FormImageComponent } from '../form-default/form-image/form-image.component';\nimport { FormCpuRamComponent } from '../form-default/form-cpu-ram/form-cpu-ram.component';\nimport { FormWorkspaceVolumeComponent } from '../form-default/form-workspace-volume/form-workspace-volume.component';\nimport { FormDataVolumesComponent } from '../form-default/form-data-volumes/form-data-volumes.component';\nimport { VolumeComponent } from '../form-default/volume/volume.component';\nimport { FormGpusComponent } from '../form-default/form-gpus/form-gpus.component';\nimport { FormAdvancedOptionsComponent } from '../form-default/form-advanced-options/form-advanced-options.component';\nimport { FormConfigurationsComponent } from '../form-default/form-configurations/form-configurations.component';\nimport { FormRokComponent } from './form-rok.component';\nimport { FormDefaultModule } from '../form-default/form-default.module';\n\nimport { RokJupyterLabSelectorComponent } from './rok-jupyter-lab-selector/rok-jupyter-lab-selector.component';\nimport { RokVolumeComponent } from './rok-volume/rok-volume.component';\nimport { RokFormWorkspaceVolumeComponent } from './rok-form-workspace-volume/rok-form-workspace-volume.component';\nimport { RokFormDataVolumesComponent } from './rok-form-data-volumes/rok-form-data-volumes.component';\nimport { RokFormConfigurationsComponent } from './rok-form-configurations/rok-form-configurations.component';\n\n@NgModule({\n  declarations: [\n    FormRokComponent,\n    RokJupyterLabSelectorComponent,\n    RokVolumeComponent,\n    RokFormWorkspaceVolumeComponent,\n    RokFormDataVolumesComponent,\n    RokFormConfigurationsComponent,\n  ],\n  imports: [\n    CommonModule,\n    KfFormModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    FormDefaultModule,\n  ],\n  exports: [FormRokComponent],\n})\nexport class FormRokModule {}\n","<lib-form-section\n  title=\"Configurations\"\n  text=\"\n    Extra layers of configurations that will be applied to the new Notebook.\n    (e.g. Insert credentials as Secrets, set Environment Variables.)\n  \"\n  icon=\"fa:fas:sliders-h\"\n>\n  <!--Pod Defaults-->\n  <mat-form-field class=\"wide\" appearance=\"outline\">\n    <mat-label>Configurations</mat-label>\n    <mat-select [formControl]=\"parentForm.get('configurations')\" multiple>\n      <mat-option *ngFor=\"let config of podDefaults\" [value]=\"config.label\">\n        {{ config.desc }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!--Pod Environment-->\n  <mat-form-field class=\"wide\" appearance=\"outline\">\n    <mat-label>Environment</mat-label>\n    <input\n      matInput\n      placeholder=\"Environment variables in JSON\"\n      [formControl]=\"parentForm.get('environment')\"\n    />\n    <mat-error>Environment is invalid</mat-error>\n  </mat-form-field>\n</lib-form-section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormConfigurationsComponent } from '../../form-default/form-configurations/form-configurations.component';\n\n@Component({\n  selector: 'app-rok-form-configurations',\n  templateUrl: './rok-form-configurations.component.html',\n  styleUrls: ['./rok-form-configurations.component.scss'],\n})\nexport class RokFormConfigurationsComponent\n  extends FormConfigurationsComponent\n  implements OnInit, OnDestroy {}\n","<lib-form-section\n  title=\"Data Volumes\"\n  text=\"\n    Configure the Volumes to be mounted as your Datasets.\n  \"\n  icon=\"fa:fas:hdd\"\n>\n  <button\n    mat-stroked-button\n    class=\"add-data-vol-button\"\n    color=\"accent\"\n    (click)=\"addVol()\"\n    type=\"button\"\n    [disabled]=\"readonly\"\n  >\n    <mat-icon>add</mat-icon>ADD VOLUME\n  </button>\n\n  <div *ngFor=\"let vol of datavols; let i = index\" class=\"volume-wrapper\">\n    <app-rok-volume\n      [volume]=\"vol\"\n      [notebookName]=\"parentForm.get('name').value\"\n      [namespace]=\"parentForm.get('namespace').value\"\n      [pvcs]=\"pvcs\"\n      [ephemeral]=\"false\"\n      [storageClasses]=\"storageClasses\"\n    >\n    </app-rok-volume>\n\n    <div class=\"del-btn\">\n      <button\n        mat-icon-button\n        color=\"warn\"\n        (click)=\"deleteVol(i)\"\n        type=\"button\"\n        [disabled]=\"readonly\"\n      >\n        <mat-icon>delete</mat-icon>\n      </button>\n    </div>\n  </div>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { Volume } from 'src/app/types';\nimport { addRokDataVolume } from '../utils';\n\n@Component({\n  selector: 'app-rok-form-data-volumes',\n  templateUrl: './rok-form-data-volumes.component.html',\n  styleUrls: ['./rok-form-data-volumes.component.scss'],\n})\nexport class RokFormDataVolumesComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() readonly: boolean;\n  @Input() pvcs: Volume[];\n  @Input() storageClasses: string[];\n  @Input() token: string;\n\n  get datavols() {\n    const vols = this.parentForm.get('datavols') as FormArray;\n    return vols.controls;\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {}\n\n  addVol() {\n    addRokDataVolume(this.parentForm);\n  }\n\n  deleteVol(idx: number) {\n    const vols = this.parentForm.get('datavols') as FormArray;\n    vols.removeAt(idx);\n    this.parentForm.updateValueAndValidity();\n  }\n}\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Volume } from 'src/app/types';\nimport { SnackBarService, SnackType } from 'kubeflow';\n\n@Component({\n  selector: 'app-rok-form-workspace-volume',\n  templateUrl: './rok-form-workspace-volume.component.html',\n  styleUrls: ['./rok-form-workspace-volume.component.scss'],\n})\nexport class RokFormWorkspaceVolumeComponent implements OnInit, OnDestroy {\n  subscriptions = new Subscription();\n\n  @Input() parentForm: FormGroup;\n  @Input() readonly: boolean;\n  @Input() pvcs: Volume[];\n  @Input() storageClasses: string[];\n  @Input() token: string;\n\n  constructor(private snackBar: SnackBarService) {}\n\n  ngOnInit() {\n    // Show a warning if no persistent storage is provided\n    this.subscriptions.add(\n      this.parentForm\n        .get('noWorkspace')\n        .valueChanges.subscribe((b: boolean) => {\n          // close the snackbar if deselected\n          if (!b) {\n            this.snackBar.close();\n          } else {\n            const msg =\n              'Your workspace will not be persistent. You will lose all ' +\n              'data in it, if your notebook is terminated for any reason.';\n            this.snackBar.open(msg, SnackType.Warning, 0);\n          }\n        }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<lib-form-section\n  title=\"Workspace Volume\"\n  text=\"\n    Configure the Volume to be mounted as your personal Workspace.\n  \"\n  icon=\"fa:fas:laptop-code\"\n>\n  <mat-checkbox [formControl]=\"parentForm.get('noWorkspace')\">\n    Don't use Persistent Storage for User's home\n  </mat-checkbox>\n\n  <app-rok-volume\n    [volume]=\"parentForm.get('workspace')\"\n    [notebookName]=\"parentForm.value.name\"\n    [pvcs]=\"pvcs\"\n    [ephemeral]=\"parentForm.value.noWorkspace\"\n    [namespace]=\"parentForm.value.namespace\"\n    [storageClasses]=\"storageClasses\"\n  >\n  </app-rok-volume>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { environment } from '@app/environment';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport {\n  rokUrlValidator,\n  RokService,\n  SnackBarService,\n  SnackType,\n} from 'kubeflow';\nimport { JupyterLab, emptyJupyterLab } from '../types';\nimport { emptyVolume, Volume } from 'src/app/types';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport {\n  addRokDataVolume,\n  getJupyterLabFromRokURL,\n  setLabValues,\n  setVolumeValues,\n  getVolumeFromRokURL,\n} from '../utils';\n\n@Component({\n  selector: 'app-rok-jupyter-lab-selector',\n  templateUrl: './rok-jupyter-lab-selector.component.html',\n  styleUrls: ['./rok-jupyter-lab-selector.component.scss'],\n})\nexport class RokJupyterLabSelectorComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n\n  env = environment;\n  ctrl = new FormControl('', [], [rokUrlValidator(this.rok)]);\n\n  constructor(public rok: RokService, public popup: SnackBarService) {}\n\n  ngOnInit() {}\n\n  labAutofillClicked(url: string) {\n    getJupyterLabFromRokURL(url, this.rok).subscribe(lab => {\n      setLabValues(lab, this.parentForm);\n\n      // Autofill the workspace volume\n      const wsUrl = this.parentForm.get('workspace.extraFields.rokUrl').value;\n      getVolumeFromRokURL(wsUrl, this.rok).subscribe(vol => {\n        setVolumeValues(vol, this.parentForm.get('workspace'));\n      });\n\n      // Autofill the data volumes\n      const dataVols = this.parentForm.get('datavols') as FormArray;\n      for (const volCtrl of dataVols.controls) {\n        const volUrl = volCtrl.get('extraFields.rokUrl').value;\n        getVolumeFromRokURL(volUrl, this.rok).subscribe(vol => {\n          setVolumeValues(vol, volCtrl);\n        });\n      }\n\n      this.popup.open(\n        'Successfully retrieved details from Rok Jupyter Lab URL',\n        SnackType.Success,\n        4000,\n      );\n    });\n  }\n}\n","<lib-form-section\n  title=\"Rok JupyterLab URL\"\n  text=\"\n    Load an existing Jupyter Lab by providing a valid Rok URL.\n  \"\n  icon=\"fa:fas:link\"\n>\n  <lib-rok-url-input [control]=\"ctrl\" (urlEntered)=\"labAutofillClicked($event)\">\n  </lib-rok-url-input>\n</lib-form-section>\n","<div *ngIf=\"volume\" [formGroup]=\"volume\" class=\"row\">\n  <!--Type-->\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"type\">\n    <mat-label>Type</mat-label>\n    <mat-select formControlName=\"type\">\n      <mat-option value=\"New\">New</mat-option>\n      <mat-option value=\"Existing\">Existing</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!--Rok URL-->\n  <lib-rok-url-input\n    class=\"column\"\n    id=\"rokUrl\"\n    mode=\"file\"\n    [control]=\"volume.get('extraFields.rokUrl')\"\n    (urlPasted)=\"autofillVolume($event)\"\n    (urlEntered)=\"autofillVolume($event)\"\n  ></lib-rok-url-input>\n\n  <!-- Volume Name Input -->\n  <lib-name-input\n    class=\"column\"\n    [nameControl]=\"volume.get('name')\"\n    id=\"name\"\n  ></lib-name-input>\n\n  <!-- Size Input -->\n  <lib-positive-number-input\n    id=\"size\"\n    class=\"column\"\n    min=\"1\"\n    step=\"1\"\n    [sizeControl]=\"volume.get('size')\"\n    label=\"Size in Gi\"\n  ></lib-positive-number-input>\n\n  <!-- Mount Input -->\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"path\">\n    <mat-label>Mount Point</mat-label>\n    <input matInput formControlName=\"path\" />\n  </mat-form-field>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnDestroy,\n  HostListener,\n} from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { first, debounceTime, map } from 'rxjs/operators';\nimport { Volume, emptyVolume } from 'src/app/types';\nimport { RokService, rokUrlValidator, updateNonDirtyControl } from 'kubeflow';\nimport { environment } from '@app/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport { getVolumeFromRokURL, setVolumeValues } from '../utils';\n\n@Component({\n  selector: 'app-rok-volume',\n  templateUrl: './rok-volume.component.html',\n  styleUrls: ['./rok-volume.component.scss'],\n})\nexport class RokVolumeComponent implements OnInit, OnDestroy {\n  private nbName = '';\n  private origin = window.location.origin;\n  private chooserId;\n  private popupChooser;\n\n  env = environment;\n  newPVC: Volume;\n  existingPVCs: Volume[] = [];\n  readOnly = false;\n  subscriptions = new Subscription();\n\n  // ----- @Input Parameters -----\n  @Input() volume: FormGroup;\n\n  @Input()\n  get notebookName() {\n    return this.nbName;\n  }\n  set notebookName(nm: string) {\n    if (!this.volume.disabled) {\n      this.notebookNameChanged(nm);\n    }\n  }\n\n  @Input()\n  set ephemeral(b: boolean) {\n    if (!this.volume.disabled) {\n      this.storageOptionChanged(b);\n    }\n  }\n\n  @Input() pvcs: Volume[];\n  @Input() namespace: string;\n  @Input() storageClasses: string[] = [];\n  @Input() token: string;\n\n  // ----- Get macros -----\n  get selectedVolIsExistingType(): boolean {\n    return this.volume.value.type === 'Existing';\n  }\n\n  get currentVolName(): string {\n    // Change volume name on notebook-name change, if user hasn't changed it already\n    if (!this.volume.get('name').dirty) {\n      return this.volume\n        .get('templatedName')\n        .value.replace('{notebook-name}', this.notebookName || '');\n    } else {\n      return this.volume.get('name').value;\n    }\n  }\n\n  // ----- utility functions -----\n  updateVolPath(): void {\n    // Change volume path on volume-name change, if user hasn't changed it already\n    updateNonDirtyControl(\n      this.volume.get('path'),\n      this.volume\n        .get('templatedPath')\n        .value.replace('{volume-name}', this.currentVolName),\n    );\n  }\n\n  updateVolType(type): void {\n    const rokUrl = this.volume.get('extraFields.rokUrl');\n    if (type === 'Existing') {\n      // Enable rokUrl\n      rokUrl.setValidators(Validators.required);\n      rokUrl.setAsyncValidators(rokUrlValidator(this.rok));\n      rokUrl.enable();\n    } else {\n      rokUrl.setValidators([]);\n      rokUrl.setAsyncValidators([]);\n      rokUrl.disable();\n    }\n  }\n\n  autofillVolume(url: string) {\n    getVolumeFromRokURL(url, this.rok).subscribe(vol => {\n      setVolumeValues(vol, this.volume);\n    });\n  }\n\n  // ----- Component Functions -----\n  constructor(private rok: RokService) {}\n\n  ngOnInit() {\n    // type\n    this.subscriptions.add(\n      this.volume.get('type').valueChanges.subscribe((type: string) => {\n        this.updateVolType(type);\n      }),\n    );\n    // name\n    this.subscriptions.add(\n      this.volume.get('name').valueChanges.subscribe((name: string) => {\n        this.volume.get('name').setValue(name, { emitEvent: false });\n        // Fix mount point if user hasn't changed it and it's not workspace volume\n        this.updateVolPath();\n      }),\n    );\n\n    this.updateVolPath();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  // ----- @Input change handling functions -----\n  notebookNameChanged(nm: string): void {\n    if (this.volume.disabled) {\n      return;\n    }\n\n    this.nbName = nm;\n    setTimeout(() => {\n      updateNonDirtyControl(this.volume.get('name'), this.currentVolName);\n    });\n  }\n\n  storageOptionChanged(ephemeral: boolean): void {\n    if (ephemeral) {\n      // Disable all fields\n      this.volume.controls.type.disable();\n      this.volume.controls.extraFields.get('rokUrl').disable();\n      this.volume.controls.name.disable();\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n    } else if (!ephemeral && !this.selectedVolIsExistingType) {\n      // New\n      this.volume.controls.type.enable();\n      this.volume.controls.name.enable();\n      this.volume.controls.size.enable();\n      this.volume.controls.mode.enable();\n      this.volume.controls.extraFields.get('rokUrl').disable();\n    } else {\n      // Existing\n      this.volume.controls.extraFields.get('rokUrl').enable();\n    }\n  }\n}\n","import { Volume } from '../../../types';\n\nexport interface JupyterLab {\n  namespace: string;\n  images: string[];\n  image: string;\n  cpu: string | number;\n  memory: string | number;\n  workspace?: Volume;\n  datavols?: Volume[];\n  extra?: string;\n  environment?: any;\n}\n\nexport function emptyJupyterLab(): JupyterLab {\n  return {\n    namespace: '',\n    images: [],\n    image: '',\n    cpu: '',\n    memory: '',\n    workspace: {\n      type: '',\n      name: '',\n      size: 1,\n      path: '',\n      mode: '',\n      extraFields: {},\n    },\n    datavols: [],\n    extra: '{}',\n  };\n}\n","import { ConfigVolume, Volume, emptyVolume } from 'src/app/types';\nimport { createVolumeControl } from '../form-default/utils';\nimport {\n  FormGroup,\n  FormControl,\n  FormArray,\n  AbstractControl,\n} from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport {\n  RokService,\n  updateNonDirtyControl,\n  updateControlNonNullValue,\n} from 'kubeflow';\nimport { JupyterLab, emptyJupyterLab } from './types';\n\nexport function createRokVolumeControl(vol: ConfigVolume) {\n  const volCtrl = createVolumeControl(vol);\n\n  // Set the rokUrl in extraFields\n  const extraFields: FormGroup = volCtrl.get('extraFields') as FormGroup;\n  extraFields.addControl('rokUrl', new FormControl('', []));\n  extraFields.disable();\n\n  return volCtrl;\n}\n\nexport function addRokDataVolume(\n  formCtrl: AbstractControl,\n  vol: ConfigVolume = null,\n) {\n  // If no vol is provided create one with default values\n  if (vol === null) {\n    const l: number = formCtrl.value.datavols.length;\n    const name: string = '{notebook-name}-vol-' + (l + 1);\n\n    vol = {\n      type: {\n        value: 'New',\n      },\n      name: {\n        value: name,\n      },\n      size: {\n        value: '5',\n      },\n      mountPath: {\n        value: '/home/jovyan/{volume-name}',\n      },\n      accessModes: {\n        value: 'ReadWriteOnce',\n      },\n    };\n  }\n\n  // Push it to the control\n  const vols = formCtrl.get('datavols') as FormArray;\n  vols.push(createRokVolumeControl(vol));\n}\n\n// Functions to create Autofilled Rok Objects\nexport function getJupyterLabFromRokURL(\n  url: string,\n  rok: RokService,\n): Observable<JupyterLab> {\n  return rok.getObjectMetadata(url).pipe(\n    map((headers: HttpHeaders) => {\n      const notebook: JupyterLab = emptyJupyterLab();\n\n      // Fill the notebook with the info from the response\n      notebook.namespace = headers.get('X-Object-Meta-namespace');\n      notebook.image = headers.get('X-Object-Meta-image');\n\n      // Convert CPU to number\n      notebook.cpu = headers.get('X-Object-Meta-cpu');\n      if (typeof notebook.cpu === 'number') {\n      } else if (notebook.cpu.includes('m')) {\n        const cpu = parseInt(notebook.cpu.replace('m', ''), 10);\n        notebook.cpu = cpu / 1000;\n      }\n\n      // Convert memory to Gi\n      const memory = headers.get('X-Object-Meta-memory');\n      if (memory.includes('G')) {\n        notebook.memory = parseInt(memory.replace('G', ''), 10);\n      } else if (memory.includes('M')) {\n        notebook.memory = parseInt(memory.replace('M', ''), 10) / 1000;\n      } else {\n        notebook.memory = parseInt(memory, 10);\n      }\n\n      notebook.environment = headers.get('X-Object-Meta-environment');\n\n      // Workspace Volume\n      const workspaceRokUrl = headers.get('X-Object-Group-Member-0-URL');\n      notebook.workspace.extraFields = {\n        // rokUrl: baseUrl + obj + '?version=' + version,\n        rokUrl: workspaceRokUrl,\n      };\n\n      // Data Volumes\n      const volsNum = headers.get('X-Object-Group-Member-Count');\n      for (let i = 1; i < parseInt(volsNum, 10); i++) {\n        const volRokUrl = headers.get('X-Object-Group-Member-' + i + '-URL');\n\n        const vol = emptyVolume();\n        vol.extraFields = {\n          // rokUrl: baseUrl + obj + '?version=' + version,\n          rokUrl: volRokUrl,\n        };\n        notebook.datavols.push(vol);\n      }\n\n      return notebook;\n    }),\n  );\n}\n\nexport function getVolumeFromRokURL(\n  url: string,\n  rok: RokService,\n): Observable<Volume> {\n  return rok.getObjectMetadata(url).pipe(\n    map((headers: HttpHeaders) => {\n      console.log(`Creating volume object from return metadata`);\n\n      const volume: Volume = emptyVolume();\n\n      // Fill the notebook with the info from the response\n      volume.name = headers.get('X-Object-Meta-dataset');\n      if (volume.name === null) {\n        volume.name = headers.get('X-Object-Meta-workspace');\n      }\n\n      const size = parseInt(headers.get('Content-Length'), 10);\n      volume.size = size / Math.pow(1024, 3);\n\n      volume.path = headers.get('X-Object-Meta-mountpoint');\n\n      console.log(`Created volume object: ${JSON.stringify(volume)}`);\n      return volume;\n    }),\n  );\n}\n\n// Functions for autofilling control values\nexport function setLabValues(lab: JupyterLab, formCtrl: AbstractControl) {\n  console.log(\n    `Setting Jupyter Lab form values based on object: ${JSON.stringify(lab)}`,\n  );\n\n  formCtrl.get('customImage').setValue(lab.image);\n  formCtrl.get('customImageCheck').setValue(true);\n  formCtrl.get('cpu').setValue(lab.cpu);\n  formCtrl.get('memory').setValue(lab.memory);\n\n  // Change env only if it exists\n  if (lab.environment !== null) {\n    formCtrl.get('environment').setValue(lab.environment);\n  }\n\n  // Set the workspace volume\n  formCtrl\n    .get('workspace')\n    .get('extraFields')\n    .get('rokUrl')\n    .setValue(lab.workspace.extraFields.rokUrl);\n  formCtrl.get('workspace').get('type').setValue('Existing');\n\n  // Clear the existing Data Volumes array\n  const dataVols = formCtrl.get('datavols') as FormArray;\n  while (dataVols.length !== 0) {\n    dataVols.removeAt(0);\n  }\n\n  for (const vol of lab.datavols) {\n    addRokDataVolume(formCtrl);\n  }\n\n  // Set each volume to existing type\n  const volsArr = formCtrl.get('datavols') as FormArray;\n  for (let i = 0; i < lab.datavols.length; i++) {\n    volsArr\n      .at(i)\n      .get('extraFields')\n      .get('rokUrl')\n      .setValue(lab.datavols[i].extraFields.rokUrl);\n\n    volsArr.at(i).get('type').setValue('Existing');\n  }\n}\n\nexport function setVolumeValues(vol: Volume, volCtrl: AbstractControl) {\n  console.log(\n    `Setting Volume form values based on object: ${JSON.stringify(vol)}`,\n  );\n\n  const volProps = { size: vol.size, name: vol.name, path: vol.path };\n\n  for (const prop in volProps) {\n    if (volProps.hasOwnProperty(prop)) {\n      updateControlNonNullValue(\n        volCtrl.get(prop),\n        volProps[prop],\n        `Provided volume has null value for property '${prop}'. ` +\n          `Will NOT override the current value.`,\n      );\n    }\n  }\n}\n","<app-form-default *ngIf=\"env.ui === 'default'\"></app-form-default>\n<app-form-rok *ngIf=\"env.ui === 'rok'\"></app-form-rok>\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '@app/environment';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent implements OnInit {\n  env = environment;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FormDefaultModule } from './form-default/form-default.module';\nimport { FormComponent } from './form.component';\nimport { FormRokComponent } from './form-rok/form-rok.component';\n\nimport {\n  FormModule as KfFormModule,\n  ImmediateErrorStateMatcher,\n} from 'kubeflow';\nimport { FormRokModule } from './form-rok/form-rok.module';\n\n@NgModule({\n  declarations: [FormComponent],\n  imports: [CommonModule, FormDefaultModule, FormRokModule],\n  providers: [\n    { provide: ErrorStateMatcher, useClass: ImmediateErrorStateMatcher },\n  ],\n})\nexport class FormModule {}\n","import {\n  PropertyValue,\n  StatusValue,\n  ActionListValue,\n  ActionIconValue,\n  ActionButtonValue,\n  TRUNCATE_TEXT_SIZE,\n  MenuValue,\n  DialogConfig,\n  ComponentValue,\n} from 'kubeflow';\nimport { ServerTypeComponent } from './server-type/server-type.component';\n\n// --- Configs for the Confirm Dialogs ---\nexport function getDeleteDialogConfig(name: string): DialogConfig {\n  return {\n    title: $localize`Are you sure you want to delete this notebook server? ${name}`,\n    message: $localize`Warning: Your data might be lost if the notebook server\n                       is not backed by persistent storage`,\n    accept: $localize`DELETE`,\n    confirmColor: 'warn',\n    cancel: $localize`CANCEL`,\n    error: '',\n    applying: $localize`DELETING`,\n    width: '600px',\n  };\n}\n\nexport function getStopDialogConfig(name: string): DialogConfig {\n  return {\n    title: $localize`Are you sure you want to stop this notebook server? ${name}`,\n    message: $localize`Warning: Your data might be lost if the notebook server\n                       is not backed by persistent storage.`,\n    accept: $localize`STOP`,\n    confirmColor: 'primary',\n    cancel: $localize`CANCEL`,\n    error: '',\n    applying: $localize`STOPPING`,\n    width: '600px',\n  };\n}\n\n// --- Config for the Resource Table ---\nexport const defaultConfig = {\n  title: $localize`Notebooks`,\n  newButtonText: $localize`NEW NOTEBOOK`,\n  columns: [\n    {\n      matHeaderCellDef: $localize`Status`,\n      matColumnDef: 'status',\n      value: new StatusValue(),\n    },\n    {\n      matHeaderCellDef: $localize`Name`,\n      matColumnDef: 'name',\n      value: new PropertyValue({\n        field: 'name',\n        truncate: TRUNCATE_TEXT_SIZE.SMALL,\n        tooltipField: 'name',\n      }),\n    },\n    {\n      matHeaderCellDef: $localize`Type`,\n      matColumnDef: 'type',\n      value: new ComponentValue({\n        component: ServerTypeComponent,\n      }),\n    },\n    {\n      matHeaderCellDef: $localize`Age`,\n      matColumnDef: 'age',\n      value: new PropertyValue({ field: 'age' }),\n    },\n    {\n      matHeaderCellDef: $localize`Image`,\n      matColumnDef: 'image',\n      value: new PropertyValue({\n        field: 'shortImage',\n        tooltipField: 'image',\n        truncate: TRUNCATE_TEXT_SIZE.MEDIUM,\n      }),\n    },\n    {\n      matHeaderCellDef: $localize`GPUs`,\n      matColumnDef: 'gpus',\n      value: new PropertyValue({\n        field: 'gpus.count',\n        tooltipField: 'gpus.message',\n      }),\n    },\n    {\n      matHeaderCellDef: $localize`CPUs`,\n      matColumnDef: 'cpu',\n      value: new PropertyValue({ field: 'cpu' }),\n    },\n    {\n      matHeaderCellDef: $localize`Memory`,\n      matColumnDef: 'memory',\n      value: new PropertyValue({ field: 'memory' }),\n    },\n    {\n      matHeaderCellDef: $localize`Volumes`,\n      matColumnDef: 'volumes',\n      value: new MenuValue({ field: 'volumes', itemsIcon: 'storage' }),\n    },\n\n    {\n      matHeaderCellDef: '',\n      matColumnDef: 'actions',\n      value: new ActionListValue([\n        new ActionButtonValue({\n          name: 'connect',\n          tooltip: $localize`Connect to this notebook server`,\n          color: 'primary',\n          field: 'connectAction',\n          text: $localize`CONNECT`,\n        }),\n        new ActionIconValue({\n          name: 'start-stop',\n          tooltipInit: $localize`Stop this notebook server`,\n          tooltipReady: $localize`Start this notebook server`,\n          color: '',\n          field: 'startStopAction',\n          iconInit: 'material:stop',\n          iconReady: 'material:play_arrow',\n        }),\n        new ActionIconValue({\n          name: 'delete',\n          tooltip: $localize`Delete this notebook server`,\n          color: '',\n          field: 'deleteAction',\n          iconReady: 'material:delete',\n        }),\n      ]),\n    },\n  ],\n};\n","<lib-namespace-select *ngIf=\"!env.production\"></lib-namespace-select>\n\n<lib-resource-table\n  [config]=\"config\"\n  [data]=\"processedData\"\n  [trackByFn]=\"notebookTrackByFn\"\n  (actionsEmitter)=\"reactToAction($event)\"\n></lib-resource-table>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { environment } from '@app/environment';\nimport {\n  NamespaceService,\n  ExponentialBackoff,\n  ActionEvent,\n  STATUS_TYPE,\n  DialogConfig,\n  ConfirmDialogService,\n  SnackBarService,\n  DIALOG_RESP,\n  SnackType,\n} from 'kubeflow';\nimport { JWABackendService } from 'src/app/services/backend.service';\nimport { Subscription } from 'rxjs';\nimport {\n  defaultConfig,\n  getDeleteDialogConfig,\n  getStopDialogConfig,\n} from './config';\nimport { isEqual } from 'lodash';\nimport { NotebookResponseObject, NotebookProcessedObject } from 'src/app/types';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-index-default',\n  templateUrl: './index-default.component.html',\n  styleUrls: ['./index-default.component.scss'],\n})\nexport class IndexDefaultComponent implements OnInit, OnDestroy {\n  env = environment;\n  poller: ExponentialBackoff;\n\n  currNamespace = '';\n  subs = new Subscription();\n\n  config = defaultConfig;\n  rawData: NotebookResponseObject[] = [];\n  processedData: NotebookProcessedObject[] = [];\n\n  constructor(\n    public ns: NamespaceService,\n    public backend: JWABackendService,\n    public confirmDialog: ConfirmDialogService,\n    public snackBar: SnackBarService,\n    public router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.poller = new ExponentialBackoff({ interval: 1000, retries: 3 });\n\n    // Poll for new data and reset the poller if different data is found\n    this.subs.add(\n      this.poller.start().subscribe(() => {\n        if (!this.currNamespace) {\n          return;\n        }\n\n        this.backend.getNotebooks(this.currNamespace).subscribe(notebooks => {\n          if (!isEqual(this.rawData, notebooks)) {\n            this.rawData = notebooks;\n\n            // Update the frontend's state\n            this.processedData = this.processIncomingData(notebooks);\n            this.poller.reset();\n          }\n        });\n      }),\n    );\n\n    // Reset the poller whenever the selected namespace changes\n    this.subs.add(\n      this.ns.getSelectedNamespace().subscribe(ns => {\n        this.currNamespace = ns;\n        this.poller.reset();\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n    this.poller.stop();\n  }\n\n  // Event handling functions\n  reactToAction(a: ActionEvent) {\n    switch (a.action) {\n      case 'newResourceButton': // TODO: could also use enums here\n        this.newResourceClicked();\n        break;\n      case 'delete':\n        this.deleteVolumeClicked(a.data);\n        break;\n      case 'connect':\n        this.connectClicked(a.data);\n        break;\n      case 'start-stop':\n        this.startStopClicked(a.data);\n        break;\n    }\n  }\n\n  public newResourceClicked() {\n    // Redirect to form page\n    this.router.navigate(['/new']);\n  }\n\n  public deleteVolumeClicked(notebook: NotebookProcessedObject) {\n    const deleteDialogConfig = getDeleteDialogConfig(notebook.name);\n\n    const ref = this.confirmDialog.open(notebook.name, deleteDialogConfig);\n    const delSub = ref.componentInstance.applying$.subscribe(applying => {\n      if (!applying) {\n        return;\n      }\n\n      // Close the open dialog only if the DELETE request succeeded\n      this.backend.deleteNotebook(this.currNamespace, notebook.name).subscribe({\n        next: _ => {\n          this.poller.reset();\n          ref.close(DIALOG_RESP.ACCEPT);\n        },\n        error: err => {\n          const errorMsg = err;\n          deleteDialogConfig.error = errorMsg;\n          ref.componentInstance.applying$.next(false);\n        },\n      });\n\n      // DELETE request has succeeded\n      ref.afterClosed().subscribe(res => {\n        delSub.unsubscribe();\n        if (res !== DIALOG_RESP.ACCEPT) {\n          return;\n        }\n\n        notebook.status.phase = STATUS_TYPE.TERMINATING;\n        notebook.status.message = 'Preparing to delete the Notebook...';\n        this.updateNotebookFields(notebook);\n      });\n    });\n  }\n\n  public connectClicked(notebook: NotebookProcessedObject) {\n      window.open(`/notebook/${notebook.namespace}/${notebook.name}/?server=${notebook.serverType}`);\n  }\n\n  public startStopClicked(notebook: NotebookProcessedObject) {\n    if (notebook.status.phase === STATUS_TYPE.STOPPED) {\n      this.startNotebook(notebook);\n    } else {\n      this.stopNotebook(notebook);\n    }\n  }\n\n  public startNotebook(notebook: NotebookProcessedObject) {\n    this.snackBar.open(\n      $localize`Starting Notebook server '${notebook.name}'...`,\n      SnackType.Info,\n      3000,\n    );\n\n    notebook.status.phase = STATUS_TYPE.WAITING;\n    notebook.status.message = 'Starting the Notebook Server...';\n    this.updateNotebookFields(notebook);\n\n    this.backend.startNotebook(notebook).subscribe(() => {\n      this.poller.reset();\n    });\n  }\n\n  public stopNotebook(notebook: NotebookProcessedObject) {\n    const stopDialogConfig = getStopDialogConfig(notebook.name);\n    const ref = this.confirmDialog.open(notebook.name, stopDialogConfig);\n    const stopSub = ref.componentInstance.applying$.subscribe(applying => {\n      if (!applying) {\n        return;\n      }\n\n      // Close the open dialog only if the request succeeded\n      this.backend.stopNotebook(notebook).subscribe({\n        next: _ => {\n          this.poller.reset();\n          ref.close(DIALOG_RESP.ACCEPT);\n        },\n        error: err => {\n          const errorMsg = err;\n          stopDialogConfig.error = errorMsg;\n          ref.componentInstance.applying$.next(false);\n        },\n      });\n\n      // request has succeeded\n      ref.afterClosed().subscribe(res => {\n        stopSub.unsubscribe();\n        if (res !== DIALOG_RESP.ACCEPT) {\n          return;\n        }\n\n        this.snackBar.open(\n          $localize`Stopping Notebook server '${notebook.name}'...`,\n          SnackType.Info,\n          3000,\n        );\n\n        notebook.status.phase = STATUS_TYPE.TERMINATING;\n        notebook.status.message = 'Preparing to stop the Notebook Server...';\n        this.updateNotebookFields(notebook);\n      });\n    });\n  }\n\n  // Data processing functions\n  updateNotebookFields(notebook: NotebookProcessedObject) {\n    notebook.deleteAction = this.processDeletionActionStatus(notebook);\n    notebook.connectAction = this.processConnectActionStatus(notebook);\n    notebook.startStopAction = this.processStartStopActionStatus(notebook);\n  }\n\n  processIncomingData(notebooks: NotebookResponseObject[]) {\n    const notebooksCopy = JSON.parse(\n      JSON.stringify(notebooks),\n    ) as NotebookProcessedObject[];\n\n    for (const nb of notebooksCopy) {\n      this.updateNotebookFields(nb);\n    }\n    return notebooksCopy;\n  }\n\n  // Action handling functions\n  processDeletionActionStatus(notebook: NotebookProcessedObject) {\n    if (notebook.status.phase !== STATUS_TYPE.TERMINATING) {\n      return STATUS_TYPE.READY;\n    }\n\n    return STATUS_TYPE.TERMINATING;\n  }\n\n  processStartStopActionStatus(notebook: NotebookProcessedObject) {\n    // Stop button\n    if (notebook.status.phase === STATUS_TYPE.READY) {\n      return STATUS_TYPE.UNINITIALIZED;\n    }\n\n    // Start button\n    if (notebook.status.phase === STATUS_TYPE.STOPPED) {\n      return STATUS_TYPE.READY;\n    }\n\n    // If it is terminating, then the action should be disabled\n    if (notebook.status.phase === STATUS_TYPE.TERMINATING) {\n      return STATUS_TYPE.UNAVAILABLE;\n    }\n\n    // If the Notebook is not Terminating, then always allow the stop action\n    return STATUS_TYPE.UNINITIALIZED;\n  }\n\n  processConnectActionStatus(notebook: NotebookProcessedObject) {\n    if (notebook.status.phase !== STATUS_TYPE.READY) {\n      return STATUS_TYPE.UNAVAILABLE;\n    }\n\n    return STATUS_TYPE.READY;\n  }\n\n  public notebookTrackByFn(index: number, notebook: NotebookProcessedObject) {\n    return `${notebook.name}/${notebook.image}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IndexDefaultComponent } from './index-default.component';\nimport {\n  ResourceTableModule,\n  NamespaceSelectModule,\n  ConfirmDialogModule,\n} from 'kubeflow';\n\n@NgModule({\n  declarations: [IndexDefaultComponent],\n  imports: [\n    CommonModule,\n    ResourceTableModule,\n    NamespaceSelectModule,\n    ConfirmDialogModule,\n  ],\n  exports: [IndexDefaultComponent],\n})\nexport class IndexDefaultModule {}\n","<mat-icon\n  *ngIf=\"notebookServerType === 'jupyter'\"\n  svgIcon=\"jupyterlab-icon\"\n  aria-hidden=\"false\"\n  aria-label=\"JupyterLab based server\"\n></mat-icon>\n<mat-icon\n  *ngIf=\"notebookServerType === 'group-one'\"\n  svgIcon=\"group-one-icon\"\n  aria-hidden=\"false\"\n  aria-label=\"Group One based server\"\n></mat-icon>\n<mat-icon\n  *ngIf=\"notebookServerType === 'group-two'\"\n  svgIcon=\"group-two-icon\"\n  aria-hidden=\"false\"\n  aria-label=\"Group Two based server\"\n></mat-icon>\n","import { Component } from '@angular/core';\nimport { TableColumnComponent } from 'kubeflow/lib/resource-table/component-value/component-value.component';\nimport { NotebookProcessedObject } from 'src/app/types';\nimport { environment } from '@app/environment';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-server-type',\n  templateUrl: './server-type.component.html',\n  styleUrls: ['./server-type.component.scss'],\n})\nexport class ServerTypeComponent implements TableColumnComponent {\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'jupyterlab-icon',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.jupyterIcon),\n    );\n    iconRegistry.addSvgIcon(\n      'group-one-icon',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.groupOneIcon),\n    );\n    iconRegistry.addSvgIcon(\n      'group-two-icon',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.groupTwoIcon),\n    );\n  }\n\n  notebookServerType: string;\n\n  set element(notebook: NotebookProcessedObject) {\n    this.notebookServerType = notebook.serverType;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '@app/environment';\nimport {\n  RokService,\n  NamespaceService,\n  SnackBarService,\n  ConfirmDialogService,\n} from 'kubeflow';\nimport { JWABackendService } from 'src/app/services/backend.service';\nimport { Router } from '@angular/router';\nimport { IndexDefaultComponent } from '../index-default/index-default.component';\n\n@Component({\n  selector: 'app-index-rok',\n  templateUrl: '../index-default/index-default.component.html',\n  styleUrls: ['../index-default/index-default.component.scss'],\n})\nexport class IndexRokComponent extends IndexDefaultComponent implements OnInit {\n  constructor(\n    private rok: RokService,\n    public ns: NamespaceService,\n    public backend: JWABackendService,\n    public confirmDialog: ConfirmDialogService,\n    public popup: SnackBarService,\n    public router: Router,\n  ) {\n    super(ns, backend, confirmDialog, popup, router);\n\n    this.rok.initCSRF();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IndexRokComponent } from './index-rok.component';\nimport { IndexDefaultComponent } from '../index-default/index-default.component';\nimport {\n  ResourceTableModule,\n  NamespaceSelectModule,\n  ConfirmDialogModule,\n} from 'kubeflow';\nimport { IndexDefaultModule } from '../index-default/index-default.module';\n\n@NgModule({\n  declarations: [IndexRokComponent],\n  imports: [\n    CommonModule,\n    ResourceTableModule,\n    NamespaceSelectModule,\n    ConfirmDialogModule,\n    IndexDefaultModule,\n  ],\n  exports: [IndexRokComponent],\n})\nexport class IndexRokModule {}\n","<app-index-default *ngIf=\"env.ui === 'default'\"></app-index-default>\n<app-index-rok *ngIf=\"env.ui === 'rok'\"></app-index-rok>\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '@app/environment';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss'],\n})\nexport class IndexComponent implements OnInit {\n  env = environment;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { IndexRokModule } from './index-rok/index-rok.module';\nimport { IndexDefaultModule } from './index-default/index-default.module';\nimport { IndexComponent } from './index.component';\nimport { ServerTypeComponent } from './index-default/server-type/server-type.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [IndexComponent, ServerTypeComponent],\n  imports: [\n    CommonModule,\n    IndexRokModule,\n    IndexDefaultModule,\n    MatIconModule,\n    MatTooltipModule,\n  ],\n})\nexport class IndexModule {}\n","import { Injectable } from '@angular/core';\nimport { BackendService, SnackBarService } from 'kubeflow';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  NotebookResponseObject,\n  JWABackendResponse,\n  Config,\n  Volume,\n  PodDefault,\n  NotebookFormObject,\n  NotebookProcessedObject,\n} from '../types';\n@Injectable({\n  providedIn: 'root',\n})\nexport class JWABackendService extends BackendService {\n  constructor(public http: HttpClient, public snackBar: SnackBarService) {\n    super(http, snackBar);\n  }\n\n  // GET\n  public getNotebooks(namespace: string): Observable<NotebookResponseObject[]> {\n    const url = `api/namespaces/${namespace}/notebooks`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map((resp: JWABackendResponse) => {\n        return resp.notebooks;\n      }),\n    );\n  }\n\n  public getConfig(): Observable<Config> {\n    const url = `api/config`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map(data => {\n        return data.config;\n      }),\n    );\n  }\n\n  public getVolumes(ns: string): Observable<Volume[]> {\n    // Get existing PVCs in a namespace\n    const url = `api/namespaces/${ns}/pvcs`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map(data => {\n        return data.pvcs;\n      }),\n    );\n  }\n\n  public getPodDefaults(ns: string): Observable<PodDefault[]> {\n    // Get existing PodDefaults in a namespace\n    const url = `api/namespaces/${ns}/poddefaults`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map(data => {\n        return data.poddefaults;\n      }),\n    );\n  }\n\n  public getGPUVendors(): Observable<string[]> {\n    // Get installed GPU vendors\n    const url = `api/gpus`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map(data => data.vendors),\n    );\n  }\n\n  // POST\n  public createNotebook(notebook: NotebookFormObject): Observable<string> {\n    const url = `api/namespaces/${notebook.namespace}/notebooks`;\n\n    return this.http.post<JWABackendResponse>(url, notebook).pipe(\n      catchError(error => this.handleError(error)),\n      map(_ => {\n        return 'posted';\n      }),\n    );\n  }\n\n  // PATCH\n  public startNotebook(notebook: NotebookProcessedObject): Observable<string> {\n    const name = notebook.name;\n    const namespace = notebook.namespace;\n    const url = `api/namespaces/${namespace}/notebooks/${name}`;\n\n    return this.http.patch<JWABackendResponse>(url, { stopped: false }).pipe(\n      catchError(error => this.handleError(error)),\n      map(_ => {\n        return 'started';\n      }),\n    );\n  }\n\n  public stopNotebook(notebook: NotebookProcessedObject): Observable<string> {\n    const name = notebook.name;\n    const namespace = notebook.namespace;\n    const url = `api/namespaces/${namespace}/notebooks/${name}`;\n\n    return this.http.patch<JWABackendResponse>(url, { stopped: true }).pipe(\n      catchError(error => this.handleError(error, false)),\n      map(_ => {\n        return 'stopped';\n      }),\n    );\n  }\n\n  // DELETE\n  public deleteNotebook(namespace: string, name: string) {\n    const url = `api/namespaces/${namespace}/notebooks/${name}`;\n\n    return this.http\n      .delete<JWABackendResponse>(url)\n      .pipe(catchError(error => this.handleError(error, false)));\n  }\n}\n","import { Status, BackendResponse } from 'kubeflow';\n\nexport interface JWABackendResponse extends BackendResponse {\n  notebooks?: NotebookResponseObject[];\n  pvcs?: Volume[];\n  config?: Config;\n  poddefaults?: PodDefault[];\n  vendors?: string[];\n}\n\nexport type ServerType = 'jupyter' | 'group-one' | 'group-two';\n\nexport interface NotebookResponseObject {\n  name: string;\n  namespace: string;\n  serverType: ServerType;\n  status: Status;\n  reason: string;\n  age: string;\n  image: string;\n  volumes: string[];\n  cpu: string;\n  memory: string;\n  gpus: {\n    count: number;\n    message: string;\n  };\n  environment: string;\n  shortImage: string;\n}\n\nexport interface NotebookProcessedObject extends NotebookResponseObject {\n  deleteAction?: string;\n  connectAction?: string;\n  startStopAction?: string;\n}\n\nexport interface NotebookFormObject {\n  name: string;\n  namespace: string;\n  image: string;\n  imageGroupOne: string;\n  imageGroupTwo: string;\n  allowCustomImage: boolean;\n  imagePullPolicy: string;\n  customImage?: string;\n  customImageCheck: boolean;\n  serverType: string;\n  cpu: number | string;\n  cpuLimit: number | string;\n  memory: number | string;\n  memoryLimit: number | string;\n  gpus: GPU;\n  environment?: string;\n  noWorkspace: boolean;\n  workspace: Volume;\n  datavols: Volume[];\n  shm: boolean;\n  configurations: PodDefault[];\n}\n\nexport interface Volume {\n  name: string;\n  size: number;\n  namepsace?: string;\n  class?: string;\n  mode: string;\n  type?: string;\n  path: string;\n  extraFields?: { [key: string]: any };\n  templatedName?: string;\n}\n\nexport function emptyVolume(): Volume {\n  return {\n    type: '',\n    name: '',\n    size: 1,\n    path: '',\n    mode: '',\n    extraFields: {},\n    templatedName: '',\n  };\n}\n\n// Types of the Configuration with default values from backend\nexport interface PodDefault {\n  label: string;\n  desc: string;\n}\n\nexport interface AffinityConfig {\n  configKey: string;\n  displayName: string;\n  affinity: object;\n}\n\nexport interface TolerationGroup {\n  groupKey: string;\n  displayName: string;\n  tolerations: Toleration[];\n}\n\nexport interface Toleration {\n  key: string;\n  operator: string;\n  value: string;\n  effect: string;\n  tolerationSeconds?: bigint;\n}\n\nexport interface GPUVendor {\n  limitsKey: string;\n  uiName: string;\n}\n\nexport interface GPU {\n  vendor?: string;\n  num?: string;\n  vendors?: GPUVendor[];\n}\n\nexport interface ConfigVolume {\n  type: {\n    value: string;\n  };\n  name: {\n    value: string;\n  };\n  size: {\n    value: string;\n  };\n  mountPath: {\n    value: string;\n  };\n  accessModes: {\n    value: string;\n  };\n}\n\nexport interface Config {\n  image?: {\n    value: string;\n    options: string[];\n  };\n\n  imageGroupOne?: {\n    value: string;\n    options: string[];\n  };\n\n  imageGroupTwo?: {\n    value: string;\n    options: string[];\n  };\n\n  hideRegistry?: boolean;\n\n  hideTag?: boolean;\n\n  allowCustomImage?: boolean;\n\n  imagePullPolicy?: {\n    value: string;\n    readOnly?: boolean;\n  };\n\n  cpu?: {\n    value: string;\n    limitFactor: string;\n    readOnly?: boolean;\n  };\n\n  memory?: {\n    value: string;\n    limitFactor: string;\n    readOnly?: boolean;\n  };\n\n  environment?: {\n    value: string;\n    readOnly?: boolean;\n  };\n\n  workspaceVolume?: {\n    value: ConfigVolume;\n    readOnly?: boolean;\n  };\n\n  dataVolumes?: {\n    value: {\n      value: ConfigVolume;\n    }[];\n    readOnly?: boolean;\n  };\n\n  affinityConfig?: {\n    value: string;\n    options: AffinityConfig[];\n    readOnly?: boolean;\n  };\n\n  tolerationGroup?: {\n    value: string;\n    options: TolerationGroup[];\n    readOnly?: boolean;\n  };\n\n  shm?: {\n    value: boolean;\n    readOnly?: boolean;\n  };\n\n  gpus?: {\n    value?: GPU;\n    readOnly?: boolean;\n  };\n\n  configurations?: {\n    value: string[];\n    readOnly?: boolean;\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000',\n  resource: 'notebooks',\n  ui: 'default',\n  jupyterlabLogo: 'static/assets/logos/jupyterlab-logo.svg',\n  jupyterIcon: 'static/assets/logos/jupyter-icon.svg',\n  groupOneLogo: 'static/assets/logos/group-one-logo.svg',\n  groupOneIcon: 'static/assets/logos/group-one-icon.svg',\n  groupTwoLogo: 'static/assets/logos/group-two-logo.svg',\n  groupTwoIcon: 'static/assets/logos/group-two-icon.svg',\n\n  // Rok specifics\n  rokUrl: '',\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}