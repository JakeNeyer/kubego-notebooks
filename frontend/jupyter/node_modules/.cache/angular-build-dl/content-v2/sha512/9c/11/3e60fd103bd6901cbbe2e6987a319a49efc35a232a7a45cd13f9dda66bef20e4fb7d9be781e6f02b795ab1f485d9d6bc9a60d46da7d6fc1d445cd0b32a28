{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/form/form-default/form-advanced-options/form-advanced-options.component.ts","./src/app/pages/form/form-default/form-advanced-options/form-advanced-options.component.html","./src/app/pages/form/form-default/form-affinity-tolerations/form-affinity-tolerations.component.html","./src/app/pages/form/form-default/form-affinity-tolerations/form-affinity-tolerations.component.ts","./src/app/pages/form/form-default/form-configurations/form-configurations.component.ts","./src/app/pages/form/form-default/form-configurations/form-configurations.component.html","./src/app/pages/form/form-default/form-cpu-ram/form-cpu-ram.component.ts","./src/app/pages/form/form-default/form-cpu-ram/form-cpu-ram.component.html","./src/app/pages/form/form-default/form-data-volumes/form-data-volumes.component.ts","./src/app/pages/form/form-default/form-data-volumes/form-data-volumes.component.html","./src/app/pages/form/form-default/form-default.component.ts","./src/app/pages/form/form-default/form-default.component.html","./src/app/pages/form/form-default/form-default.module.ts","./src/app/pages/form/form-default/form-gpus/form-gpus.component.ts","./src/app/pages/form/form-default/form-gpus/form-gpus.component.html","./src/app/pages/form/form-default/form-image/form-image.component.ts","./src/app/pages/form/form-default/form-image/form-image.component.html","./src/app/pages/form/form-default/form-name/form-name.component.ts","./src/app/pages/form/form-default/form-name/form-name.component.html","./src/app/pages/form/form-default/form-workspace-volume/form-workspace-volume.component.ts","./src/app/pages/form/form-default/form-workspace-volume/form-workspace-volume.component.html","./src/app/pages/form/form-default/utils.ts","./src/app/pages/form/form-default/volume/volume.component.ts","./src/app/pages/form/form-default/volume/volume.component.html","./src/app/pages/form/form-rok/form-rok.component.ts","./src/app/pages/form/form-rok/form-rok.component.html","./src/app/pages/form/form-rok/form-rok.module.ts","./src/app/pages/form/form-rok/rok-form-configurations/rok-form-configurations.component.ts","./src/app/pages/form/form-rok/rok-form-configurations/rok-form-configurations.component.html","./src/app/pages/form/form-rok/rok-form-data-volumes/rok-form-data-volumes.component.ts","./src/app/pages/form/form-rok/rok-form-data-volumes/rok-form-data-volumes.component.html","./src/app/pages/form/form-rok/rok-form-workspace-volume/rok-form-workspace-volume.component.ts","./src/app/pages/form/form-rok/rok-form-workspace-volume/rok-form-workspace-volume.component.html","./src/app/pages/form/form-rok/rok-jupyter-lab-selector/rok-jupyter-lab-selector.component.ts","./src/app/pages/form/form-rok/rok-jupyter-lab-selector/rok-jupyter-lab-selector.component.html","./src/app/pages/form/form-rok/rok-volume/rok-volume.component.ts","./src/app/pages/form/form-rok/rok-volume/rok-volume.component.html","./src/app/pages/form/form-rok/types.ts","./src/app/pages/form/form-rok/utils.ts","./src/app/pages/form/form.component.ts","./src/app/pages/form/form.component.html","./src/app/pages/form/form.module.ts","./src/app/pages/index/index-default/config.ts","./src/app/pages/index/index-default/index-default.component.ts","./src/app/pages/index/index-default/index-default.component.html","./src/app/pages/index/index-default/index-default.module.ts","./src/app/pages/index/index-default/server-type/server-type.component.ts","./src/app/pages/index/index-default/server-type/server-type.component.html","./src/app/pages/index/index-rok/index-rok.component.ts","./src/app/pages/index/index-rok/index-rok.module.ts","./src/app/pages/index/index.component.ts","./src/app/pages/index/index.component.html","./src/app/pages/index/index.module.ts","./src/app/services/backend.service.ts","./src/app/types.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IndexComponent } from './pages/index/index.component';\nimport { FormComponent } from './pages/form/form.component';\n\nconst routes: Routes = [\n  { path: '', component: IndexComponent },\n  { path: 'new', component: FormComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { IndexModule } from './pages/index/index.module';\nimport { FormModule } from './pages/form/form.module';\nimport { KubeflowModule } from 'kubeflow';\n\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    KubeflowModule,\n    IndexModule,\n    FormModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-advanced-options',\n  templateUrl: './form-advanced-options.component.html',\n  styleUrls: ['./form-advanced-options.component.scss'],\n})\nexport class FormAdvancedOptionsComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<lib-form-section\n  title=\"Miscellaneous Settings\"\n  text=\"Other possible settings to be applied to the Notebook Server.\"\n  icon=\"fa:fas:cogs\"\n  i18n-title\n  i18n-text\n>\n  <mat-slide-toggle [formControl]=\"parentForm.get('shm')\" i18n>\n    Enable Shared Memory\n  </mat-slide-toggle>\n</lib-form-section>\n","<lib-form-section\n  title=\"Affinity / Tolerations\"\n  text=\"Configure the Notebook's Affinity and Tolerations.\"\n  icon=\"fa:fas:bullseye\"\n  i18n-title\n  i18n-text\n>\n  <div class=\"row\">\n    <!--Affinity-->\n    <mat-form-field class=\"wide column\" appearance=\"outline\">\n      <mat-label i18n> Affinity Config </mat-label>\n      <mat-select [formControl]=\"parentForm.get('affinityConfig')\">\n        <mat-option value=\"\" i18n=\"option None\">None</mat-option>\n        <mat-option\n          *ngFor=\"let affinityConfig of affinityConfigs\"\n          [value]=\"affinityConfig.configKey\"\n        >\n          {{ affinityConfig.displayName }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <!--Tolerations-->\n    <mat-form-field class=\"wide column\" appearance=\"outline\">\n      <mat-label i18n> Tolerations Group </mat-label>\n      <mat-select [formControl]=\"parentForm.get('tolerationGroup')\">\n        <mat-option value=\"\" i18n=\"option None\">None</mat-option>\n        <mat-option\n          *ngFor=\"let tolerationGroup of tolerationGroups\"\n          [value]=\"tolerationGroup.groupKey\"\n        >\n          {{ tolerationGroup.displayName }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TolerationGroup, AffinityConfig } from 'src/app/types';\n\n@Component({\n  selector: 'app-form-affinity-tolerations',\n  templateUrl: './form-affinity-tolerations.component.html',\n  styleUrls: ['./form-affinity-tolerations.component.scss'],\n})\nexport class FormAffinityTolerationsComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() tolerationGroups: TolerationGroup[];\n  @Input() affinityConfigs: AffinityConfig[];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PodDefault } from 'src/app/types';\nimport { Subscription } from 'rxjs';\nimport { NamespaceService } from 'kubeflow';\nimport { JWABackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-form-configurations',\n  templateUrl: './form-configurations.component.html',\n  styleUrls: ['./form-configurations.component.scss'],\n})\nexport class FormConfigurationsComponent implements OnInit, OnDestroy {\n  podDefaults: PodDefault[];\n  subscriptions = new Subscription();\n\n  @Input() parentForm: FormGroup;\n\n  constructor(public ns: NamespaceService, public backend: JWABackendService) {}\n\n  ngOnInit() {\n    // Keep track of the selected namespace\n    const nsSub = this.ns.getSelectedNamespace().subscribe(namespace => {\n      // Get the PodDefaults of the new Namespace\n      this.backend.getPodDefaults(namespace).subscribe(pds => {\n        this.podDefaults = pds;\n      });\n    });\n\n    this.subscriptions.add(nsSub);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<lib-form-section\n  title=\"Configurations\"\n  text=\"Extra layers of configurations that will be applied to the new Notebook. \n        (e.g. Insert credentials as Secrets, set Environment Variables.)\"\n  icon=\"fa:fas:sliders-h\"\n  i18n-title\n  i18n-text\n>\n  <mat-form-field class=\"wide\" appearance=\"outline\">\n    <mat-label i18n> Configurations </mat-label>\n    <mat-select [formControl]=\"parentForm.get('configurations')\" multiple>\n      <mat-option *ngFor=\"let config of podDefaults\" [value]=\"config.label\">\n        {{ config.desc }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { calculateLimits } from '../utils';\n\n@Component({\n  selector: 'app-form-cpu-ram',\n  templateUrl: './form-cpu-ram.component.html',\n  styleUrls: ['./form-cpu-ram.component.scss'],\n})\nexport class FormCpuRamComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() readonlyCPU: boolean;\n  @Input() readonlyMemory: boolean;\n  @Input() cpuLimitFactor: string;\n  @Input() memoryLimitFactor: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.parentForm.get('cpu').valueChanges.subscribe(val => {\n      // set cpu limit when value of the cpu request changes\n      if (this.parentForm.get('cpuLimit').dirty) {\n        return;\n      }\n\n      const cpu = this.parentForm.get('cpu').value;\n      this.parentForm\n        .get('cpuLimit')\n        .setValue(calculateLimits(cpu, this.cpuLimitFactor));\n    });\n\n    this.parentForm.get('memory').valueChanges.subscribe(val => {\n      // set memory limit when value of the memory request changes\n      if (this.parentForm.get('memoryLimit').dirty) {\n        return;\n      }\n\n      const memory = this.parentForm.get('memory').value;\n      this.parentForm\n        .get('memoryLimit')\n        .setValue(calculateLimits(memory, this.memoryLimitFactor));\n    });\n  }\n\n  getCPUError() {}\n\n  getRAMError() {}\n}\n","<lib-form-section\n  title=\"CPU / RAM\"\n  text=\"Specify the total amount of CPU and RAM reserved by your Notebook Server.\n         For CPU-intensive workloads, you can choose more than 1 CPU (e.g. 1.5).\"\n  icon=\"fa:fas:microchip\"\n  i18n-title=\"Title for the CPU/RAM form section\"\n  i18n-text=\"Text for the CPU/RAM form section\"\n>\n  <div class=\"row\">\n    <!--CPU-->\n    <lib-positive-number-input\n      class=\"column\"\n      min=\"0.1\"\n      step=\"0.1\"\n      [sizeControl]=\"parentForm.get('cpu')\"\n      label=\"Requested CPUs\"\n      i18n-label\n    ></lib-positive-number-input>\n\n    <!--RAM-->\n    <lib-positive-number-input\n      class=\"column\"\n      min=\"0.1\"\n      step=\"0.1\"\n      [sizeControl]=\"parentForm.get('memory')\"\n      label=\"Requested memory in Gi\"\n      i18n-label\n    ></lib-positive-number-input>\n  </div>\n\n  <lib-advanced-options>\n    <div class=\"row\">\n      <!--CPU-->\n      <div class=\"column\">\n        <mat-form-field appearance=\"outline\" class=\"wide\">\n          <mat-label i18n>CPU limit</mat-label>\n          <input\n            matInput\n            type=\"number\"\n            min=\"0.1\"\n            step=\"0.1\"\n            [formControl]=\"parentForm.get('cpuLimit')\"\n          />\n        </mat-form-field>\n      </div>\n\n      <!--RAM-->\n      <div class=\"column\">\n        <mat-form-field appearance=\"outline\" class=\"wide\">\n          <mat-label i18n> Memory limit in Gi </mat-label>\n          <input\n            matInput\n            type=\"number\"\n            min=\"0.1\"\n            step=\"0.1\"\n            [formControl]=\"parentForm.get('memoryLimit')\"\n          />\n        </mat-form-field>\n      </div>\n    </div>\n  </lib-advanced-options>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormArray, Validators, FormBuilder } from '@angular/forms';\nimport { addDataVolume } from '../utils';\nimport { Volume } from 'src/app/types';\n\n@Component({\n  selector: 'app-form-data-volumes',\n  templateUrl: './form-data-volumes.component.html',\n  styleUrls: ['./form-data-volumes.component.scss'],\n})\nexport class FormDataVolumesComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() readonly: boolean;\n  @Input() pvcs: Volume[];\n  @Input() defaultStorageClass: boolean;\n\n  get datavols() {\n    const vols = this.parentForm.get('datavols') as FormArray;\n    return vols.controls;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  addVol() {\n    addDataVolume(this.parentForm);\n  }\n\n  deleteVol(idx: number) {\n    const vols = this.parentForm.get('datavols') as FormArray;\n    vols.removeAt(idx);\n    this.parentForm.updateValueAndValidity();\n  }\n}\n","<lib-form-section\n  title=\"Data Volumes\"\n  text=\"Configure the Volumes to be mounted as your Datasets.\"\n  icon=\"fa:fas:hdd\"\n  i18n-title\n  i18n-text\n>\n  <div [formGroup]=\"parentForm\">\n    <button\n      mat-stroked-button\n      class=\"add-data-vol-button\"\n      color=\"accent\"\n      (click)=\"addVol()\"\n      type=\"button\"\n      [disabled]=\"readonly\"\n      i18n=\"Add data volume button text\"\n    >\n      <mat-icon>add</mat-icon>\n      ADD VOLUME\n    </button>\n\n    <div *ngFor=\"let vol of datavols; let i = index\" class=\"volume-wrapper\">\n      <app-volume\n        [volume]=\"vol\"\n        [notebookName]=\"parentForm.get('name').value\"\n        [namespace]=\"parentForm.get('namespace').value\"\n        [pvcs]=\"pvcs\"\n        [ephemeral]=\"false\"\n        [defaultStorageClass]=\"defaultStorageClass\"\n      >\n      </app-volume>\n\n      <div class=\"del-btn\">\n        <button\n          mat-icon-button\n          color=\"warn\"\n          (click)=\"deleteVol(i)\"\n          type=\"button\"\n          [disabled]=\"readonly\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</lib-form-section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Config, Volume, NotebookFormObject } from 'src/app/types';\nimport { Subscription } from 'rxjs';\nimport {\n  NamespaceService,\n  BackendService,\n  SnackBarService,\n  SnackType,\n  getNameError,\n} from 'kubeflow';\nimport { Router } from '@angular/router';\nimport { getFormDefaults, initFormControls } from './utils';\nimport { JWABackendService } from 'src/app/services/backend.service';\nimport { environment } from '@app/environment';\n\n@Component({\n  selector: 'app-form-default',\n  templateUrl: './form-default.component.html',\n  styleUrls: ['./form-default.component.scss'],\n})\nexport class FormDefaultComponent implements OnInit, OnDestroy {\n  currNamespace = '';\n  formCtrl: FormGroup;\n  config: Config;\n\n  ephemeral = false;\n  defaultStorageclass = false;\n\n  blockSubmit = false;\n  formReady = false;\n  pvcs: Volume[] = [];\n  existingNotebooks = new Set<string>();\n\n  subscriptions = new Subscription();\n\n  constructor(\n    public namespaceService: NamespaceService,\n    public backend: JWABackendService,\n    public router: Router,\n    public popup: SnackBarService,\n  ) {}\n\n  ngOnInit(): void {\n    // Initialize the form control\n    this.formCtrl = this.getFormDefaults();\n\n    // Update the form Values from the default ones\n    this.backend.getConfig().subscribe(config => {\n      if (Object.keys(config).length === 0) {\n        // Don't fire on empty config\n        return;\n      }\n\n      this.config = config;\n      this.initFormControls(this.formCtrl, config);\n    });\n\n    // Keep track of the selected namespace\n    this.subscriptions.add(\n      this.namespaceService.getSelectedNamespace().subscribe(namespace => {\n        this.currNamespace = namespace;\n        this.formCtrl.controls.namespace.setValue(this.currNamespace);\n\n        // Get the PVCs of the new Namespace\n        this.backend.getVolumes(namespace).subscribe(pvcs => {\n          this.pvcs = pvcs;\n        });\n      }),\n    );\n\n    // Check if a default StorageClass is set\n    this.backend.getDefaultStorageClass().subscribe(defaultClass => {\n      if (defaultClass.length === 0) {\n        this.defaultStorageclass = false;\n        this.popup.open(\n          $localize`No default Storage Class is set. Can't create new Disks for the new Notebook. Please use an Existing Disk.`,\n          SnackType.Warning,\n          0,\n        );\n      } else {\n        this.defaultStorageclass = true;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // Unsubscriptions\n    this.subscriptions.unsubscribe();\n  }\n\n  // Functions for handling the Form Group of the entire Form\n  getFormDefaults() {\n    return getFormDefaults();\n  }\n\n  initFormControls(formCtrl: FormGroup, config: Config) {\n    initFormControls(formCtrl, config);\n  }\n\n  // Form Actions\n  getSubmitNotebook(): NotebookFormObject {\n    const notebookCopy = this.formCtrl.value as NotebookFormObject;\n    const notebook = JSON.parse(JSON.stringify(notebookCopy));\n\n    // Use the custom image instead\n    if (notebook.customImageCheck) {\n      notebook.image = notebook.customImage;\n    } else if (notebook.serverType === 'group-one') {\n      // Set notebook image from imageGroupOne\n      notebook.image = notebook.imageGroupOne;\n    } else if (notebook.serverType === 'group-two') {\n      // Set notebook image from imageGroupTwo\n      notebook.image = notebook.imageGroupTwo;\n    }\n\n    // Remove unnecessary images from the request sent to the backend\n    delete notebook.imageGroupOne;\n    delete notebook.imageGroupTwo;\n\n    // Ensure CPU input is a string\n    if (typeof notebook.cpu === 'number') {\n      notebook.cpu = notebook.cpu.toString();\n    }\n\n    // Ensure GPU input is a string\n    if (typeof notebook.gpus.num === 'number') {\n      notebook.gpus.num = notebook.gpus.num.toString();\n    }\n\n    // Remove cpuLimit from request if null\n    if (notebook.cpuLimit == null) {\n      delete notebook.cpuLimit;\n      // Ensure CPU Limit input is a string\n    } else if (typeof notebook.cpuLimit === 'number') {\n      notebook.cpuLimit = notebook.cpuLimit.toString();\n    }\n\n    // Remove memoryLimit from request if null\n    if (notebook.memoryLimit == null) {\n      delete notebook.memoryLimit;\n      // Add Gi to memoryLimit\n    } else if (notebook.memoryLimit) {\n      notebook.memoryLimit = notebook.memoryLimit.toString() + 'Gi';\n    }\n\n    // Add Gi to all sizes\n    if (notebook.memory) {\n      notebook.memory = notebook.memory.toString() + 'Gi';\n    }\n\n    if (notebook.workspace.size) {\n      notebook.workspace.size = notebook.workspace.size.toString() + 'Gi';\n    }\n\n    for (const vol of notebook.datavols) {\n      if (vol.size) {\n        vol.size = vol.size + 'Gi';\n      }\n    }\n\n    return notebook;\n  }\n\n  onSubmit() {\n    const notebook = this.getSubmitNotebook();\n    this.backend.createNotebook(notebook).subscribe(() => {\n      this.popup.close();\n      this.router.navigate(['/']);\n    });\n  }\n\n  onCancel() {\n    this.router.navigate(['/']);\n  }\n}\n","<div class=\"center-flex\">\n  <div class=\"form-with-buttons\">\n    <div class=\"form--card-container mat-elevation-z2\">\n      <form novalidate (ngSubmit)=\"onSubmit()\" [formGroup]=\"formCtrl\">\n        <app-form-name-namespace\n          [parentForm]=\"formCtrl\"\n        ></app-form-name-namespace>\n\n        <app-form-image\n          [parentForm]=\"formCtrl\"\n          [images]=\"config?.image?.options\"\n          [imagesGroupOne]=\"config?.imageGroupOne?.options\"\n          [imagesGroupTwo]=\"config?.imageGroupTwo?.options\"\n          [allowCustomImage]=\"config?.allowCustomImage\"\n          [hideRegistry]=\"config?.hideRegistry\"\n          [hideTag]=\"config?.hideTag\"\n        ></app-form-image>\n\n        <app-form-cpu-ram\n          [parentForm]=\"formCtrl\"\n          [readonlyCPU]=\"config?.cpu?.readOnly\"\n          [readonlyMemory]=\"config?.memory?.readOnly\"\n          [cpuLimitFactor]=\"config?.cpu?.limitFactor\"\n          [memoryLimitFactor]=\"config?.memory?.limitFactor\"\n        ></app-form-cpu-ram>\n\n        <app-form-gpus\n          [parentForm]=\"formCtrl\"\n          [vendors]=\"config?.gpus?.value.vendors\"\n        ></app-form-gpus>\n\n        <app-form-workspace-volume\n          [parentForm]=\"formCtrl\"\n          [pvcs]=\"pvcs\"\n          [readonly]=\"config?.workspaceVolume?.readOnly\"\n          [defaultStorageClass]=\"defaultStorageclass\"\n        >\n        </app-form-workspace-volume>\n\n        <app-form-data-volumes\n          [parentForm]=\"formCtrl\"\n          [pvcs]=\"pvcs\"\n          [readonly]=\"config?.dataVolumes?.readOnly\"\n          [defaultStorageClass]=\"defaultStorageclass\"\n        >\n        </app-form-data-volumes>\n\n        <app-form-configurations\n          [parentForm]=\"formCtrl\"\n        ></app-form-configurations>\n\n        <app-form-affinity-tolerations\n          [parentForm]=\"formCtrl\"\n          [affinityConfigs]=\"config?.affinityConfig?.options\"\n          [tolerationGroups]=\"config?.tolerationGroup?.options\"\n        ></app-form-affinity-tolerations>\n\n        <app-form-advanced-options\n          [parentForm]=\"formCtrl\"\n        ></app-form-advanced-options>\n      </form>\n    </div>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      class=\"form--button-margin\"\n      (click)=\"onSubmit()\"\n      [disabled]=\"!formCtrl.valid || blockSubmit\"\n      i18n\n    >\n      LAUNCH\n    </button>\n\n    <button mat-raised-button type=\"button\" (click)=\"onCancel()\" i18n>\n      CANCEL\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { FormDefaultComponent } from './form-default.component';\nimport { FormNameComponent } from './form-name/form-name.component';\nimport { FormImageComponent } from './form-image/form-image.component';\nimport { FormCpuRamComponent } from './form-cpu-ram/form-cpu-ram.component';\nimport { FormGpusComponent } from './form-gpus/form-gpus.component';\nimport { FormAdvancedOptionsComponent } from './form-advanced-options/form-advanced-options.component';\n\nimport {\n  FormModule as KfFormModule,\n  ImmediateErrorStateMatcher,\n} from 'kubeflow';\nimport { FormWorkspaceVolumeComponent } from './form-workspace-volume/form-workspace-volume.component';\nimport { VolumeComponent } from './volume/volume.component';\nimport { FormDataVolumesComponent } from './form-data-volumes/form-data-volumes.component';\nimport { FormConfigurationsComponent } from './form-configurations/form-configurations.component';\nimport { FormAffinityTolerationsComponent } from './form-affinity-tolerations/form-affinity-tolerations.component';\n\n@NgModule({\n  declarations: [\n    FormDefaultComponent,\n    FormNameComponent,\n    FormImageComponent,\n    FormCpuRamComponent,\n    FormWorkspaceVolumeComponent,\n    FormDataVolumesComponent,\n    VolumeComponent,\n    FormGpusComponent,\n    FormAdvancedOptionsComponent,\n    FormConfigurationsComponent,\n    FormAffinityTolerationsComponent,\n  ],\n  imports: [\n    CommonModule,\n    KfFormModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    MatButtonToggleModule,\n  ],\n  exports: [\n    FormDefaultComponent,\n    FormNameComponent,\n    FormImageComponent,\n    FormCpuRamComponent,\n    FormWorkspaceVolumeComponent,\n    FormDataVolumesComponent,\n    VolumeComponent,\n    FormGpusComponent,\n    FormAdvancedOptionsComponent,\n    FormConfigurationsComponent,\n    FormAffinityTolerationsComponent,\n  ],\n})\nexport class FormDefaultModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { GPUVendor } from 'src/app/types';\nimport { JWABackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-form-gpus',\n  templateUrl: './form-gpus.component.html',\n  styleUrls: ['./form-gpus.component.scss'],\n})\nexport class FormGpusComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() vendors: GPUVendor[] = [];\n\n  private gpuCtrl: FormGroup;\n  public installedVendors = new Set<string>();\n\n  subscriptions = new Subscription();\n  maxGPUs = 16;\n  gpusCount = ['1', '2', '4', '8'];\n\n  constructor(public backend: JWABackendService) {}\n\n  ngOnInit() {\n    this.gpuCtrl = this.parentForm.get('gpus') as FormGroup;\n\n    // Vendor should not be empty if the user selects GPUs num\n    this.parentForm\n      .get('gpus')\n      .get('vendor')\n      .setValidators([this.vendorWithNum()]);\n\n    this.subscriptions.add(\n      this.gpuCtrl.get('num').valueChanges.subscribe((n: string) => {\n        if (n === 'none') {\n          this.gpuCtrl.get('vendor').disable();\n        } else {\n          this.gpuCtrl.get('vendor').enable();\n        }\n      }),\n    );\n\n    this.backend.getGPUVendors().subscribe(vendors => {\n      this.installedVendors = new Set(vendors);\n    });\n  }\n\n  // Vendor handling\n  public vendorTooltip(vendor: GPUVendor) {\n    return !this.installedVendors.has(vendor.limitsKey)\n      ? $localize`There are currently no ${vendor.uiName} GPUs in you cluster.`\n      : '';\n  }\n\n  // Custom Validation\n  public getVendorError() {\n    const vendorCtrl = this.parentForm.get('gpus').get('vendor');\n\n    if (vendorCtrl.hasError('vendorNullName')) {\n      return $localize`You must also specify the GPU Vendor for the assigned GPUs`;\n    }\n  }\n\n  private vendorWithNum(): ValidatorFn {\n    // Make sure that if the user has specified a number of GPUs\n    // that they also specify the GPU vendor\n    return (control: AbstractControl): { [key: string]: any } => {\n      const num = this.parentForm.get('gpus').get('num').value;\n      const vendor = this.parentForm.get('gpus').get('vendor').value;\n\n      if (num !== 'none' && vendor === '') {\n        return { vendorNullName: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n","<lib-form-section\n  title=\"GPUs\"\n  text=\"Specify the number and Vendor of GPUs that will be assigned to the \n        Notebook Server's Container.\"\n  icon=\"custom:gpuSectionIcon\"\n  i18n-title\n  i18n-text\n>\n  <div class=\"row\" [formGroup]=\"parentForm.get('gpus')\">\n    <!--GPUs Number-->\n    <mat-form-field class=\"column\" appearance=\"outline\">\n      <mat-label i18n>Number of GPUs</mat-label>\n      <mat-select matNativeControl formControlName=\"num\">\n        <mat-option value=\"none\" i18n=\"option None\">None</mat-option>\n        <mat-option *ngFor=\"let v of gpusCount\" [value]=\"v\">\n          {{ v }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <!--GPUs Vendor-->\n    <mat-form-field class=\"column\" appearance=\"outline\">\n      <mat-label i18n>GPU Vendor</mat-label>\n      <mat-select matNativeControl formControlName=\"vendor\" id=\"gpu-vendor\">\n        <mat-option\n          *ngFor=\"let v of vendors\"\n          [value]=\"v.limitsKey\"\n          [matTooltip]=\"vendorTooltip(v)\"\n        >\n          {{ v.uiName }}\n        </mat-option>\n      </mat-select>\n      <mat-error>{{ getVendorError() }}</mat-error>\n    </mat-form-field>\n  </div>\n</lib-form-section>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { environment } from '@app/environment';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-form-image',\n  templateUrl: './form-image.component.html',\n  styleUrls: ['./form-image.component.scss'],\n})\nexport class FormImageComponent implements OnInit, OnDestroy {\n  @Input() parentForm: FormGroup;\n  @Input() images: string[];\n  @Input() imagesGroupOne: string[];\n  @Input() imagesGroupTwo: string[];\n  @Input() allowCustomImage: boolean;\n  @Input() hideRegistry: boolean;\n  @Input() hideTag: boolean;\n\n  subs = new Subscription();\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'jupyterlab',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.jupyterlabLogo),\n    );\n    iconRegistry.addSvgIcon(\n      'group-one',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.groupOneLogo),\n    );\n    iconRegistry.addSvgIcon(\n      'group-two',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.groupTwoLogo),\n    );\n  }\n\n  ngOnInit() {\n    this.subs.add(\n      this.parentForm.get('customImageCheck').valueChanges.subscribe(check => {\n        // Make sure that the use will insert and Image value\n        if (check) {\n          this.parentForm.get('customImage').setValidators(Validators.required);\n          this.parentForm.get('image').setValidators([]);\n          this.parentForm.get('imageGroupOne').setValidators([]);\n          this.parentForm.get('imageGroupTwo').setValidators([]);\n        }\n        this.parentForm.get('serverType').valueChanges.subscribe(selection => {\n          if (selection === 'jupyter') {\n            this.parentForm.get('customImage').setValidators([]);\n            this.parentForm.get('image').setValidators(Validators.required);\n            this.parentForm.get('imageGroupOne').setValidators([]);\n            this.parentForm.get('imageGroupTwo').setValidators([]);\n          } else if (selection === 'group-one') {\n            this.parentForm.get('customImage').setValidators([]);\n            this.parentForm.get('image').setValidators([]);\n            this.parentForm\n              .get('imageGroupOne')\n              .setValidators(Validators.required);\n            this.parentForm.get('imageGroupTwo').setValidators([]);\n          } else if (selection === 'group-two') {\n            this.parentForm.get('customImage').setValidators([]);\n            this.parentForm.get('image').setValidators([]);\n            this.parentForm.get('imageGroupOne').setValidators([]);\n            this.parentForm\n              .get('imageGroupTwo')\n              .setValidators(Validators.required);\n          }\n          this.parentForm.get('image').updateValueAndValidity();\n          this.parentForm.get('imageGroupOne').updateValueAndValidity();\n          this.parentForm.get('imageGroupTwo').updateValueAndValidity();\n        });\n        this.parentForm.get('customImage').updateValueAndValidity();\n        this.parentForm.get('serverType').updateValueAndValidity();\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n  imageDisplayName(image: string): string {\n    const [name, tag = null] = image.split(':');\n    let tokens = name.split('/');\n\n    if (this.hideRegistry && tokens.length > 1 && tokens[0].includes('.')) {\n      tokens.shift();\n    }\n\n    let displayName = tokens.join('/');\n\n    if (!this.hideTag && tag !== null) {\n      displayName = `${displayName}:${tag}`;\n    }\n\n    return displayName;\n  }\n}\n","<lib-form-section\n  title=\"Image\"\n  text=\"A starter Jupyter Docker Image with a baseline deployment and typical\n        ML packages\"\n  icon=\"fa:fab:docker\"\n  i18n-title=\"Title for the Image section of the form\"\n  i18n-text=\"Text for the Image section of the form\"\n>\n  <div class=\"flex-column\">\n    <mat-checkbox\n      *ngIf=\"allowCustomImage\"\n      [formControl]=\"parentForm.get('customImageCheck')\"\n      i18n\n    >\n      Custom Image\n    </mat-checkbox>\n\n    <mat-button-toggle-group\n      [formControl]=\"parentForm.get('serverType')\"\n      class=\"server-type-wrapper\"\n      attr.aria-label=\"Server Type\"\n      i18n-aria-label=\"Aria label for the Server Type\"\n    >\n      <mat-button-toggle\n        value=\"jupyter\"\n        attr.aria-label=\"Use JupyterLab based server\"\n        i18n-aria-label=\"Aria label for JupyterLab type server\"\n      >\n        <mat-icon class=\"server-type\" svgIcon=\"jupyterlab\"></mat-icon>\n      </mat-button-toggle>\n\n      <mat-button-toggle\n        value=\"group-one\"\n        attr.aria-label=\"Use Group One based server\"\n        i18n-aria-label=\"Aria label for Group One server\"\n      >\n        <mat-icon class=\"server-type\" svgIcon=\"group-one\"></mat-icon>\n      </mat-button-toggle>\n      <mat-button-toggle\n        value=\"group-two\"\n        attr.aria-label=\"Use Group Two based server\"\n        i18n-aria-label=\"Aria label for Group Two server\"\n      >\n        <mat-icon class=\"server-type\" svgIcon=\"group-two\"></mat-icon>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n\n  <mat-form-field\n    class=\"wide\"\n    appearance=\"outline\"\n    *ngIf=\"\n      !parentForm?.value.customImageCheck &&\n      parentForm?.value.serverType === 'jupyter'\n    \"\n  >\n    <!-- If readonly, then make it an input element instead of select -->\n    <mat-label i18n>Image</mat-label>\n    <mat-select\n      placeholder=\"Docker Image\"\n      i18n-placeholder\n      [formControl]=\"parentForm.get('image')\"\n    >\n      <mat-option *ngFor=\"let img of images\" [value]=\"img\" [matTooltip]=\"img\">\n        {{ imageDisplayName(img) }}\n      </mat-option>\n    </mat-select>\n    <mat-error i18n>Please provide an Image to use</mat-error>\n  </mat-form-field>\n\n  <mat-form-field\n    class=\"wide\"\n    appearance=\"outline\"\n    *ngIf=\"\n      !parentForm?.value.customImageCheck &&\n      parentForm?.value.serverType === 'group-one'\n    \"\n  >\n    <!-- If readonly, then make it an input element instead of select -->\n    <mat-label i18n>Image</mat-label>\n    <mat-select\n      placeholder=\"Docker Image\"\n      i18n-placeholder\n      [formControl]=\"parentForm.get('imageGroupOne')\"\n    >\n      <mat-option\n        *ngFor=\"let img of imagesGroupOne\"\n        [value]=\"img\"\n        [matTooltip]=\"img\"\n      >\n        {{ imageDisplayName(img) }}\n      </mat-option>\n    </mat-select>\n    <mat-error i18n>Please provide an Image to use</mat-error>\n  </mat-form-field>\n\n  <mat-form-field\n    class=\"wide\"\n    appearance=\"outline\"\n    *ngIf=\"\n      !parentForm?.value.customImageCheck &&\n      parentForm?.value.serverType === 'group-two'\n    \"\n  >\n    <!-- If readonly, then make it an input element instead of select -->\n    <mat-label i18n>Image</mat-label>\n    <mat-select\n      placeholder=\"Docker Image\"\n      i18n-placeholder\n      [formControl]=\"parentForm.get('imageGroupTwo')\"\n    >\n      <mat-option\n        *ngFor=\"let img of imagesGroupTwo\"\n        [value]=\"img\"\n        [matTooltip]=\"img\"\n      >\n        {{ imageDisplayName(img) }}\n      </mat-option>\n    </mat-select>\n    <mat-error i18n>Please provide an Image to use</mat-error>\n  </mat-form-field>\n\n  <mat-form-field\n    class=\"wide\"\n    appearance=\"outline\"\n    *ngIf=\"parentForm?.value.customImageCheck\"\n  >\n    <mat-label i18n>Custom Image</mat-label>\n    <input\n      matInput\n      placeholder=\"Provide a custom Image\"\n      [formControl]=\"parentForm.get('customImage')\"\n      #cstmimg\n    />\n    <mat-error i18n>Please provide an Image to use</mat-error>\n  </mat-form-field>\n\n  <lib-advanced-options>\n    <div class=\"row\">\n      <mat-form-field class=\"column\" appearance=\"outline\">\n        <mat-label i18n>Image pull policy</mat-label>\n        <mat-select [formControl]=\"parentForm.get('imagePullPolicy')\">\n          <mat-option value=\"Always\" i18n=\"ImagePullPolicy: Always\">\n            Always\n          </mat-option>\n          <mat-option value=\"IfNotPresent\" i18n=\"ImagePullPolicy: IfNotPresent\">\n            IfNotPresent\n          </mat-option>\n          <mat-option value=\"Never\" i18n=\"ImagePullPolicy: Never\">\n            Never\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </lib-advanced-options>\n</lib-form-section>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport {\n  FormGroup,\n  ValidatorFn,\n  AbstractControl,\n  Validators,\n} from '@angular/forms';\nimport { NamespaceService } from 'kubeflow';\nimport { Subscription } from 'rxjs';\nimport { JWABackendService } from 'src/app/services/backend.service';\n\n@Component({\n  selector: 'app-form-name-namespace',\n  templateUrl: './form-name.component.html',\n  styleUrls: ['./form-name.component.scss'],\n})\nexport class FormNameComponent implements OnInit, OnDestroy {\n  subscriptions = new Subscription();\n  existingNotebooks: Set<string> = new Set<string>();\n\n  @Input() parentForm: FormGroup;\n\n  constructor(\n    private backend: JWABackendService,\n    private ns: NamespaceService,\n  ) {}\n\n  ngOnInit() {\n    // Keep track of the existing Notebooks in the selected Namespace\n    // Use these names to check if the input name exists\n    const nsSub = this.ns.getSelectedNamespace().subscribe(ns => {\n      this.backend.getNotebooks(ns).subscribe(notebooks => {\n        this.existingNotebooks.clear();\n        notebooks.map(nb => this.existingNotebooks.add(nb.name));\n      });\n    });\n\n    this.subscriptions.add(nsSub);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<lib-form-section\n  title=\"Name\"\n  text=\"Specify the name of the Notebook Server and the Namespace it will belong to.\"\n  icon=\"fa:fas:book\"\n  i18n-title\n  i18n-text\n>\n  <lib-form-name-namespace-inputs\n    [nameControl]=\"parentForm.get('name')\"\n    maxLength=\"40\"\n    [namespaceControl]=\"parentForm.get('namespace')\"\n    resourceName=\"Notebook Server\"\n    [existingNames]=\"existingNotebooks\"\n  >\n  </lib-form-name-namespace-inputs>\n</lib-form-section>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { SnackBarService, SnackType } from 'kubeflow';\nimport { Volume } from 'src/app/types';\n\n@Component({\n  selector: 'app-form-workspace-volume',\n  templateUrl: './form-workspace-volume.component.html',\n  styleUrls: ['./form-workspace-volume.component.scss'],\n})\nexport class FormWorkspaceVolumeComponent implements OnInit, OnDestroy {\n  subscriptions = new Subscription();\n  private readOnlyPrv = false;\n\n  @Input() parentForm: FormGroup;\n  @Input() pvcs: Volume[];\n  @Input() storageClasses: string[];\n  @Input() defaultStorageClass: boolean;\n  @Input()\n  get readonly() {\n    return this.readOnlyPrv;\n  }\n  set readonly(b) {\n    this.readOnlyPrv = b;\n  }\n\n  constructor(private snackBar: SnackBarService) {}\n\n  ngOnInit() {\n    // Show a warning if no persistent storage is provided\n    this.subscriptions.add(\n      this.parentForm\n        .get('noWorkspace')\n        .valueChanges.subscribe((b: boolean) => {\n          // close the snackbar if deselected\n          if (!b) {\n            this.snackBar.close();\n          } else {\n            const msg = $localize`Your workspace will not be persistent. You will lose all data in it, if your notebook is terminated for any reason.`;\n\n            this.snackBar.open(msg, SnackType.Warning, 0);\n          }\n        }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    this.snackBar.close();\n  }\n}\n","<lib-form-section\n  title=\"Workspace Volume\"\n  text=\"Configure the Volume to be mounted as your personal Workspace.\"\n  icon=\"fa:fas:laptop-code\"\n  i18n-title\n  i18n-text\n>\n  <div [formGroup]=\"parentForm\">\n    <mat-checkbox formControlName=\"noWorkspace\" i18n>\n      Don't use Persistent Storage for User's home\n    </mat-checkbox>\n\n    <app-volume\n      [volume]=\"parentForm.get('workspace')\"\n      [notebookName]=\"parentForm.value.name\"\n      [pvcs]=\"pvcs\"\n      [ephemeral]=\"parentForm.value.noWorkspace\"\n      [namespace]=\"parentForm.value.namespace\"\n      [defaultStorageClass]=\"defaultStorageClass\"\n    >\n    </app-volume>\n  </div>\n</lib-form-section>\n","import { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ConfigVolume, GPU, Config } from 'src/app/types';\nimport { getNameSyncValidators, getNameAsyncValidators } from 'kubeflow';\n\nexport function getFormDefaults(): FormGroup {\n  const fb = new FormBuilder();\n\n  return fb.group({\n    name: ['', [Validators.required]],\n    namespace: ['', [Validators.required]],\n    image: ['', [Validators.required]],\n    imageGroupOne: ['', [Validators.required]],\n    imageGroupTwo: ['', [Validators.required]],\n    allowCustomImage: [true, []],\n    imagePullPolicy: ['IfNotPresent', [Validators.required]],\n    customImage: ['', []],\n    customImageCheck: [false, []],\n    serverType: ['jupyter', [Validators.required]],\n    cpu: [1, [Validators.required]],\n    cpuLimit: ['', []],\n    memory: [1, [Validators.required]],\n    memoryLimit: ['', []],\n    gpus: fb.group({\n      vendor: ['', []],\n      num: ['', []],\n    }),\n    noWorkspace: [false, []],\n    workspace: fb.group({\n      type: ['', [Validators.required]],\n      name: ['', getNameSyncValidators(), getNameAsyncValidators()],\n      templatedName: ['', []],\n      size: [1, [Validators.required]],\n      path: [{ value: '', disabled: true }, [Validators.required]],\n      templatedPath: ['', []],\n      mode: ['', [Validators.required]],\n      class: ['{none}', [Validators.required]],\n      extraFields: fb.group({}),\n    }),\n    affinityConfig: ['', []],\n    tolerationGroup: ['', []],\n    datavols: fb.array([]),\n    shm: [true, []],\n    configurations: [[], []],\n  });\n}\n\nexport function createVolumeControl(vol: ConfigVolume, readonly = false) {\n  const fb = new FormBuilder();\n\n  const ctrl = fb.group({\n    type: [vol.type.value, [Validators.required]],\n    name: ['volume', getNameSyncValidators(), getNameAsyncValidators()],\n    templatedName: [vol.name.value, []],\n    templatedPath: [vol.mountPath.value, []],\n    size: [configSizeToNumber(vol.size.value), [Validators.required]],\n    path: [vol.mountPath.value, [Validators.required]],\n    mode: [vol.accessModes.value, [Validators.required]],\n    class: ['{none}', []],\n    extraFields: fb.group({}),\n  });\n\n  if (readonly) {\n    ctrl.disable();\n  }\n\n  return ctrl;\n}\n\nexport function updateVolumeControl(\n  volCtrl: FormGroup,\n  vol: ConfigVolume,\n  readonly = false,\n) {\n  volCtrl.get('name').setValue(vol.name.value);\n  volCtrl.get('type').setValue(vol.type.value);\n  volCtrl.get('size').setValue(configSizeToNumber(vol.size.value));\n  volCtrl.get('mode').setValue(vol.accessModes.value);\n  volCtrl.get('path').setValue(vol.mountPath.value);\n  volCtrl.get('templatedName').setValue(vol.name.value);\n  volCtrl.get('templatedPath').setValue(vol.mountPath.value);\n\n  if (readonly) {\n    volCtrl.disable();\n  }\n}\n\nexport function addDataVolume(\n  formCtrl: FormGroup,\n  vol: ConfigVolume = null,\n  readonly = false,\n) {\n  // If no vol is provided create one with default values\n  if (vol === null) {\n    const l: number = formCtrl.value.datavols.length;\n    const name: string = '{notebook-name}-vol-' + (l + 1);\n\n    vol = {\n      type: {\n        value: 'New',\n      },\n      name: {\n        value: '{notebook-name}-vol-' + (l + 1),\n      },\n      size: {\n        value: '5',\n      },\n      mountPath: {\n        value: '/home/jovyan/{volume-name}',\n      },\n      accessModes: {\n        value: 'ReadWriteOnce',\n      },\n    };\n  }\n\n  // Push it to the control\n  const ctrl = createVolumeControl(vol, readonly);\n  const vols = formCtrl.get('datavols') as FormArray;\n  vols.push(ctrl);\n}\n\nexport function updateGPUControl(formCtrl: FormGroup, gpuConf: any) {\n  // If the backend didn't send the value, default to none\n  if (gpuConf == null) {\n    formCtrl.get('num').setValue('none');\n    return;\n  }\n\n  // Set the values\n  const gpu = gpuConf.value as GPU;\n  formCtrl.get('num').setValue(gpu.num);\n  formCtrl.get('vendor').setValue(gpu.vendor);\n\n  // Don't allow the user to edit them if the admin does not allow it\n  if (gpuConf.readOnly) {\n    formCtrl.get('num').disable();\n    formCtrl.get('vendor').disable();\n  }\n}\n\nexport function calculateLimits(\n  requests: number | string,\n  factor: number | string,\n): string | null {\n  const limit = configSizeToNumber(requests) * configSizeToNumber(factor);\n\n  if (isNaN(limit)) {\n    return null;\n  }\n\n  return limit.toFixed(1);\n}\n\nexport function initCpuFormControls(formCtrl: FormGroup, config: Config) {\n  const cpu = Number(config.cpu.value);\n  if (!isNaN(cpu)) {\n    formCtrl.controls.cpu.setValue(cpu);\n  }\n\n  if (config.cpu.readOnly) {\n    formCtrl.controls.cpu.disable();\n    formCtrl.controls.cpuLimit.disable();\n  }\n\n  formCtrl.controls.cpuLimit.setValue(\n    calculateLimits(cpu, config.cpu.limitFactor),\n  );\n}\n\nexport function initMemoryFormControls(formCtrl: FormGroup, config: Config) {\n  const memory = configSizeToNumber(config.memory.value);\n  if (!isNaN(memory)) {\n    formCtrl.controls.memory.setValue(memory);\n  }\n\n  if (config.memory.readOnly) {\n    formCtrl.controls.memory.disable();\n    formCtrl.controls.memoryLimit.disable();\n  }\n\n  formCtrl.controls.memoryLimit.setValue(\n    calculateLimits(memory, config.memory.limitFactor),\n  );\n}\n\nexport function initFormControls(formCtrl: FormGroup, config: Config) {\n  initCpuFormControls(formCtrl, config);\n\n  initMemoryFormControls(formCtrl, config);\n\n  formCtrl.controls.image.setValue(config.image.value);\n\n  formCtrl.controls.imageGroupOne.setValue(config.imageGroupOne.value);\n\n  formCtrl.controls.imageGroupTwo.setValue(config.imageGroupTwo.value);\n\n  formCtrl.controls.imagePullPolicy.setValue(config.imagePullPolicy.value);\n  if (config.imagePullPolicy.readOnly) {\n    formCtrl.controls.imagePullPolicy.disable();\n  }\n\n  const wsCtrl = formCtrl.get('workspace') as FormGroup;\n  updateVolumeControl(\n    wsCtrl,\n    config.workspaceVolume.value,\n    config.workspaceVolume.readOnly,\n  );\n\n  // Disable the mount path by default\n  const ws = formCtrl.controls.workspace as FormGroup;\n  ws.controls.path.disable();\n\n  // Add the data volumes\n  config.dataVolumes.value.forEach(vol => {\n    // Create a new FormControl to append to the array\n    addDataVolume(formCtrl, vol.value, config.dataVolumes.readOnly);\n  });\n\n  // Affinity\n  formCtrl.controls.affinityConfig.setValue(config.affinityConfig.value);\n  if (config.affinityConfig.readOnly) {\n    formCtrl.controls.affinityConfig.disable();\n  }\n\n  // Tolerations\n  formCtrl.controls.tolerationGroup.setValue(config.tolerationGroup.value);\n  if (config.tolerationGroup.readOnly) {\n    formCtrl.controls.tolerationGroup.disable();\n  }\n\n  // GPUs\n  updateGPUControl(formCtrl.get('gpus') as FormGroup, config.gpus);\n\n  formCtrl.controls.shm.setValue(config.shm.value);\n  if (config.shm.readOnly) {\n    formCtrl.controls.shm.disable();\n  }\n\n  // PodDefaults / Configurations. Set the pre selected labels\n  formCtrl.controls.configurations.setValue(config.configurations.value);\n  if (config.configurations.readOnly) {\n    formCtrl.controls.configurations.disable();\n  }\n}\n\nexport function configSizeToNumber(size: string | number): number {\n  if (size == null) {\n    return NaN;\n  }\n\n  if (typeof size === 'number') {\n    return size;\n  }\n\n  return Number(size.replace('Gi', ''));\n}\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Volume } from 'src/app/types';\nimport { updateNonDirtyControl } from 'kubeflow';\n\n@Component({\n  selector: 'app-volume',\n  templateUrl: './volume.component.html',\n  styleUrls: ['./volume.component.scss'],\n})\nexport class VolumeComponent implements OnInit, OnDestroy {\n  private notebookNamePrv = '';\n  private defaultStorageClassPrv: boolean;\n\n  currentPVC: Volume;\n  existingPVCs: Set<string> = new Set();\n\n  subscriptions = new Subscription();\n\n  // ----- @Input Parameters -----\n  @Input() volume: FormGroup;\n  @Input() namespace: string;\n\n  @Input()\n  get notebookName() {\n    return this.notebookNamePrv;\n  }\n  set notebookName(nm: string) {\n    if (!this.volume.disabled) {\n      this.notebookNameChanged(nm);\n    }\n  }\n\n  @Input()\n  set ephemeral(b: boolean) {\n    if (!this.volume.disabled) {\n      this.storageOptionChanged(b);\n    }\n  }\n\n  @Input()\n  set pvcs(data) {\n    if (!this.volume.disabled) {\n      this.pvcsChanged(data);\n    }\n  }\n\n  @Input()\n  get defaultStorageClass() {\n    return this.defaultStorageClassPrv;\n  }\n  set defaultStorageClass(s: boolean) {\n    // Update the current pvc type\n    this.defaultStorageClassPrv = s;\n\n    if (!this.volume.disabled) {\n      this.updateVolInputFields();\n    }\n  }\n\n  // ----- Get macros -----\n  get selectedVolIsExistingType(): boolean {\n    return (\n      this.existingPVCs.has(this.volume.value.name) || !this.defaultStorageClass\n    );\n  }\n\n  get currentVolName(): string {\n    // Change volume name on notebook-name change, if user hasn't changed it already\n    if (!this.volume.controls.name.dirty) {\n      return this.volume\n        .get('templatedName')\n        .value.replace('{notebook-name}', this.notebookName);\n    } else {\n      return this.volume.get('name').value;\n    }\n  }\n\n  // ----- utility functions -----\n  setVolumeType(type: string) {\n    if (type === 'Existing') {\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n    } else {\n      this.volume.controls.size.enable();\n      this.volume.controls.mode.enable();\n    }\n  }\n\n  updateVolInputFields(): void {\n    // Disable input fields according to volume type\n    if (this.selectedVolIsExistingType) {\n      // Disable all fields\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n      this.volume.controls.type.setValue('Existing');\n    } else {\n      this.volume.controls.size.enable();\n      this.volume.controls.mode.enable();\n      this.volume.controls.type.setValue('New');\n    }\n    // Fix mount point if user hasn't changed it and it's not workspace volume\n    updateNonDirtyControl(\n      this.volume.get('path'),\n      this.volume\n        .get('templatedPath')\n        .value.replace('{volume-name}', this.currentVolName),\n    );\n  }\n\n  // ----- Component Functions -----\n  constructor() {}\n\n  ngOnInit() {\n    // type\n    this.subscriptions.add(\n      this.volume.get('type').valueChanges.subscribe((type: string) => {\n        this.setVolumeType(type);\n      }),\n    );\n\n    // name\n    this.subscriptions.add(\n      this.volume.get('name').valueChanges.subscribe((name: string) => {\n        // Update the fields if the volume is an existing one\n        this.volume.get('name').setValue(name, { emitEvent: false });\n        this.updateVolInputFields();\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  // ----- @Input change handling functions -----\n  notebookNameChanged(nm: string): void {\n    if (this.volume.disabled) {\n      return;\n    }\n\n    this.notebookNamePrv = nm;\n    setTimeout(() => {\n      updateNonDirtyControl(this.volume.controls.name, this.currentVolName);\n    });\n  }\n\n  storageOptionChanged(ephemeral: boolean): void {\n    if (ephemeral) {\n      // Disable all fields\n      this.volume.controls.type.disable();\n      this.volume.controls.name.disable();\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n    } else {\n      this.volume.controls.type.enable();\n      this.volume.controls.name.enable();\n      this.updateVolInputFields();\n    }\n  }\n\n  pvcsChanged(pvcs: Volume[]) {\n    this.existingPVCs.clear();\n    pvcs.map(pvc => this.existingPVCs.add(pvc.name));\n\n    if (!this.existingPVCs.has(this.currentVolName)) {\n      this.updateVolInputFields();\n    } else {\n      // Also set the selected volume\n      this.volume.controls.name.setValue(this.currentVolName);\n    }\n  }\n}\n","<div *ngIf=\"volume\" [formGroup]=\"volume\" class=\"row\">\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"type\">\n    <mat-label i18n>Type</mat-label>\n    <mat-select formControlName=\"type\">\n      <mat-option *ngIf=\"defaultStorageClass\" value=\"New\" i18n>\n        New\n      </mat-option>\n      <mat-option value=\"Existing\" i18n> Existing </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!-- Volume Name Input -->\n  <lib-name-input\n    class=\"column\"\n    [nameControl]=\"volume.get('name')\"\n    id=\"name\"\n  ></lib-name-input>\n\n  <!-- Size Input -->\n  <lib-positive-number-input\n    id=\"size\"\n    class=\"column\"\n    min=\"1\"\n    step=\"1\"\n    [sizeControl]=\"volume.get('size')\"\n    label=\"Size in Gi\"\n    i18n-label\n  ></lib-positive-number-input>\n\n  <!-- Mode Input -->\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"mode\">\n    <mat-label i18n>Mode</mat-label>\n    <mat-select formControlName=\"mode\">\n      <mat-option value=\"ReadWriteOnce\" i18n>ReadWriteOnce</mat-option>\n      <mat-option value=\"ReadOnlyMany\" i18n>ReadOnlyMany </mat-option>\n      <mat-option value=\"ReadWriteMany\" i18n>ReadWriteMany </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!-- Mount Input -->\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"path\">\n    <mat-label i18n>Mount Point</mat-label>\n    <input matInput formControlName=\"path\" />\n  </mat-form-field>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { environment } from '@app/environment';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { Config, Volume, NotebookFormObject } from 'src/app/types';\nimport {\n  NamespaceService,\n  BackendService,\n  SnackBarService,\n  SnackType,\n  getNameError,\n  rokUrlValidator,\n  RokService,\n} from 'kubeflow';\nimport { Router } from '@angular/router';\nimport { getFormDefaults, initFormControls } from '../form-default/utils';\nimport { JWABackendService } from 'src/app/services/backend.service';\nimport { FormDefaultComponent } from '../form-default/form-default.component';\n\n@Component({\n  selector: 'app-form-rok',\n  templateUrl: './form-rok.component.html',\n  styleUrls: [\n    './form-rok.component.scss',\n    '../form-default/form-default.component.scss',\n  ],\n})\nexport class FormRokComponent\n  extends FormDefaultComponent\n  implements OnInit, OnDestroy\n{\n  env = environment;\n\n  constructor(\n    public ns: NamespaceService,\n    public backend: JWABackendService,\n    public router: Router,\n    public popup: SnackBarService,\n    public rok: RokService,\n  ) {\n    super(ns, backend, router, popup);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.rok.initCSRF();\n  }\n\n  // Form handling functions\n  getFormDefaults() {\n    // Init the form\n    const formCtrl: FormGroup = getFormDefaults();\n\n    // Add labUrl control\n    formCtrl.addControl(\n      'environment',\n      new FormControl('', [Validators.required]),\n    );\n\n    // Add the rokUrl control\n    const wsExtras: FormGroup = formCtrl.get(\n      'workspace.extraFields',\n    ) as FormGroup;\n    wsExtras.addControl('rokUrl', new FormControl('', []));\n\n    return formCtrl;\n  }\n\n  initFormControls(formCtrl: FormGroup, config: Config) {\n    // Sets the values from our internal dict. This is an initialization step\n    // that should be only run once\n    initFormControls(formCtrl, config);\n\n    // Handle the Pod environment\n    if (config.environment && config.environment.value) {\n      const envVal = JSON.stringify(config.environment.value);\n      formCtrl.controls.environment.setValue(envVal);\n    } else {\n      formCtrl.controls.environment.setValue('{}');\n    }\n    if (config.environment && config.environment.readOnly) {\n      formCtrl.controls.environment.disable();\n    }\n\n    // Configure workspace control with rokUrl\n    const extraFields: FormGroup = formCtrl\n      .get('workspace')\n      .get('extraFields') as FormGroup;\n    extraFields.addControl('rokUrl', new FormControl('', []));\n\n    // Add rok url control to the data volumes\n    const array = formCtrl.get('datavols') as FormArray;\n    for (let i = 0; i < this.config.dataVolumes.value.length; i++) {\n      const extra = array.at(i).get('extraFields') as FormGroup;\n      extra.addControl('rokUrl', new FormControl('', []));\n    }\n  }\n}\n","<div class=\"center-flex\">\n  <div class=\"form-with-buttons\">\n    <div class=\"form--card-container mat-elevation-z2\">\n      <form novalidate (ngSubmit)=\"onSubmit()\" [formGroup]=\"formCtrl\">\n        <app-rok-jupyter-lab-selector\n          [parentForm]=\"formCtrl\"\n        ></app-rok-jupyter-lab-selector>\n\n        <app-form-name-namespace\n          [parentForm]=\"formCtrl\"\n        ></app-form-name-namespace>\n\n        <app-form-image\n          [parentForm]=\"formCtrl\"\n          [images]=\"config?.image?.options\"\n          [imagesGroupOne]=\"config?.imageGroupOne?.options\"\n          [imagesGroupTwo]=\"config?.imageGroupTwo?.options\"\n          [allowCustomImage]=\"config?.allowCustomImage\"\n        ></app-form-image>\n\n        <app-form-cpu-ram [parentForm]=\"formCtrl\"></app-form-cpu-ram>\n\n        <app-form-gpus\n          [parentForm]=\"formCtrl\"\n          [vendors]=\"config?.gpus?.value.vendors\"\n        ></app-form-gpus>\n\n        <app-rok-form-workspace-volume\n          [parentForm]=\"formCtrl\"\n          [pvcs]=\"pvcs\"\n          [readonly]=\"config?.workspaceVolume?.readOnly\"\n        >\n        </app-rok-form-workspace-volume>\n\n        <app-rok-form-data-volumes\n          [parentForm]=\"formCtrl\"\n          [pvcs]=\"pvcs\"\n          [readonly]=\"config?.dataVolumes?.readOnly\"\n        >\n        </app-rok-form-data-volumes>\n\n        <app-rok-form-configurations\n          [parentForm]=\"formCtrl\"\n        ></app-rok-form-configurations>\n\n        <app-form-affinity-tolerations\n          [parentForm]=\"formCtrl\"\n          [affinityConfigs]=\"config?.affinityConfig?.options\"\n          [tolerationGroups]=\"config?.tolerationGroup?.options\"\n        ></app-form-affinity-tolerations>\n\n        <app-form-advanced-options\n          [parentForm]=\"formCtrl\"\n        ></app-form-advanced-options>\n      </form>\n    </div>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      class=\"form--button-margin\"\n      (click)=\"onSubmit()\"\n      [disabled]=\"!formCtrl.valid || blockSubmit\"\n    >\n      LAUNCH\n    </button>\n\n    <button mat-raised-button type=\"button\" (click)=\"onCancel()\">CANCEL</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FormModule as KfFormModule } from 'kubeflow';\nimport { FormNameComponent } from '../form-default/form-name/form-name.component';\nimport { FormImageComponent } from '../form-default/form-image/form-image.component';\nimport { FormCpuRamComponent } from '../form-default/form-cpu-ram/form-cpu-ram.component';\nimport { FormWorkspaceVolumeComponent } from '../form-default/form-workspace-volume/form-workspace-volume.component';\nimport { FormDataVolumesComponent } from '../form-default/form-data-volumes/form-data-volumes.component';\nimport { VolumeComponent } from '../form-default/volume/volume.component';\nimport { FormGpusComponent } from '../form-default/form-gpus/form-gpus.component';\nimport { FormAdvancedOptionsComponent } from '../form-default/form-advanced-options/form-advanced-options.component';\nimport { FormConfigurationsComponent } from '../form-default/form-configurations/form-configurations.component';\nimport { FormRokComponent } from './form-rok.component';\nimport { FormDefaultModule } from '../form-default/form-default.module';\n\nimport { RokJupyterLabSelectorComponent } from './rok-jupyter-lab-selector/rok-jupyter-lab-selector.component';\nimport { RokVolumeComponent } from './rok-volume/rok-volume.component';\nimport { RokFormWorkspaceVolumeComponent } from './rok-form-workspace-volume/rok-form-workspace-volume.component';\nimport { RokFormDataVolumesComponent } from './rok-form-data-volumes/rok-form-data-volumes.component';\nimport { RokFormConfigurationsComponent } from './rok-form-configurations/rok-form-configurations.component';\n\n@NgModule({\n  declarations: [\n    FormRokComponent,\n    RokJupyterLabSelectorComponent,\n    RokVolumeComponent,\n    RokFormWorkspaceVolumeComponent,\n    RokFormDataVolumesComponent,\n    RokFormConfigurationsComponent,\n  ],\n  imports: [\n    CommonModule,\n    KfFormModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    FormDefaultModule,\n  ],\n  exports: [FormRokComponent],\n})\nexport class FormRokModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormConfigurationsComponent } from '../../form-default/form-configurations/form-configurations.component';\n\n@Component({\n  selector: 'app-rok-form-configurations',\n  templateUrl: './rok-form-configurations.component.html',\n  styleUrls: ['./rok-form-configurations.component.scss'],\n})\nexport class RokFormConfigurationsComponent\n  extends FormConfigurationsComponent\n  implements OnInit, OnDestroy {}\n","<lib-form-section\n  title=\"Configurations\"\n  text=\"\n    Extra layers of configurations that will be applied to the new Notebook.\n    (e.g. Insert credentials as Secrets, set Environment Variables.)\n  \"\n  icon=\"fa:fas:sliders-h\"\n>\n  <!--Pod Defaults-->\n  <mat-form-field class=\"wide\" appearance=\"outline\">\n    <mat-label>Configurations</mat-label>\n    <mat-select [formControl]=\"parentForm.get('configurations')\" multiple>\n      <mat-option *ngFor=\"let config of podDefaults\" [value]=\"config.label\">\n        {{ config.desc }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!--Pod Environment-->\n  <mat-form-field class=\"wide\" appearance=\"outline\">\n    <mat-label>Environment</mat-label>\n    <input\n      matInput\n      placeholder=\"Environment variables in JSON\"\n      [formControl]=\"parentForm.get('environment')\"\n    />\n    <mat-error>Environment is invalid</mat-error>\n  </mat-form-field>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormArray, FormBuilder } from '@angular/forms';\nimport { Volume } from 'src/app/types';\nimport { addRokDataVolume } from '../utils';\n\n@Component({\n  selector: 'app-rok-form-data-volumes',\n  templateUrl: './rok-form-data-volumes.component.html',\n  styleUrls: ['./rok-form-data-volumes.component.scss'],\n})\nexport class RokFormDataVolumesComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n  @Input() readonly: boolean;\n  @Input() pvcs: Volume[];\n  @Input() storageClasses: string[];\n  @Input() token: string;\n\n  get datavols() {\n    const vols = this.parentForm.get('datavols') as FormArray;\n    return vols.controls;\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {}\n\n  addVol() {\n    addRokDataVolume(this.parentForm);\n  }\n\n  deleteVol(idx: number) {\n    const vols = this.parentForm.get('datavols') as FormArray;\n    vols.removeAt(idx);\n    this.parentForm.updateValueAndValidity();\n  }\n}\n","<lib-form-section\n  title=\"Data Volumes\"\n  text=\"\n    Configure the Volumes to be mounted as your Datasets.\n  \"\n  icon=\"fa:fas:hdd\"\n>\n  <button\n    mat-stroked-button\n    class=\"add-data-vol-button\"\n    color=\"accent\"\n    (click)=\"addVol()\"\n    type=\"button\"\n    [disabled]=\"readonly\"\n  >\n    <mat-icon>add</mat-icon>ADD VOLUME\n  </button>\n\n  <div *ngFor=\"let vol of datavols; let i = index\" class=\"volume-wrapper\">\n    <app-rok-volume\n      [volume]=\"vol\"\n      [notebookName]=\"parentForm.get('name').value\"\n      [namespace]=\"parentForm.get('namespace').value\"\n      [pvcs]=\"pvcs\"\n      [ephemeral]=\"false\"\n      [storageClasses]=\"storageClasses\"\n    >\n    </app-rok-volume>\n\n    <div class=\"del-btn\">\n      <button\n        mat-icon-button\n        color=\"warn\"\n        (click)=\"deleteVol(i)\"\n        type=\"button\"\n        [disabled]=\"readonly\"\n      >\n        <mat-icon>delete</mat-icon>\n      </button>\n    </div>\n  </div>\n</lib-form-section>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Volume } from 'src/app/types';\nimport { SnackBarService, SnackType } from 'kubeflow';\n\n@Component({\n  selector: 'app-rok-form-workspace-volume',\n  templateUrl: './rok-form-workspace-volume.component.html',\n  styleUrls: ['./rok-form-workspace-volume.component.scss'],\n})\nexport class RokFormWorkspaceVolumeComponent implements OnInit, OnDestroy {\n  subscriptions = new Subscription();\n\n  @Input() parentForm: FormGroup;\n  @Input() readonly: boolean;\n  @Input() pvcs: Volume[];\n  @Input() storageClasses: string[];\n  @Input() token: string;\n\n  constructor(private snackBar: SnackBarService) {}\n\n  ngOnInit() {\n    // Show a warning if no persistent storage is provided\n    this.subscriptions.add(\n      this.parentForm\n        .get('noWorkspace')\n        .valueChanges.subscribe((b: boolean) => {\n          // close the snackbar if deselected\n          if (!b) {\n            this.snackBar.close();\n          } else {\n            const msg =\n              'Your workspace will not be persistent. You will lose all ' +\n              'data in it, if your notebook is terminated for any reason.';\n            this.snackBar.open(msg, SnackType.Warning, 0);\n          }\n        }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<lib-form-section\n  title=\"Workspace Volume\"\n  text=\"\n    Configure the Volume to be mounted as your personal Workspace.\n  \"\n  icon=\"fa:fas:laptop-code\"\n>\n  <mat-checkbox [formControl]=\"parentForm.get('noWorkspace')\">\n    Don't use Persistent Storage for User's home\n  </mat-checkbox>\n\n  <app-rok-volume\n    [volume]=\"parentForm.get('workspace')\"\n    [notebookName]=\"parentForm.value.name\"\n    [pvcs]=\"pvcs\"\n    [ephemeral]=\"parentForm.value.noWorkspace\"\n    [namespace]=\"parentForm.value.namespace\"\n    [storageClasses]=\"storageClasses\"\n  >\n  </app-rok-volume>\n</lib-form-section>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { environment } from '@app/environment';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport {\n  rokUrlValidator,\n  RokService,\n  SnackBarService,\n  SnackType,\n} from 'kubeflow';\nimport { JupyterLab, emptyJupyterLab } from '../types';\nimport { emptyVolume, Volume } from 'src/app/types';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport {\n  addRokDataVolume,\n  getJupyterLabFromRokURL,\n  setLabValues,\n  setVolumeValues,\n  getVolumeFromRokURL,\n} from '../utils';\n\n@Component({\n  selector: 'app-rok-jupyter-lab-selector',\n  templateUrl: './rok-jupyter-lab-selector.component.html',\n  styleUrls: ['./rok-jupyter-lab-selector.component.scss'],\n})\nexport class RokJupyterLabSelectorComponent implements OnInit {\n  @Input() parentForm: FormGroup;\n\n  env = environment;\n  ctrl = new FormControl('', [], [rokUrlValidator(this.rok)]);\n\n  constructor(public rok: RokService, public popup: SnackBarService) {}\n\n  ngOnInit() {}\n\n  labAutofillClicked(url: string) {\n    getJupyterLabFromRokURL(url, this.rok).subscribe(lab => {\n      setLabValues(lab, this.parentForm);\n\n      // Autofill the workspace volume\n      const wsUrl = this.parentForm.get('workspace.extraFields.rokUrl').value;\n      getVolumeFromRokURL(wsUrl, this.rok).subscribe(vol => {\n        setVolumeValues(vol, this.parentForm.get('workspace'));\n      });\n\n      // Autofill the data volumes\n      const dataVols = this.parentForm.get('datavols') as FormArray;\n      for (const volCtrl of dataVols.controls) {\n        const volUrl = volCtrl.get('extraFields.rokUrl').value;\n        getVolumeFromRokURL(volUrl, this.rok).subscribe(vol => {\n          setVolumeValues(vol, volCtrl);\n        });\n      }\n\n      this.popup.open(\n        'Successfully retrieved details from Rok Jupyter Lab URL',\n        SnackType.Success,\n        4000,\n      );\n    });\n  }\n}\n","<lib-form-section\n  title=\"Rok JupyterLab URL\"\n  text=\"\n    Load an existing Jupyter Lab by providing a valid Rok URL.\n  \"\n  icon=\"fa:fas:link\"\n>\n  <lib-rok-url-input [control]=\"ctrl\" (urlEntered)=\"labAutofillClicked($event)\">\n  </lib-rok-url-input>\n</lib-form-section>\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnDestroy,\n  HostListener,\n} from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { first, debounceTime, map } from 'rxjs/operators';\nimport { Volume, emptyVolume } from 'src/app/types';\nimport { RokService, rokUrlValidator, updateNonDirtyControl } from 'kubeflow';\nimport { environment } from '@app/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport { getVolumeFromRokURL, setVolumeValues } from '../utils';\n\n@Component({\n  selector: 'app-rok-volume',\n  templateUrl: './rok-volume.component.html',\n  styleUrls: ['./rok-volume.component.scss'],\n})\nexport class RokVolumeComponent implements OnInit, OnDestroy {\n  private nbName = '';\n  private origin = window.location.origin;\n  private chooserId;\n  private popupChooser;\n\n  env = environment;\n  newPVC: Volume;\n  existingPVCs: Volume[] = [];\n  readOnly = false;\n  subscriptions = new Subscription();\n\n  // ----- @Input Parameters -----\n  @Input() volume: FormGroup;\n\n  @Input()\n  get notebookName() {\n    return this.nbName;\n  }\n  set notebookName(nm: string) {\n    if (!this.volume.disabled) {\n      this.notebookNameChanged(nm);\n    }\n  }\n\n  @Input()\n  set ephemeral(b: boolean) {\n    if (!this.volume.disabled) {\n      this.storageOptionChanged(b);\n    }\n  }\n\n  @Input() pvcs: Volume[];\n  @Input() namespace: string;\n  @Input() storageClasses: string[] = [];\n  @Input() token: string;\n\n  // ----- Get macros -----\n  get selectedVolIsExistingType(): boolean {\n    return this.volume.value.type === 'Existing';\n  }\n\n  get currentVolName(): string {\n    // Change volume name on notebook-name change, if user hasn't changed it already\n    if (!this.volume.get('name').dirty) {\n      return this.volume\n        .get('templatedName')\n        .value.replace('{notebook-name}', this.notebookName || '');\n    } else {\n      return this.volume.get('name').value;\n    }\n  }\n\n  // ----- utility functions -----\n  updateVolPath(): void {\n    // Change volume path on volume-name change, if user hasn't changed it already\n    updateNonDirtyControl(\n      this.volume.get('path'),\n      this.volume\n        .get('templatedPath')\n        .value.replace('{volume-name}', this.currentVolName),\n    );\n  }\n\n  updateVolType(type): void {\n    const rokUrl = this.volume.get('extraFields.rokUrl');\n    if (type === 'Existing') {\n      // Enable rokUrl\n      rokUrl.setValidators(Validators.required);\n      rokUrl.setAsyncValidators(rokUrlValidator(this.rok));\n      rokUrl.enable();\n    } else {\n      rokUrl.setValidators([]);\n      rokUrl.setAsyncValidators([]);\n      rokUrl.disable();\n    }\n  }\n\n  autofillVolume(url: string) {\n    getVolumeFromRokURL(url, this.rok).subscribe(vol => {\n      setVolumeValues(vol, this.volume);\n    });\n  }\n\n  // ----- Component Functions -----\n  constructor(private rok: RokService) {}\n\n  ngOnInit() {\n    // type\n    this.subscriptions.add(\n      this.volume.get('type').valueChanges.subscribe((type: string) => {\n        this.updateVolType(type);\n      }),\n    );\n    // name\n    this.subscriptions.add(\n      this.volume.get('name').valueChanges.subscribe((name: string) => {\n        this.volume.get('name').setValue(name, { emitEvent: false });\n        // Fix mount point if user hasn't changed it and it's not workspace volume\n        this.updateVolPath();\n      }),\n    );\n\n    this.updateVolPath();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  // ----- @Input change handling functions -----\n  notebookNameChanged(nm: string): void {\n    if (this.volume.disabled) {\n      return;\n    }\n\n    this.nbName = nm;\n    setTimeout(() => {\n      updateNonDirtyControl(this.volume.get('name'), this.currentVolName);\n    });\n  }\n\n  storageOptionChanged(ephemeral: boolean): void {\n    if (ephemeral) {\n      // Disable all fields\n      this.volume.controls.type.disable();\n      this.volume.controls.extraFields.get('rokUrl').disable();\n      this.volume.controls.name.disable();\n      this.volume.controls.size.disable();\n      this.volume.controls.mode.disable();\n    } else if (!ephemeral && !this.selectedVolIsExistingType) {\n      // New\n      this.volume.controls.type.enable();\n      this.volume.controls.name.enable();\n      this.volume.controls.size.enable();\n      this.volume.controls.mode.enable();\n      this.volume.controls.extraFields.get('rokUrl').disable();\n    } else {\n      // Existing\n      this.volume.controls.extraFields.get('rokUrl').enable();\n    }\n  }\n}\n","<div *ngIf=\"volume\" [formGroup]=\"volume\" class=\"row\">\n  <!--Type-->\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"type\">\n    <mat-label>Type</mat-label>\n    <mat-select formControlName=\"type\">\n      <mat-option value=\"New\">New</mat-option>\n      <mat-option value=\"Existing\">Existing</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!--Rok URL-->\n  <lib-rok-url-input\n    class=\"column\"\n    id=\"rokUrl\"\n    mode=\"file\"\n    [control]=\"volume.get('extraFields.rokUrl')\"\n    (urlPasted)=\"autofillVolume($event)\"\n    (urlEntered)=\"autofillVolume($event)\"\n  ></lib-rok-url-input>\n\n  <!-- Volume Name Input -->\n  <lib-name-input\n    class=\"column\"\n    [nameControl]=\"volume.get('name')\"\n    id=\"name\"\n  ></lib-name-input>\n\n  <!-- Size Input -->\n  <lib-positive-number-input\n    id=\"size\"\n    class=\"column\"\n    min=\"1\"\n    step=\"1\"\n    [sizeControl]=\"volume.get('size')\"\n    label=\"Size in Gi\"\n  ></lib-positive-number-input>\n\n  <!-- Mount Input -->\n  <mat-form-field class=\"column\" appearance=\"outline\" id=\"path\">\n    <mat-label>Mount Point</mat-label>\n    <input matInput formControlName=\"path\" />\n  </mat-form-field>\n</div>\n","import { Volume } from '../../../types';\n\nexport interface JupyterLab {\n  namespace: string;\n  images: string[];\n  image: string;\n  cpu: string | number;\n  memory: string | number;\n  workspace?: Volume;\n  datavols?: Volume[];\n  extra?: string;\n  environment?: any;\n}\n\nexport function emptyJupyterLab(): JupyterLab {\n  return {\n    namespace: '',\n    images: [],\n    image: '',\n    cpu: '',\n    memory: '',\n    workspace: {\n      type: '',\n      name: '',\n      size: 1,\n      path: '',\n      mode: '',\n      extraFields: {},\n    },\n    datavols: [],\n    extra: '{}',\n  };\n}\n","import { ConfigVolume, Volume, emptyVolume } from 'src/app/types';\nimport { createVolumeControl } from '../form-default/utils';\nimport {\n  FormGroup,\n  FormControl,\n  FormArray,\n  AbstractControl,\n} from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport {\n  RokService,\n  updateNonDirtyControl,\n  updateControlNonNullValue,\n} from 'kubeflow';\nimport { JupyterLab, emptyJupyterLab } from './types';\n\nexport function createRokVolumeControl(vol: ConfigVolume) {\n  const volCtrl = createVolumeControl(vol);\n\n  // Set the rokUrl in extraFields\n  const extraFields: FormGroup = volCtrl.get('extraFields') as FormGroup;\n  extraFields.addControl('rokUrl', new FormControl('', []));\n  extraFields.disable();\n\n  return volCtrl;\n}\n\nexport function addRokDataVolume(\n  formCtrl: AbstractControl,\n  vol: ConfigVolume = null,\n) {\n  // If no vol is provided create one with default values\n  if (vol === null) {\n    const l: number = formCtrl.value.datavols.length;\n    const name: string = '{notebook-name}-vol-' + (l + 1);\n\n    vol = {\n      type: {\n        value: 'New',\n      },\n      name: {\n        value: name,\n      },\n      size: {\n        value: '5',\n      },\n      mountPath: {\n        value: '/home/jovyan/{volume-name}',\n      },\n      accessModes: {\n        value: 'ReadWriteOnce',\n      },\n    };\n  }\n\n  // Push it to the control\n  const vols = formCtrl.get('datavols') as FormArray;\n  vols.push(createRokVolumeControl(vol));\n}\n\n// Functions to create Autofilled Rok Objects\nexport function getJupyterLabFromRokURL(\n  url: string,\n  rok: RokService,\n): Observable<JupyterLab> {\n  return rok.getObjectMetadata(url).pipe(\n    map((headers: HttpHeaders) => {\n      const notebook: JupyterLab = emptyJupyterLab();\n\n      // Fill the notebook with the info from the response\n      notebook.namespace = headers.get('X-Object-Meta-namespace');\n      notebook.image = headers.get('X-Object-Meta-image');\n\n      // Convert CPU to number\n      notebook.cpu = headers.get('X-Object-Meta-cpu');\n      if (typeof notebook.cpu === 'number') {\n      } else if (notebook.cpu.includes('m')) {\n        const cpu = parseInt(notebook.cpu.replace('m', ''), 10);\n        notebook.cpu = cpu / 1000;\n      }\n\n      // Convert memory to Gi\n      const memory = headers.get('X-Object-Meta-memory');\n      if (memory.includes('G')) {\n        notebook.memory = parseInt(memory.replace('G', ''), 10);\n      } else if (memory.includes('M')) {\n        notebook.memory = parseInt(memory.replace('M', ''), 10) / 1000;\n      } else {\n        notebook.memory = parseInt(memory, 10);\n      }\n\n      notebook.environment = headers.get('X-Object-Meta-environment');\n\n      // Workspace Volume\n      const workspaceRokUrl = headers.get('X-Object-Group-Member-0-URL');\n      notebook.workspace.extraFields = {\n        // rokUrl: baseUrl + obj + '?version=' + version,\n        rokUrl: workspaceRokUrl,\n      };\n\n      // Data Volumes\n      const volsNum = headers.get('X-Object-Group-Member-Count');\n      for (let i = 1; i < parseInt(volsNum, 10); i++) {\n        const volRokUrl = headers.get('X-Object-Group-Member-' + i + '-URL');\n\n        const vol = emptyVolume();\n        vol.extraFields = {\n          // rokUrl: baseUrl + obj + '?version=' + version,\n          rokUrl: volRokUrl,\n        };\n        notebook.datavols.push(vol);\n      }\n\n      return notebook;\n    }),\n  );\n}\n\nexport function getVolumeFromRokURL(\n  url: string,\n  rok: RokService,\n): Observable<Volume> {\n  return rok.getObjectMetadata(url).pipe(\n    map((headers: HttpHeaders) => {\n      console.log(`Creating volume object from return metadata`);\n\n      const volume: Volume = emptyVolume();\n\n      // Fill the notebook with the info from the response\n      volume.name = headers.get('X-Object-Meta-dataset');\n      if (volume.name === null) {\n        volume.name = headers.get('X-Object-Meta-workspace');\n      }\n\n      const size = parseInt(headers.get('Content-Length'), 10);\n      volume.size = size / Math.pow(1024, 3);\n\n      volume.path = headers.get('X-Object-Meta-mountpoint');\n\n      console.log(`Created volume object: ${JSON.stringify(volume)}`);\n      return volume;\n    }),\n  );\n}\n\n// Functions for autofilling control values\nexport function setLabValues(lab: JupyterLab, formCtrl: AbstractControl) {\n  console.log(\n    `Setting Jupyter Lab form values based on object: ${JSON.stringify(lab)}`,\n  );\n\n  formCtrl.get('customImage').setValue(lab.image);\n  formCtrl.get('customImageCheck').setValue(true);\n  formCtrl.get('cpu').setValue(lab.cpu);\n  formCtrl.get('memory').setValue(lab.memory);\n\n  // Change env only if it exists\n  if (lab.environment !== null) {\n    formCtrl.get('environment').setValue(lab.environment);\n  }\n\n  // Set the workspace volume\n  formCtrl\n    .get('workspace')\n    .get('extraFields')\n    .get('rokUrl')\n    .setValue(lab.workspace.extraFields.rokUrl);\n  formCtrl.get('workspace').get('type').setValue('Existing');\n\n  // Clear the existing Data Volumes array\n  const dataVols = formCtrl.get('datavols') as FormArray;\n  while (dataVols.length !== 0) {\n    dataVols.removeAt(0);\n  }\n\n  for (const vol of lab.datavols) {\n    addRokDataVolume(formCtrl);\n  }\n\n  // Set each volume to existing type\n  const volsArr = formCtrl.get('datavols') as FormArray;\n  for (let i = 0; i < lab.datavols.length; i++) {\n    volsArr\n      .at(i)\n      .get('extraFields')\n      .get('rokUrl')\n      .setValue(lab.datavols[i].extraFields.rokUrl);\n\n    volsArr.at(i).get('type').setValue('Existing');\n  }\n}\n\nexport function setVolumeValues(vol: Volume, volCtrl: AbstractControl) {\n  console.log(\n    `Setting Volume form values based on object: ${JSON.stringify(vol)}`,\n  );\n\n  const volProps = { size: vol.size, name: vol.name, path: vol.path };\n\n  for (const prop in volProps) {\n    if (volProps.hasOwnProperty(prop)) {\n      updateControlNonNullValue(\n        volCtrl.get(prop),\n        volProps[prop],\n        `Provided volume has null value for property '${prop}'. ` +\n          `Will NOT override the current value.`,\n      );\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '@app/environment';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent implements OnInit {\n  env = environment;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-form-default *ngIf=\"env.ui === 'default'\"></app-form-default>\n<app-form-rok *ngIf=\"env.ui === 'rok'\"></app-form-rok>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FormDefaultModule } from './form-default/form-default.module';\nimport { FormComponent } from './form.component';\nimport { FormRokComponent } from './form-rok/form-rok.component';\n\nimport {\n  FormModule as KfFormModule,\n  ImmediateErrorStateMatcher,\n} from 'kubeflow';\nimport { FormRokModule } from './form-rok/form-rok.module';\n\n@NgModule({\n  declarations: [FormComponent],\n  imports: [CommonModule, FormDefaultModule, FormRokModule],\n  providers: [\n    { provide: ErrorStateMatcher, useClass: ImmediateErrorStateMatcher },\n  ],\n})\nexport class FormModule {}\n","import {\n  PropertyValue,\n  StatusValue,\n  ActionListValue,\n  ActionIconValue,\n  ActionButtonValue,\n  TRUNCATE_TEXT_SIZE,\n  MenuValue,\n  DialogConfig,\n  ComponentValue,\n} from 'kubeflow';\nimport { ServerTypeComponent } from './server-type/server-type.component';\n\n// --- Configs for the Confirm Dialogs ---\nexport function getDeleteDialogConfig(name: string): DialogConfig {\n  return {\n    title: $localize`Are you sure you want to delete this notebook server? ${name}`,\n    message: $localize`Warning: Your data might be lost if the notebook server\n                       is not backed by persistent storage`,\n    accept: $localize`DELETE`,\n    confirmColor: 'warn',\n    cancel: $localize`CANCEL`,\n    error: '',\n    applying: $localize`DELETING`,\n    width: '600px',\n  };\n}\n\nexport function getStopDialogConfig(name: string): DialogConfig {\n  return {\n    title: $localize`Are you sure you want to stop this notebook server? ${name}`,\n    message: $localize`Warning: Your data might be lost if the notebook server\n                       is not backed by persistent storage.`,\n    accept: $localize`STOP`,\n    confirmColor: 'primary',\n    cancel: $localize`CANCEL`,\n    error: '',\n    applying: $localize`STOPPING`,\n    width: '600px',\n  };\n}\n\n// --- Config for the Resource Table ---\nexport const defaultConfig = {\n  title: $localize`Notebooks`,\n  newButtonText: $localize`NEW NOTEBOOK`,\n  columns: [\n    {\n      matHeaderCellDef: $localize`Status`,\n      matColumnDef: 'status',\n      value: new StatusValue(),\n    },\n    {\n      matHeaderCellDef: $localize`Name`,\n      matColumnDef: 'name',\n      value: new PropertyValue({\n        field: 'name',\n        truncate: TRUNCATE_TEXT_SIZE.SMALL,\n        tooltipField: 'name',\n      }),\n    },\n    {\n      matHeaderCellDef: $localize`Type`,\n      matColumnDef: 'type',\n      value: new ComponentValue({\n        component: ServerTypeComponent,\n      }),\n    },\n    {\n      matHeaderCellDef: $localize`Age`,\n      matColumnDef: 'age',\n      value: new PropertyValue({ field: 'age' }),\n    },\n    {\n      matHeaderCellDef: $localize`Image`,\n      matColumnDef: 'image',\n      value: new PropertyValue({\n        field: 'shortImage',\n        tooltipField: 'image',\n        truncate: TRUNCATE_TEXT_SIZE.MEDIUM,\n      }),\n    },\n    {\n      matHeaderCellDef: $localize`GPUs`,\n      matColumnDef: 'gpus',\n      value: new PropertyValue({\n        field: 'gpus.count',\n        tooltipField: 'gpus.message',\n      }),\n    },\n    {\n      matHeaderCellDef: $localize`CPUs`,\n      matColumnDef: 'cpu',\n      value: new PropertyValue({ field: 'cpu' }),\n    },\n    {\n      matHeaderCellDef: $localize`Memory`,\n      matColumnDef: 'memory',\n      value: new PropertyValue({ field: 'memory' }),\n    },\n    {\n      matHeaderCellDef: $localize`Volumes`,\n      matColumnDef: 'volumes',\n      value: new MenuValue({ field: 'volumes', itemsIcon: 'storage' }),\n    },\n\n    {\n      matHeaderCellDef: '',\n      matColumnDef: 'actions',\n      value: new ActionListValue([\n        new ActionButtonValue({\n          name: 'connect',\n          tooltip: $localize`Connect to this notebook server`,\n          color: 'primary',\n          field: 'connectAction',\n          text: $localize`CONNECT`,\n        }),\n        new ActionIconValue({\n          name: 'start-stop',\n          tooltipInit: $localize`Stop this notebook server`,\n          tooltipReady: $localize`Start this notebook server`,\n          color: '',\n          field: 'startStopAction',\n          iconInit: 'material:stop',\n          iconReady: 'material:play_arrow',\n        }),\n        new ActionIconValue({\n          name: 'delete',\n          tooltip: $localize`Delete this notebook server`,\n          color: '',\n          field: 'deleteAction',\n          iconReady: 'material:delete',\n        }),\n      ]),\n    },\n  ],\n};\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { environment } from '@app/environment';\nimport {\n  NamespaceService,\n  ExponentialBackoff,\n  ActionEvent,\n  STATUS_TYPE,\n  DialogConfig,\n  ConfirmDialogService,\n  SnackBarService,\n  DIALOG_RESP,\n  SnackType,\n} from 'kubeflow';\nimport { JWABackendService } from 'src/app/services/backend.service';\nimport { Subscription } from 'rxjs';\nimport {\n  defaultConfig,\n  getDeleteDialogConfig,\n  getStopDialogConfig,\n} from './config';\nimport { isEqual } from 'lodash';\nimport { NotebookResponseObject, NotebookProcessedObject } from 'src/app/types';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-index-default',\n  templateUrl: './index-default.component.html',\n  styleUrls: ['./index-default.component.scss'],\n})\nexport class IndexDefaultComponent implements OnInit, OnDestroy {\n  env = environment;\n  poller: ExponentialBackoff;\n\n  currNamespace = '';\n  subs = new Subscription();\n\n  config = defaultConfig;\n  rawData: NotebookResponseObject[] = [];\n  processedData: NotebookProcessedObject[] = [];\n\n  constructor(\n    public ns: NamespaceService,\n    public backend: JWABackendService,\n    public confirmDialog: ConfirmDialogService,\n    public snackBar: SnackBarService,\n    public router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.poller = new ExponentialBackoff({ interval: 1000, retries: 3 });\n\n    // Poll for new data and reset the poller if different data is found\n    this.subs.add(\n      this.poller.start().subscribe(() => {\n        if (!this.currNamespace) {\n          return;\n        }\n\n        this.backend.getNotebooks(this.currNamespace).subscribe(notebooks => {\n          if (!isEqual(this.rawData, notebooks)) {\n            this.rawData = notebooks;\n\n            // Update the frontend's state\n            this.processedData = this.processIncomingData(notebooks);\n            this.poller.reset();\n          }\n        });\n      }),\n    );\n\n    // Reset the poller whenever the selected namespace changes\n    this.subs.add(\n      this.ns.getSelectedNamespace().subscribe(ns => {\n        this.currNamespace = ns;\n        this.poller.reset();\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n    this.poller.stop();\n  }\n\n  // Event handling functions\n  reactToAction(a: ActionEvent) {\n    switch (a.action) {\n      case 'newResourceButton': // TODO: could also use enums here\n        this.newResourceClicked();\n        break;\n      case 'delete':\n        this.deleteVolumeClicked(a.data);\n        break;\n      case 'connect':\n        this.connectClicked(a.data);\n        break;\n      case 'start-stop':\n        this.startStopClicked(a.data);\n        break;\n    }\n  }\n\n  public newResourceClicked() {\n    // Redirect to form page\n    this.router.navigate(['/new']);\n  }\n\n  public deleteVolumeClicked(notebook: NotebookProcessedObject) {\n    const deleteDialogConfig = getDeleteDialogConfig(notebook.name);\n\n    const ref = this.confirmDialog.open(notebook.name, deleteDialogConfig);\n    const delSub = ref.componentInstance.applying$.subscribe(applying => {\n      if (!applying) {\n        return;\n      }\n\n      // Close the open dialog only if the DELETE request succeeded\n      this.backend.deleteNotebook(this.currNamespace, notebook.name).subscribe({\n        next: _ => {\n          this.poller.reset();\n          ref.close(DIALOG_RESP.ACCEPT);\n        },\n        error: err => {\n          const errorMsg = err;\n          deleteDialogConfig.error = errorMsg;\n          ref.componentInstance.applying$.next(false);\n        },\n      });\n\n      // DELETE request has succeeded\n      ref.afterClosed().subscribe(res => {\n        delSub.unsubscribe();\n        if (res !== DIALOG_RESP.ACCEPT) {\n          return;\n        }\n\n        notebook.status.phase = STATUS_TYPE.TERMINATING;\n        notebook.status.message = 'Preparing to delete the Notebook...';\n        this.updateNotebookFields(notebook);\n      });\n    });\n  }\n\n  public connectClicked(notebook: NotebookProcessedObject) {\n      window.open(`/notebook/${notebook.namespace}/${notebook.name}/?server=${notebook.serverType}`);\n  }\n\n  public startStopClicked(notebook: NotebookProcessedObject) {\n    if (notebook.status.phase === STATUS_TYPE.STOPPED) {\n      this.startNotebook(notebook);\n    } else {\n      this.stopNotebook(notebook);\n    }\n  }\n\n  public startNotebook(notebook: NotebookProcessedObject) {\n    this.snackBar.open(\n      $localize`Starting Notebook server '${notebook.name}'...`,\n      SnackType.Info,\n      3000,\n    );\n\n    notebook.status.phase = STATUS_TYPE.WAITING;\n    notebook.status.message = 'Starting the Notebook Server...';\n    this.updateNotebookFields(notebook);\n\n    this.backend.startNotebook(notebook).subscribe(() => {\n      this.poller.reset();\n    });\n  }\n\n  public stopNotebook(notebook: NotebookProcessedObject) {\n    const stopDialogConfig = getStopDialogConfig(notebook.name);\n    const ref = this.confirmDialog.open(notebook.name, stopDialogConfig);\n    const stopSub = ref.componentInstance.applying$.subscribe(applying => {\n      if (!applying) {\n        return;\n      }\n\n      // Close the open dialog only if the request succeeded\n      this.backend.stopNotebook(notebook).subscribe({\n        next: _ => {\n          this.poller.reset();\n          ref.close(DIALOG_RESP.ACCEPT);\n        },\n        error: err => {\n          const errorMsg = err;\n          stopDialogConfig.error = errorMsg;\n          ref.componentInstance.applying$.next(false);\n        },\n      });\n\n      // request has succeeded\n      ref.afterClosed().subscribe(res => {\n        stopSub.unsubscribe();\n        if (res !== DIALOG_RESP.ACCEPT) {\n          return;\n        }\n\n        this.snackBar.open(\n          $localize`Stopping Notebook server '${notebook.name}'...`,\n          SnackType.Info,\n          3000,\n        );\n\n        notebook.status.phase = STATUS_TYPE.TERMINATING;\n        notebook.status.message = 'Preparing to stop the Notebook Server...';\n        this.updateNotebookFields(notebook);\n      });\n    });\n  }\n\n  // Data processing functions\n  updateNotebookFields(notebook: NotebookProcessedObject) {\n    notebook.deleteAction = this.processDeletionActionStatus(notebook);\n    notebook.connectAction = this.processConnectActionStatus(notebook);\n    notebook.startStopAction = this.processStartStopActionStatus(notebook);\n  }\n\n  processIncomingData(notebooks: NotebookResponseObject[]) {\n    const notebooksCopy = JSON.parse(\n      JSON.stringify(notebooks),\n    ) as NotebookProcessedObject[];\n\n    for (const nb of notebooksCopy) {\n      this.updateNotebookFields(nb);\n    }\n    return notebooksCopy;\n  }\n\n  // Action handling functions\n  processDeletionActionStatus(notebook: NotebookProcessedObject) {\n    if (notebook.status.phase !== STATUS_TYPE.TERMINATING) {\n      return STATUS_TYPE.READY;\n    }\n\n    return STATUS_TYPE.TERMINATING;\n  }\n\n  processStartStopActionStatus(notebook: NotebookProcessedObject) {\n    // Stop button\n    if (notebook.status.phase === STATUS_TYPE.READY) {\n      return STATUS_TYPE.UNINITIALIZED;\n    }\n\n    // Start button\n    if (notebook.status.phase === STATUS_TYPE.STOPPED) {\n      return STATUS_TYPE.READY;\n    }\n\n    // If it is terminating, then the action should be disabled\n    if (notebook.status.phase === STATUS_TYPE.TERMINATING) {\n      return STATUS_TYPE.UNAVAILABLE;\n    }\n\n    // If the Notebook is not Terminating, then always allow the stop action\n    return STATUS_TYPE.UNINITIALIZED;\n  }\n\n  processConnectActionStatus(notebook: NotebookProcessedObject) {\n    if (notebook.status.phase !== STATUS_TYPE.READY) {\n      return STATUS_TYPE.UNAVAILABLE;\n    }\n\n    return STATUS_TYPE.READY;\n  }\n\n  public notebookTrackByFn(index: number, notebook: NotebookProcessedObject) {\n    return `${notebook.name}/${notebook.image}`;\n  }\n}\n","<lib-namespace-select *ngIf=\"!env.production\"></lib-namespace-select>\n\n<lib-resource-table\n  [config]=\"config\"\n  [data]=\"processedData\"\n  [trackByFn]=\"notebookTrackByFn\"\n  (actionsEmitter)=\"reactToAction($event)\"\n></lib-resource-table>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IndexDefaultComponent } from './index-default.component';\nimport {\n  ResourceTableModule,\n  NamespaceSelectModule,\n  ConfirmDialogModule,\n} from 'kubeflow';\n\n@NgModule({\n  declarations: [IndexDefaultComponent],\n  imports: [\n    CommonModule,\n    ResourceTableModule,\n    NamespaceSelectModule,\n    ConfirmDialogModule,\n  ],\n  exports: [IndexDefaultComponent],\n})\nexport class IndexDefaultModule {}\n","import { Component } from '@angular/core';\nimport { TableColumnComponent } from 'kubeflow/lib/resource-table/component-value/component-value.component';\nimport { NotebookProcessedObject } from 'src/app/types';\nimport { environment } from '@app/environment';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-server-type',\n  templateUrl: './server-type.component.html',\n  styleUrls: ['./server-type.component.scss'],\n})\nexport class ServerTypeComponent implements TableColumnComponent {\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'jupyterlab-icon',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.jupyterIcon),\n    );\n    iconRegistry.addSvgIcon(\n      'group-one-icon',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.groupOneIcon),\n    );\n    iconRegistry.addSvgIcon(\n      'group-two-icon',\n      sanitizer.bypassSecurityTrustResourceUrl(environment.groupTwoIcon),\n    );\n  }\n\n  notebookServerType: string;\n\n  set element(notebook: NotebookProcessedObject) {\n    this.notebookServerType = notebook.serverType;\n  }\n}\n","<mat-icon\n  *ngIf=\"notebookServerType === 'jupyter'\"\n  svgIcon=\"jupyterlab-icon\"\n  aria-hidden=\"false\"\n  aria-label=\"JupyterLab based server\"\n></mat-icon>\n<mat-icon\n  *ngIf=\"notebookServerType === 'group-one'\"\n  svgIcon=\"group-one-icon\"\n  aria-hidden=\"false\"\n  aria-label=\"Group One based server\"\n></mat-icon>\n<mat-icon\n  *ngIf=\"notebookServerType === 'group-two'\"\n  svgIcon=\"group-two-icon\"\n  aria-hidden=\"false\"\n  aria-label=\"Group Two based server\"\n></mat-icon>\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '@app/environment';\nimport {\n  RokService,\n  NamespaceService,\n  SnackBarService,\n  ConfirmDialogService,\n} from 'kubeflow';\nimport { JWABackendService } from 'src/app/services/backend.service';\nimport { Router } from '@angular/router';\nimport { IndexDefaultComponent } from '../index-default/index-default.component';\n\n@Component({\n  selector: 'app-index-rok',\n  templateUrl: '../index-default/index-default.component.html',\n  styleUrls: ['../index-default/index-default.component.scss'],\n})\nexport class IndexRokComponent extends IndexDefaultComponent implements OnInit {\n  constructor(\n    private rok: RokService,\n    public ns: NamespaceService,\n    public backend: JWABackendService,\n    public confirmDialog: ConfirmDialogService,\n    public popup: SnackBarService,\n    public router: Router,\n  ) {\n    super(ns, backend, confirmDialog, popup, router);\n\n    this.rok.initCSRF();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IndexRokComponent } from './index-rok.component';\nimport { IndexDefaultComponent } from '../index-default/index-default.component';\nimport {\n  ResourceTableModule,\n  NamespaceSelectModule,\n  ConfirmDialogModule,\n} from 'kubeflow';\nimport { IndexDefaultModule } from '../index-default/index-default.module';\n\n@NgModule({\n  declarations: [IndexRokComponent],\n  imports: [\n    CommonModule,\n    ResourceTableModule,\n    NamespaceSelectModule,\n    ConfirmDialogModule,\n    IndexDefaultModule,\n  ],\n  exports: [IndexRokComponent],\n})\nexport class IndexRokModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from '@app/environment';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss'],\n})\nexport class IndexComponent implements OnInit {\n  env = environment;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-index-default *ngIf=\"env.ui === 'default'\"></app-index-default>\n<app-index-rok *ngIf=\"env.ui === 'rok'\"></app-index-rok>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { IndexRokModule } from './index-rok/index-rok.module';\nimport { IndexDefaultModule } from './index-default/index-default.module';\nimport { IndexComponent } from './index.component';\nimport { ServerTypeComponent } from './index-default/server-type/server-type.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [IndexComponent, ServerTypeComponent],\n  imports: [\n    CommonModule,\n    IndexRokModule,\n    IndexDefaultModule,\n    MatIconModule,\n    MatTooltipModule,\n  ],\n})\nexport class IndexModule {}\n","import { Injectable } from '@angular/core';\nimport { BackendService, SnackBarService } from 'kubeflow';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  NotebookResponseObject,\n  JWABackendResponse,\n  Config,\n  Volume,\n  PodDefault,\n  NotebookFormObject,\n  NotebookProcessedObject,\n} from '../types';\n@Injectable({\n  providedIn: 'root',\n})\nexport class JWABackendService extends BackendService {\n  constructor(public http: HttpClient, public snackBar: SnackBarService) {\n    super(http, snackBar);\n  }\n\n  // GET\n  public getNotebooks(namespace: string): Observable<NotebookResponseObject[]> {\n    const url = `api/namespaces/${namespace}/notebooks`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map((resp: JWABackendResponse) => {\n        return resp.notebooks;\n      }),\n    );\n  }\n\n  public getConfig(): Observable<Config> {\n    const url = `api/config`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map(data => {\n        return data.config;\n      }),\n    );\n  }\n\n  public getVolumes(ns: string): Observable<Volume[]> {\n    // Get existing PVCs in a namespace\n    const url = `api/namespaces/${ns}/pvcs`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map(data => {\n        return data.pvcs;\n      }),\n    );\n  }\n\n  public getPodDefaults(ns: string): Observable<PodDefault[]> {\n    // Get existing PodDefaults in a namespace\n    const url = `api/namespaces/${ns}/poddefaults`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map(data => {\n        return data.poddefaults;\n      }),\n    );\n  }\n\n  public getGPUVendors(): Observable<string[]> {\n    // Get installed GPU vendors\n    const url = `api/gpus`;\n\n    return this.http.get<JWABackendResponse>(url).pipe(\n      catchError(error => this.handleError(error)),\n      map(data => data.vendors),\n    );\n  }\n\n  // POST\n  public createNotebook(notebook: NotebookFormObject): Observable<string> {\n    const url = `api/namespaces/${notebook.namespace}/notebooks`;\n\n    return this.http.post<JWABackendResponse>(url, notebook).pipe(\n      catchError(error => this.handleError(error)),\n      map(_ => {\n        return 'posted';\n      }),\n    );\n  }\n\n  // PATCH\n  public startNotebook(notebook: NotebookProcessedObject): Observable<string> {\n    const name = notebook.name;\n    const namespace = notebook.namespace;\n    const url = `api/namespaces/${namespace}/notebooks/${name}`;\n\n    return this.http.patch<JWABackendResponse>(url, { stopped: false }).pipe(\n      catchError(error => this.handleError(error)),\n      map(_ => {\n        return 'started';\n      }),\n    );\n  }\n\n  public stopNotebook(notebook: NotebookProcessedObject): Observable<string> {\n    const name = notebook.name;\n    const namespace = notebook.namespace;\n    const url = `api/namespaces/${namespace}/notebooks/${name}`;\n\n    return this.http.patch<JWABackendResponse>(url, { stopped: true }).pipe(\n      catchError(error => this.handleError(error, false)),\n      map(_ => {\n        return 'stopped';\n      }),\n    );\n  }\n\n  // DELETE\n  public deleteNotebook(namespace: string, name: string) {\n    const url = `api/namespaces/${namespace}/notebooks/${name}`;\n\n    return this.http\n      .delete<JWABackendResponse>(url)\n      .pipe(catchError(error => this.handleError(error, false)));\n  }\n}\n","import { Status, BackendResponse } from 'kubeflow';\n\nexport interface JWABackendResponse extends BackendResponse {\n  notebooks?: NotebookResponseObject[];\n  pvcs?: Volume[];\n  config?: Config;\n  poddefaults?: PodDefault[];\n  vendors?: string[];\n}\n\nexport type ServerType = 'jupyter' | 'group-one' | 'group-two';\n\nexport interface NotebookResponseObject {\n  name: string;\n  namespace: string;\n  serverType: ServerType;\n  status: Status;\n  reason: string;\n  age: string;\n  image: string;\n  volumes: string[];\n  cpu: string;\n  memory: string;\n  gpus: {\n    count: number;\n    message: string;\n  };\n  environment: string;\n  shortImage: string;\n}\n\nexport interface NotebookProcessedObject extends NotebookResponseObject {\n  deleteAction?: string;\n  connectAction?: string;\n  startStopAction?: string;\n}\n\nexport interface NotebookFormObject {\n  name: string;\n  namespace: string;\n  image: string;\n  imageGroupOne: string;\n  imageGroupTwo: string;\n  allowCustomImage: boolean;\n  imagePullPolicy: string;\n  customImage?: string;\n  customImageCheck: boolean;\n  serverType: string;\n  cpu: number | string;\n  cpuLimit: number | string;\n  memory: number | string;\n  memoryLimit: number | string;\n  gpus: GPU;\n  environment?: string;\n  noWorkspace: boolean;\n  workspace: Volume;\n  datavols: Volume[];\n  shm: boolean;\n  configurations: PodDefault[];\n}\n\nexport interface Volume {\n  name: string;\n  size: number;\n  namepsace?: string;\n  class?: string;\n  mode: string;\n  type?: string;\n  path: string;\n  extraFields?: { [key: string]: any };\n  templatedName?: string;\n}\n\nexport function emptyVolume(): Volume {\n  return {\n    type: '',\n    name: '',\n    size: 1,\n    path: '',\n    mode: '',\n    extraFields: {},\n    templatedName: '',\n  };\n}\n\n// Types of the Configuration with default values from backend\nexport interface PodDefault {\n  label: string;\n  desc: string;\n}\n\nexport interface AffinityConfig {\n  configKey: string;\n  displayName: string;\n  affinity: object;\n}\n\nexport interface TolerationGroup {\n  groupKey: string;\n  displayName: string;\n  tolerations: Toleration[];\n}\n\nexport interface Toleration {\n  key: string;\n  operator: string;\n  value: string;\n  effect: string;\n  tolerationSeconds?: bigint;\n}\n\nexport interface GPUVendor {\n  limitsKey: string;\n  uiName: string;\n}\n\nexport interface GPU {\n  vendor?: string;\n  num?: string;\n  vendors?: GPUVendor[];\n}\n\nexport interface ConfigVolume {\n  type: {\n    value: string;\n  };\n  name: {\n    value: string;\n  };\n  size: {\n    value: string;\n  };\n  mountPath: {\n    value: string;\n  };\n  accessModes: {\n    value: string;\n  };\n}\n\nexport interface Config {\n  image?: {\n    value: string;\n    options: string[];\n  };\n\n  imageGroupOne?: {\n    value: string;\n    options: string[];\n  };\n\n  imageGroupTwo?: {\n    value: string;\n    options: string[];\n  };\n\n  hideRegistry?: boolean;\n\n  hideTag?: boolean;\n\n  allowCustomImage?: boolean;\n\n  imagePullPolicy?: {\n    value: string;\n    readOnly?: boolean;\n  };\n\n  cpu?: {\n    value: string;\n    limitFactor: string;\n    readOnly?: boolean;\n  };\n\n  memory?: {\n    value: string;\n    limitFactor: string;\n    readOnly?: boolean;\n  };\n\n  environment?: {\n    value: string;\n    readOnly?: boolean;\n  };\n\n  workspaceVolume?: {\n    value: ConfigVolume;\n    readOnly?: boolean;\n  };\n\n  dataVolumes?: {\n    value: {\n      value: ConfigVolume;\n    }[];\n    readOnly?: boolean;\n  };\n\n  affinityConfig?: {\n    value: string;\n    options: AffinityConfig[];\n    readOnly?: boolean;\n  };\n\n  tolerationGroup?: {\n    value: string;\n    options: TolerationGroup[];\n    readOnly?: boolean;\n  };\n\n  shm?: {\n    value: boolean;\n    readOnly?: boolean;\n  };\n\n  gpus?: {\n    value?: GPU;\n    readOnly?: boolean;\n  };\n\n  configurations?: {\n    value: string[];\n    readOnly?: boolean;\n  };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000',\n  resource: 'notebooks',\n  ui: 'default',\n  jupyterlabLogo: 'static/assets/logos/jupyterlab-logo.svg',\n  jupyterIcon: 'static/assets/logos/jupyter-icon.svg',\n  groupOneLogo: 'static/assets/logos/group-one-logo.svg',\n  groupOneIcon: 'static/assets/logos/group-one-icon.svg',\n  groupTwoLogo: 'static/assets/logos/group-two-logo.svg',\n  groupTwoIcon: 'static/assets/logos/group-two-icon.svg',\n\n  // Rok specifics\n  rokUrl: '',\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}